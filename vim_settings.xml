<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/descriptors/MessageDataDescriptor.java" timestamp="1559053809886">
        <mark key="'" line="239" column="41" />
        <mark key="[" line="226" column="56" />
        <mark key="]" line="226" column="59" />
        <mark key="^" line="226" column="59" />
        <mark key="." line="226" column="59" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/utilities/SeqAMPIDManager.java" timestamp="1556183181059">
        <mark key="'" line="57" column="0" />
        <mark key="[" line="28" column="52" />
        <mark key="]" line="23" column="27" />
        <mark key="." line="23" column="27" />
        <mark key="^" line="23" column="27" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/descriptors/AmpDocDataDescriptor.java" timestamp="1556109598831">
        <mark key="'" line="207" column="0" />
        <mark key="[" line="13" column="35" />
        <mark key="]" line="13" column="44" />
        <mark key="." line="13" column="44" />
        <mark key="^" line="13" column="44" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/companies_checkin_req/descriptors/MessageDataDescriptor.java" timestamp="1559136425828">
        <mark key="'" line="256" column="37" />
        <mark key="[" line="258" column="0" />
        <mark key="]" line="258" column="0" />
        <mark key="^" line="248" column="52" />
        <mark key="." line="258" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/sql_snippets/OPEN_POST_BUG2.sql" timestamp="1559737516724" />
      <file name="$USER_HOME$/projects/port-checkin-control/src/tmsaconfpdf/ConfirmationPdf.java" timestamp="1559122904040">
        <mark key="'" line="355" column="45" />
        <mark key="[" line="355" column="5" />
        <mark key="]" line="355" column="45" />
        <mark key="^" line="355" column="37" />
        <mark key="." line="355" column="37" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/ConfirmationPass.java" timestamp="1556108193150">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="491" column="0" />
        <mark key="." line="53" column="17" />
        <mark key="^" line="53" column="17" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/sms/account.txt" timestamp="1559044260135">
        <mark key="'" line="20" column="0" />
        <mark key="[" line="36" column="0" />
        <mark key="]" line="47" column="0" />
        <mark key="." line="47" column="0" />
        <mark key="^" line="47" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/alert_config_UPDATE_TRANSFER.sql" timestamp="1557494568307">
        <mark key="'" line="2" column="211" />
        <mark key="[" line="5" column="45" />
        <mark key="]" line="5" column="44" />
        <mark key="." line="5" column="44" />
        <mark key="^" line="5" column="44" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/NewDepartureTicketDataXSD/GetAllTicketsRS_SAMPLE_XML.xml" timestamp="1559199584591">
        <mark key="[" line="11" column="38" />
        <mark key="]" line="11" column="52" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/sql_snippets/_OPEN_POST_BUG.sql" timestamp="1559544389755">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="77" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/AmpDocHandler.java" timestamp="1559118704804">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="310" column="0" />
        <mark key="^" line="14" column="76" />
        <mark key="." line="14" column="76" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/docs/assets/FERRY_OPERATOR_DASHBOARD_RQ.xml" timestamp="1559555804483">
        <mark key="[" line="11" column="58" />
        <mark key="]" line="11" column="81" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/AmpDocPrint.java" timestamp="1559130962090">
        <mark key="'" line="72" column="58" />
        <mark key="[" line="117" column="34" />
        <mark key="]" line="117" column="25" />
        <mark key="^" line="117" column="25" />
        <mark key="." line="117" column="25" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/EMBARKDTA_CONF_VW.sql" timestamp="1557756152673">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="51" />
        <mark key="]" line="137" column="32" />
        <mark key="." line="137" column="32" />
        <mark key="^" line="137" column="32" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/port-checkin-control.xml" timestamp="1558002566718">
        <mark key="'" line="154" column="8" />
        <mark key="[" line="154" column="0" />
        <mark key="]" line="154" column="0" />
        <mark key="." line="154" column="0" />
        <mark key="^" line="154" column="46" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" timestamp="1559567036600">
        <mark key="'" line="420" column="43" />
        <mark key="[" line="402" column="0" />
        <mark key="]" line="410" column="72" />
        <mark key="n" line="55" column="51" />
        <mark key="^" line="410" column="72" />
        <mark key="." line="410" column="72" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/serverrepository/BatchUpdateReaderForConfirmation.java" timestamp="1559656583654">
        <mark key="'" line="1049" column="2" />
        <mark key="[" line="1049" column="2" />
        <mark key="]" line="1054" column="43" />
        <mark key="." line="266" column="7" />
        <mark key="^" line="266" column="7" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/devLibs/axis2/bin/userguide.bat" timestamp="1557991225494">
        <mark key="'" line="7" column="36" />
        <mark key="[" line="9" column="0" />
        <mark key="]" line="9" column="3" />
        <mark key="^" line="9" column="3" />
        <mark key="." line="9" column="3" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/sql/cheatsheet.sql" timestamp="1553613415396">
        <mark key="'" line="19" column="0" />
        <mark key="[" line="23" column="69" />
        <mark key="]" line="28" column="0" />
        <mark key="^" line="28" column="0" />
        <mark key="." line="28" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/xml-resources/XML_SCHEMAS_PORT_CONTROL/1_companies_checkin_req.xsd" timestamp="1559135060171">
        <mark key="'" line="67" column="80" />
        <mark key="[" line="67" column="59" />
        <mark key="]" line="67" column="81" />
        <mark key="^" line="67" column="58" />
        <mark key="." line="67" column="59" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/ItineraryData.java" timestamp="1556097131372">
        <mark key="'" line="1615" column="2" />
        <mark key="[" line="1564" column="39" />
        <mark key="]" line="1564" column="64" />
        <mark key="." line="1564" column="64" />
        <mark key="^" line="1564" column="64" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/SmsHandler.java" timestamp="1558435019767">
        <mark key="'" line="56" column="33" />
        <mark key="[" line="40" column="31" />
        <mark key="]" line="40" column="32" />
        <mark key="^" line="40" column="32" />
        <mark key="." line="40" column="32" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/gen_scripts/amp.bat" timestamp="1558689917455">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="434" />
        <mark key="]" line="0" column="461" />
        <mark key="." line="0" column="461" />
        <mark key="^" line="0" column="461" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messageHistory/descriptors/BookingDescriptor.java" timestamp="1556092164519">
        <mark key="'" line="106" column="0" />
        <mark key="[" line="106" column="0" />
        <mark key="]" line="143" column="37" />
        <mark key="." line="135" column="41" />
        <mark key="^" line="135" column="41" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/add_parameters.sql" timestamp="1559203569155">
        <mark key="'" line="23" column="0" />
        <mark key="[" line="22" column="0" />
        <mark key="]" line="22" column="0" />
        <mark key="^" line="35" column="68" />
        <mark key="." line="22" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/dist/configure.xml" timestamp="1554894981278">
        <mark key="'" line="172" column="17" />
        <mark key="[" line="162" column="22" />
        <mark key="]" line="162" column="20" />
        <mark key="." line="162" column="20" />
        <mark key="^" line="162" column="20" />
      </file>
      <file name="/BoardingPassHandler.java" timestamp="1559743587539">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="1991" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/ITINENQ_CONF_VW.sql" timestamp="1557301071939">
        <mark key="'" line="11" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="103" column="28" />
        <mark key="^" line="49" column="41" />
        <mark key="." line="49" column="41" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/EmbarkationData.java" timestamp="1556110394490">
        <mark key="'" line="296" column="40" />
        <mark key="[" line="302" column="23" />
        <mark key="]" line="302" column="32" />
        <mark key="^" line="302" column="32" />
        <mark key="." line="302" column="32" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/add_registration_number_to_AMP.sql" timestamp="1559116185215">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="7" column="61" />
        <mark key="." line="8" column="0" />
        <mark key="^" line="8" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/serverrepository/BatchUpdateReader.java" timestamp="1559641617840">
        <mark key="'" line="1003" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/devLibs/axis2/build.xml" timestamp="1557997300127">
        <mark key="'" line="69" column="0" />
        <mark key="[" line="69" column="0" />
        <mark key="]" line="79" column="12" />
        <mark key="." line="71" column="40" />
        <mark key="^" line="71" column="40" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/docs/assets/ITINERARY_ENQUIRY_TICKET_RS.xml" timestamp="1559291828256">
        <mark key="'" line="25" column="70" />
        <mark key="[" line="25" column="65" />
        <mark key="]" line="25" column="71" />
        <mark key="." line="25" column="65" />
        <mark key="^" line="25" column="64" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/ALERT_VW.sql" timestamp="1558519822016">
        <mark key="'" line="11" column="12" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="50" column="58" />
        <mark key="^" line="30" column="44" />
        <mark key="." line="30" column="44" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/security/PasswordService.java" timestamp="1558088171087">
        <mark key="'" line="71" column="0" />
        <mark key="[" line="51" column="11" />
        <mark key="]" line="51" column="21" />
        <mark key="^" line="51" column="21" />
        <mark key="." line="51" column="21" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/db_migrations/0000_add_parameters.sql" timestamp="1559310037349">
        <mark key="'" line="20" column="174" />
        <mark key="[" line="20" column="111" />
        <mark key="]" line="20" column="175" />
        <mark key="^" line="20" column="110" />
        <mark key="." line="20" column="111" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/BaseWorker.java" timestamp="1559645375563">
        <mark key="'" line="1870" column="10" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/companies_checkin_req/MessageData.java" timestamp="1559136016878">
        <mark key="'" line="408" column="2" />
        <mark key="[" line="407" column="29" />
        <mark key="]" line="407" column="31" />
        <mark key="." line="407" column="31" />
        <mark key="^" line="407" column="31" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/docs/assets/FERRY_OPERATOR_DASHBOARD_ITINERARIES_RQ.xml" timestamp="1559554162994">
        <mark key="[" line="22" column="33" />
        <mark key="]" line="22" column="68" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/serverrepository/HttpHandlerSecondary.java" timestamp="1559113086420">
        <mark key="'" line="202" column="66" />
        <mark key="[" line="204" column="41" />
        <mark key="]" line="204" column="40" />
        <mark key="^" line="204" column="40" />
        <mark key="." line="204" column="40" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/CONFDTA_VW.sql" timestamp="1554186464881">
        <mark key="'" line="43" column="1" />
        <mark key="[" line="43" column="1" />
        <mark key="]" line="44" column="53" />
        <mark key="^" line="36" column="30" />
        <mark key="." line="36" column="30" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/tmsaconfpdf/AmpPdf.java" timestamp="1559126264900">
        <mark key="'" line="75" column="4" />
        <mark key="[" line="49" column="24" />
        <mark key="]" line="49" column="24" />
        <mark key="^" line="49" column="24" />
        <mark key="." line="49" column="24" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" timestamp="1559717284894">
        <mark key="'" line="1844" column="6" />
        <mark key="[" line="1840" column="8" />
        <mark key="]" line="1844" column="7" />
        <mark key="^" line="1840" column="7" />
        <mark key="." line="1840" column="8" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/sql/EMBDTA_ERADICATE_MJLTIPLES.sql" timestamp="1557757089212">
        <mark key="'" line="31" column="35" />
        <mark key="[" line="67" column="5" />
        <mark key="]" line="53" column="23" />
        <mark key="." line="53" column="23" />
        <mark key="^" line="53" column="23" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/ConfirmationPassPrint.java" timestamp="1558521717177">
        <mark key="'" line="268" column="118" />
        <mark key="[" line="331" column="0" />
        <mark key="]" line="331" column="0" />
        <mark key="^" line="268" column="127" />
        <mark key="." line="331" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/insert_sms_settings.sql" timestamp="1559202904974">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="6" column="17" />
        <mark key="." line="3" column="76" />
        <mark key="^" line="3" column="76" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/utilities/DateUtils.java" timestamp="1559200351427">
        <mark key="'" line="184" column="67" />
        <mark key="[" line="185" column="0" />
        <mark key="]" line="185" column="0" />
        <mark key="." line="185" column="0" />
        <mark key="^" line="184" column="86" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/serverrepository/AlertDaemon.java" timestamp="1559044728665">
        <mark key="'" line="13" column="0" />
        <mark key="[" line="28" column="0" />
        <mark key="]" line="28" column="75" />
        <mark key="." line="12" column="0" />
        <mark key="^" line="12" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/boarding/BoardingPassHandler.java" timestamp="1559741855626" />
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/descriptors/EmbarkationDataDescriptor.java" timestamp="1556110590871">
        <mark key="'" line="288" column="37" />
        <mark key="[" line="284" column="47" />
        <mark key="]" line="284" column="36" />
        <mark key="." line="284" column="36" />
        <mark key="^" line="284" column="36" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/nbproject/project.properties" timestamp="1558616959451">
        <mark key="'" line="137" column="51" />
        <mark key="[" line="137" column="22" />
        <mark key="]" line="137" column="20" />
        <mark key="^" line="137" column="20" />
        <mark key="." line="137" column="20" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/TicketEnquiry.java" timestamp="1559218750143">
        <mark key="'" line="1016" column="93" />
        <mark key="[" line="838" column="35" />
        <mark key="]" line="844" column="23" />
        <mark key="^" line="844" column="23" />
        <mark key="." line="844" column="23" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/companies_checkin_req/descriptors/TicketDescriptor.java" timestamp="1558600049869">
        <mark key="'" line="77" column="54" />
        <mark key="[" line="101" column="0" />
        <mark key="]" line="101" column="0" />
        <mark key="^" line="77" column="32" />
        <mark key="." line="101" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/CompaniesIndex.java" timestamp="1557315968221">
        <mark key="'" line="205" column="52" />
        <mark key="[" line="205" column="12" />
        <mark key="]" line="205" column="53" />
        <mark key="^" line="205" column="11" />
        <mark key="." line="205" column="12" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/devLibs/axis2/bin/wsdl2java.bat" timestamp="1557920812421">
        <mark key="'" line="38" column="13" />
        <mark key="[" line="38" column="13" />
        <mark key="]" line="38" column="54" />
        <mark key="." line="50" column="43" />
        <mark key="^" line="50" column="43" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/descriptors/AmpDocDescriptor.java" timestamp="1559118453236">
        <mark key="'" line="271" column="37" />
        <mark key="[" line="273" column="0" />
        <mark key="]" line="273" column="0" />
        <mark key="^" line="263" column="48" />
        <mark key="." line="273" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/add_registration_number_to_AMP_HISTORY.sql" timestamp="1559129239243">
        <mark key="'" line="7" column="61" />
        <mark key="[" line="7" column="0" />
        <mark key="]" line="7" column="0" />
        <mark key="." line="7" column="0" />
        <mark key="^" line="7" column="43" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/insert_recall_itineraries_for_confirm_day_range.sql" timestamp="1559202726129">
        <mark key="'" line="1" column="0" />
        <mark key="[" line="1" column="0" />
        <mark key="]" line="1" column="166" />
        <mark key="." line="1" column="164" />
        <mark key="^" line="1" column="164" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/insert_email_settings.sql" timestamp="1559202898138">
        <mark key="'" line="1" column="0" />
        <mark key="[" line="6" column="107" />
        <mark key="]" line="6" column="106" />
        <mark key="^" line="6" column="106" />
        <mark key="." line="6" column="106" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/HISTORYCONFDETAILS_VW.sql" timestamp="1556089601240">
        <mark key="'" line="20" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="39" column="55" />
        <mark key="." line="6" column="12" />
        <mark key="^" line="6" column="12" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/sms/McmsWebService.java" timestamp="1558087689315">
        <mark key="'" line="55" column="28" />
        <mark key="[" line="55" column="28" />
        <mark key="]" line="55" column="54" />
        <mark key="^" line="25" column="62" />
        <mark key="." line="25" column="62" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/sms/SmsSenderSOAP.java" timestamp="1558683318517">
        <mark key="'" line="171" column="0" />
        <mark key="[" line="48" column="18" />
        <mark key="]" line="48" column="21" />
        <mark key="." line="48" column="21" />
        <mark key="^" line="48" column="21" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/gen_scripts/castor_sms.bat" timestamp="1558689069887">
        <mark key="'" line="0" column="396" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="456" />
        <mark key="." line="0" column="334" />
        <mark key="^" line="0" column="333" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/devLibs/axis2/bin/client.bat" timestamp="1557987949497">
        <mark key="'" line="7" column="32" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="7" column="33" />
        <mark key="^" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/departureTicketCP/DepartureTicketDataCPRS_S.xml" timestamp="1559551488008">
        <mark key="'" line="125" column="15" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="126" column="18" />
        <mark key="^" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/serverrepository/FetchAllTicketsFromCompanyResponseHandler.java" timestamp="1559139466347">
        <mark key="'" line="1292" column="0" />
        <mark key="[" line="64" column="9" />
        <mark key="]" line="64" column="54" />
        <mark key="." line="64" column="54" />
        <mark key="^" line="64" column="54" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/BoardingPassHandler.java" timestamp="1559034014665">
        <mark key="'" line="2040" column="4" />
        <mark key="[" line="2011" column="2" />
        <mark key="]" line="2040" column="5" />
        <mark key="." line="2011" column="2" />
        <mark key="^" line="2011" column="1" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" timestamp="1559741390167">
        <mark key="'" line="1570" column="81" />
        <mark key="[" line="1757" column="39" />
        <mark key="]" line="1757" column="39" />
        <mark key="^" line="436" column="28" />
        <mark key="." line="1757" column="39" />
        <mark key="n" line="1757" column="39" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/amp/issue_report.txt" timestamp="1559132054091">
        <mark key="'" line="37" column="109" />
        <mark key="[" line="37" column="110" />
        <mark key="]" line="38" column="47" />
        <mark key="^" line="38" column="47" />
        <mark key="." line="38" column="47" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/AMP_ISSUE_PRINT_REQ2.xsd" timestamp="1558688751664">
        <mark key="'" line="4" column="54" />
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="55" />
        <mark key="^" line="144" column="67" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/alert_config_UPDATE.sql" timestamp="1557470622985">
        <mark key="'" line="1" column="0" />
        <mark key="[" line="1" column="0" />
        <mark key="]" line="2" column="426" />
        <mark key="^" line="2" column="15" />
        <mark key="." line="2" column="16" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/FetchBookingDataOnlineForConfirmation.java" timestamp="1559550242848">
        <mark key="'" line="274" column="77" />
        <mark key="[" line="274" column="77" />
        <mark key="]" line="274" column="98" />
        <mark key="." line="241" column="47" />
        <mark key="^" line="241" column="47" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/serverrepository/BatchUpdateOpenTickReader.java" timestamp="1555401303948">
        <mark key="'" line="297" column="3" />
        <mark key="[" line="53" column="1" />
        <mark key="]" line="53" column="0" />
        <mark key="^" line="53" column="0" />
        <mark key="." line="53" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/castor_gen_scripts/sms.bat" timestamp="1557921675882">
        <mark key="'" line="5" column="89" />
        <mark key="[" line="5" column="97" />
        <mark key="]" line="5" column="0" />
        <mark key="^" line="5" column="0" />
        <mark key="." line="5" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/alert_config_UPDATE_NON_SHOW.sql" timestamp="1557494281178">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="6" column="45" />
        <mark key="." line="5" column="77" />
        <mark key="^" line="5" column="77" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/sql/OPEN_POST_BUG2.sql" timestamp="1558695118154">
        <mark key="'" line="6" column="0" />
        <mark key="[" line="6" column="0" />
        <mark key="]" line="16" column="66" />
        <mark key="." line="4" column="0" />
        <mark key="^" line="6" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/add_pdf_url_and_path_to_alertline.sql" timestamp="1559114482144">
        <mark key="'" line="6" column="21" />
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="0" />
        <mark key="." line="5" column="0" />
        <mark key="^" line="3" column="8" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/tmsaconfpdf/BoardingPdf.java" timestamp="1558362006697">
        <mark key="'" line="357" column="6" />
        <mark key="[" line="357" column="6" />
        <mark key="]" line="357" column="115" />
        <mark key="." line="352" column="37" />
        <mark key="^" line="352" column="26" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/docs/assets/CONFPASS_RETRIEVE_RS.xml" timestamp="1559311298635">
        <mark key="'" line="102" column="16" />
        <mark key="[" line="74" column="51" />
        <mark key="]" line="74" column="13" />
        <mark key="." line="74" column="13" />
        <mark key="^" line="74" column="13" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/sql_snippets/ticket_issue.sql" timestamp="1559716978009">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="28" column="25" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/tmsaconfpdf/CPassengers.java" timestamp="1554705150241">
        <mark key="'" line="251" column="0" />
        <mark key="[" line="251" column="0" />
        <mark key="]" line="265" column="2" />
        <mark key="^" line="266" column="1" />
        <mark key="." line="32" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/serverrepository/OpenTicketReaderForConfirmaion.java" timestamp="1552997949794">
        <mark key="'" line="2" column="0" />
        <mark key="[" line="22" column="52" />
        <mark key="]" line="22" column="76" />
        <mark key="^" line="22" column="76" />
        <mark key="." line="22" column="76" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/serverrepository/FetchAllTicketsFromFerryCompanyReader.java" timestamp="1559139677190">
        <mark key="'" line="45" column="93" />
        <mark key="[" line="45" column="1" />
        <mark key="]" line="45" column="1" />
        <mark key="^" line="45" column="1" />
        <mark key="." line="45" column="1" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/utilities/EmailSender.java" timestamp="1558535230717">
        <mark key="'" line="178" column="94" />
        <mark key="[" line="178" column="22" />
        <mark key="]" line="178" column="22" />
        <mark key="^" line="178" column="22" />
        <mark key="." line="178" column="22" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/ItinerariesEnquiry.java" timestamp="1557734488541">
        <mark key="'" line="167" column="84" />
        <mark key="[" line="167" column="82" />
        <mark key="]" line="168" column="11" />
        <mark key="^" line="168" column="11" />
        <mark key="." line="168" column="11" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/AmpDoc.java" timestamp="1559118414257">
        <mark key="'" line="439" column="2" />
        <mark key="[" line="436" column="17" />
        <mark key="]" line="436" column="34" />
        <mark key="." line="436" column="34" />
        <mark key="^" line="436" column="34" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/types/ReportTypeEnum.java" timestamp="1559556658216">
        <mark key="'" line="135" column="39" />
        <mark key="[" line="135" column="39" />
        <mark key="]" line="135" column="58" />
        <mark key="^" line="139" column="37" />
        <mark key="." line="139" column="37" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/0110_create_amp_dates.sql" timestamp="1559206265277">
        <mark key="'" line="4" column="66" />
        <mark key="[" line="4" column="3" />
        <mark key="]" line="4" column="0" />
        <mark key="^" line="4" column="0" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/sql/_OPEN_POST_BUG.sql" timestamp="1557324152260">
        <mark key="'" line="5" column="62" />
        <mark key="[" line="2" column="0" />
        <mark key="]" line="2" column="82" />
        <mark key="^" line="1" column="0" />
        <mark key="." line="5" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/docs/assets/ITINERARY_ENQUIRY_TICKET_RQ.xml" timestamp="1559221228772">
        <mark key="'" line="20" column="67" />
        <mark key="[" line="24" column="0" />
        <mark key="]" line="24" column="0" />
        <mark key="^" line="23" column="68" />
        <mark key="." line="23" column="70" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/ConfirmationPassRetrieve.java" timestamp="1559310877108">
        <mark key="'" line="117" column="14" />
        <mark key="[" line="117" column="132" />
        <mark key="]" line="117" column="131" />
        <mark key="." line="117" column="131" />
        <mark key="^" line="117" column="131" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/NewPanels.java" timestamp="1559309181232">
        <mark key="[" line="144" column="0" />
        <mark key="]" line="144" column="35" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/insert_alternate_open_recall.sql" timestamp="1554106430184">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="2" column="17" />
        <mark key="." line="0" column="0" />
        <mark key="^" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/0020_add_iface_pars_percomp.sql" timestamp="1559204080657">
        <mark key="'" line="6" column="24" />
        <mark key="[" line="7" column="0" />
        <mark key="]" line="7" column="0" />
        <mark key="^" line="6" column="23" />
        <mark key="." line="7" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/descriptors/BoardPassDescriptor.java" timestamp="1555922789917">
        <mark key="'" line="270" column="37" />
        <mark key="[" line="246" column="30" />
        <mark key="]" line="246" column="30" />
        <mark key="^" line="246" column="18" />
        <mark key="." line="246" column="38" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/HistoryWithConfirmationsWorker.java" timestamp="1559739398519">
        <mark key="'" line="77" column="156" />
        <mark key="[" line="80" column="0" />
        <mark key="]" line="80" column="0" />
        <mark key="^" line="80" column="20" />
        <mark key="." line="80" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/AmpDocData.java" timestamp="1557213160840">
        <mark key="'" line="167" column="0" />
        <mark key="[" line="110" column="37" />
        <mark key="]" line="110" column="42" />
        <mark key="." line="110" column="42" />
        <mark key="^" line="110" column="42" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/OpenTicketForConfirmationEnquiry.java" timestamp="1559550629501">
        <mark key="'" line="172" column="14" />
        <mark key="[" line="320" column="72" />
        <mark key="]" line="320" column="67" />
        <mark key="^" line="320" column="67" />
        <mark key="." line="320" column="67" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/ItinerariesConfirmationEnquiry.java" timestamp="1555332994322">
        <mark key="'" line="163" column="113" />
        <mark key="[" line="149" column="22" />
        <mark key="]" line="149" column="23" />
        <mark key="." line="149" column="23" />
        <mark key="^" line="149" column="23" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/README.md" timestamp="1558000495332">
        <mark key="'" line="59" column="93" />
        <mark key="[" line="59" column="13" />
        <mark key="]" line="59" column="23" />
        <mark key="^" line="59" column="23" />
        <mark key="." line="59" column="23" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/utilities/SeqAlertIDManager.java" timestamp="1553599951734">
        <mark key="'" line="12" column="30" />
        <mark key="[" line="16" column="18" />
        <mark key="]" line="16" column="34" />
        <mark key="^" line="16" column="34" />
        <mark key="." line="16" column="34" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/insertTicketVerifyCPtoIFACE_PARS_PERCOMP.sql" timestamp="1559204025494">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="406" />
      </file>
      <file name="/Dummy.txt" timestamp="1559735334501">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/devLibs/axis2/bin/sms.bat" timestamp="1557991128462">
        <mark key="'" line="6" column="0" />
        <mark key="[" line="6" column="0" />
        <mark key="]" line="6" column="36" />
        <mark key="." line="8" column="14" />
        <mark key="^" line="8" column="14" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/serverrepository/OpenTicketReaderForConfirmation.java" timestamp="1553765044161">
        <mark key="'" line="28" column="43" />
        <mark key="[" line="142" column="18" />
        <mark key="]" line="142" column="11" />
        <mark key="^" line="142" column="11" />
        <mark key="." line="142" column="11" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/FerryOperatorDashBoardItinerariesHandler.java" timestamp="1555320408495">
        <mark key="'" line="51" column="0" />
        <mark key="[" line="58" column="33" />
        <mark key="]" line="58" column="33" />
        <mark key="^" line="58" column="33" />
        <mark key="." line="58" column="33" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/devLibs/axis2/bin/axis2.bat" timestamp="1557915410645">
        <mark key="'" line="54" column="42" />
        <mark key="[" line="49" column="0" />
        <mark key="]" line="49" column="44" />
        <mark key="^" line="55" column="3" />
        <mark key="." line="55" column="3" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/CountriesIndex.java" timestamp="1557737554608">
        <mark key="'" line="174" column="37" />
        <mark key="[" line="174" column="58" />
        <mark key="]" line="174" column="52" />
        <mark key="." line="174" column="52" />
        <mark key="^" line="174" column="52" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/xml/messageHistory/Booking.java" timestamp="1556091996276">
        <mark key="'" line="180" column="0" />
        <mark key="[" line="180" column="0" />
        <mark key="]" line="188" column="2" />
        <mark key="." line="187" column="20" />
        <mark key="^" line="187" column="20" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/configure.xml" timestamp="1559051852080">
        <mark key="'" line="9" column="0" />
        <mark key="[" line="160" column="20" />
        <mark key="]" line="160" column="23" />
        <mark key="." line="160" column="23" />
        <mark key="^" line="160" column="23" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/FetchAllTicketsFromFerryCompany.java" timestamp="1559200603715">
        <mark key="'" line="161" column="10" />
        <mark key="[" line="34" column="0" />
        <mark key="]" line="34" column="0" />
        <mark key="^" line="161" column="96" />
        <mark key="." line="34" column="0" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/FetchBookingDataOnline.java" timestamp="1559641766887">
        <mark key="'" line="92" column="2" />
        <mark key="[" line="309" column="5" />
        <mark key="]" line="309" column="2" />
        <mark key="^" line="309" column="2" />
        <mark key="." line="309" column="2" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/tmsaconfpdf/CVehicles.java" timestamp="1554705155485">
        <mark key="'" line="172" column="2" />
        <mark key="[" line="158" column="2" />
        <mark key="]" line="172" column="3" />
        <mark key="^" line="173" column="1" />
        <mark key="." line="158" column="2" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/ConfirmationPassHandler.java" timestamp="1559305381989">
        <mark key="'" line="179" column="10" />
        <mark key="[" line="353" column="39" />
        <mark key="]" line="353" column="37" />
        <mark key="^" line="353" column="37" />
        <mark key="." line="353" column="37" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/AmpDocCheckHandler.java" timestamp="1559129037786">
        <mark key="'" line="85" column="123" />
        <mark key="[" line="84" column="55" />
        <mark key="]" line="84" column="55" />
        <mark key="^" line="84" column="55" />
        <mark key="." line="84" column="55" />
      </file>
      <file name="/fragment.java" timestamp="1559736522204">
        <mark key="'" line="0" column="39" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="3" />
        <mark key="^" line="0" column="3" />
        <mark key="." line="0" column="3" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/db_migrations/AMP.sql" timestamp="1556179602907">
        <mark key="'" line="100" column="55" />
        <mark key="[" line="100" column="3" />
        <mark key="]" line="100" column="18" />
        <mark key="^" line="100" column="18" />
        <mark key="." line="100" column="18" />
      </file>
      <file name="$USER_HOME$/projects/port-checkin-control/documentation/AMP_ISSUE_PRINT_REQ2.xml" timestamp="1558687847120">
        <mark key="'" line="22" column="202" />
        <mark key="[" line="10" column="42" />
        <mark key="]" line="10" column="48" />
        <mark key="^" line="10" column="48" />
        <mark key="." line="10" column="48" />
      </file>
    </filemarks>
    <jumps>
      <jump line="207" column="159" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="216" column="3" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="217" column="53" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="218" column="3" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="1277" column="79" filename="$USER_HOME$/projects/port-checkin-control/src/serverrepository/BatchUpdateReaderForConfirmation.java" />
      <jump line="194" column="0" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="214" column="17" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="272" column="13" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="219" column="46" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="228" column="10" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="13" column="0" filename="$USER_HOME$/projects/port-checkin-control/db_migrations/0000_add_parameters.sql" />
      <jump line="17" column="180" filename="$USER_HOME$/projects/port-checkin-control/db_migrations/0000_add_parameters.sql" />
      <jump line="225" column="27" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="297" column="107" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="270" column="3" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="271" column="53" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="266" column="11" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="157" column="0" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="344" column="107" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="1866" column="0" filename="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/BaseWorker.java" />
      <jump line="209" column="0" filename="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/ConfirmationPassRetrieve.java" />
      <jump line="35" column="16" filename="$USER_HOME$/projects/port-checkin-control/docs/assets/CONFPASS_RETRIEVE_RS.xml" />
      <jump line="24" column="24" filename="$USER_HOME$/projects/port-checkin-control/docs/assets/CONFPASS_RETRIEVE_RS.xml" />
      <jump line="1" column="0" filename="$USER_HOME$/projects/port-checkin-control/docs/assets/CONFPASS_RETRIEVE_RS.xml" />
      <jump line="104" column="16" filename="$USER_HOME$/projects/port-checkin-control/docs/assets/CONFPASS_RETRIEVE_RS.xml" />
      <jump line="103" column="16" filename="$USER_HOME$/projects/port-checkin-control/docs/assets/CONFPASS_RETRIEVE_RS.xml" />
      <jump line="16" column="0" filename="$USER_HOME$/projects/port-checkin-control/db_migrations/0000_add_parameters.sql" />
      <jump line="19" column="43" filename="$USER_HOME$/projects/port-checkin-control/db_migrations/0000_add_parameters.sql" />
      <jump line="20" column="174" filename="$USER_HOME$/projects/port-checkin-control/db_migrations/0000_add_parameters.sql" />
      <jump line="229" column="0" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="296" column="27" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="298" column="45" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="313" column="3" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="314" column="53" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="117" column="14" filename="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/ConfirmationPassRetrieve.java" />
      <jump line="99" column="3" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="324" column="0" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="321" column="0" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="322" column="3" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="323" column="3" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="1003" column="0" filename="$USER_HOME$/projects/port-checkin-control/src/serverrepository/BatchUpdateReader.java" />
      <jump line="274" column="77" filename="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/FetchBookingDataOnlineForConfirmation.java" />
      <jump line="126" column="17" filename="$USER_HOME$/projects/port-checkin-control/documentation/departureTicketCP/DepartureTicketDataCPRS_S.xml" />
      <jump line="125" column="15" filename="$USER_HOME$/projects/port-checkin-control/documentation/departureTicketCP/DepartureTicketDataCPRS_S.xml" />
      <jump line="279" column="0" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="394" column="13" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="342" column="65" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="351" column="106" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="67" column="57" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="68" column="78" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="352" column="99" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="353" column="3" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="354" column="100" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="339" column="0" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="399" column="13" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="374" column="86" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="135" column="39" filename="$USER_HOME$/projects/port-checkin-control/src/xml/messages/ServiceMessage/types/ReportTypeEnum.java" />
      <jump line="384" column="3" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="390" column="3" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="392" column="48" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="393" column="3" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="403" column="43" filename="$USER_HOME$/projects/port-checkin-control/docs/Confrimation_Module.txt" />
      <jump line="1481" column="2" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1574" column="2" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1529" column="47" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1761" column="50" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="62" column="48" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1305" column="0" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1321" column="18" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1316" column="18" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1572" column="105" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1531" column="18" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1444" column="12" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="316" column="16" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="319" column="73" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1445" column="122" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1318" column="0" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1309" column="2" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1325" column="18" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1870" column="10" filename="$USER_HOME$/projects/port-checkin-control/src/workers/confirmation/BaseWorker.java" />
      <jump line="1569" column="22" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1570" column="81" filename="$USER_HOME$/projects/port-checkin-control/src/workers/BoardingPassHandler.java" />
      <jump line="1668" column="6" filename="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" />
      <jump line="39" column="2" filename="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" />
      <jump line="41" column="2" filename="$USER_HOME$/projects/port-checkin-control/src/serverrepository/BatchUpdateReaderForConfirmation.java" />
      <jump line="37" column="37" filename="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" />
      <jump line="799" column="6" filename="$USER_HOME$/projects/port-checkin-control/src/serverrepository/BatchUpdateReaderForConfirmation.java" />
      <jump line="796" column="4" filename="$USER_HOME$/projects/port-checkin-control/src/serverrepository/BatchUpdateReaderForConfirmation.java" />
      <jump line="1049" column="2" filename="$USER_HOME$/projects/port-checkin-control/src/serverrepository/BatchUpdateReaderForConfirmation.java" />
      <jump line="739" column="43" filename="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" />
      <jump line="735" column="43" filename="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" />
      <jump line="736" column="6" filename="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" />
      <jump line="1835" column="8" filename="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" />
      <jump line="731" column="1" filename="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" />
      <jump line="1837" column="45" filename="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" />
      <jump line="1832" column="2" filename="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" />
      <jump line="1844" column="6" filename="$USER_HOME$/projects/port-checkin-control/src/workers/EmbarkationHandler.java" />
      <jump line="26" column="0" filename="/BoardingPassHandler.java" />
      <jump line="15" column="0" filename="/BoardingPassHandler.java" />
      <jump line="0" column="0" filename="/BoardingPassHandler.java" />
    </jumps>
    <registers>
      <register name="*" type="4">
        <text>pseg.getTicketIssueDate()</text>
      </register>
      <register name="-" type="4">
        <text>e</text>
      </register>
      <register name="/" type="4">
        <text>getLeade</text>
      </register>
      <register name="0" type="4">
        <text encoding="base64">LyoKICogVG8gY2hhbmdlIHRoaXMgdGVtcGxhdGUsIGNob29zZSBUb29scyB8IFRlbXBsYXRlcwogKiBhbmQgb3BlbiB0aGUgdGVtcGxhdGUgaW4gdGhlIGVkaXRvci4KICovCnBhY2thZ2Ugd29ya2VyczsKCmltcG9ydCBjb20uaXRleHRwZGYudGV4dC5Eb2N1bWVudEV4Y2VwdGlvbjsKCmltcG9ydCBqYXZhLmlvLlVuc3VwcG9ydGVkRW5jb2RpbmdFeGNlcHRpb247CgppbXBvcnQgd29ya2Vycy5jb25maXJtYXRpb24uQmFzZVdvcmtlcjsKaW1wb3J0IHhtbC5tZXNzYWdlcy5TZXJ2aWNlTWVzc2FnZS4qOwoKaW1wb3J0IGphdmEudXRpbC5DYWxlbmRhcjsKaW1wb3J0IGphdmEuc3FsLlNRTEV4Y2VwdGlvbjsKCmltcG9ydCBkYXRhYmFzZS5vcmFjbGUucG9ydGNvbnRyb2wuZXhjZXB0aW9uLkRBT0V4Y2VwdGlvbjsKaW1wb3J0IGRhdGFiYXNlLm9yYWNsZS5wb3J0Y29udHJvbC4qOwoKaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRSZWFkZXI7CmltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uOwppbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbVJlYWRlcjsKaW1wb3J0IGphdmEubWF0aC5CaWdEZWNpbWFsOwppbXBvcnQgamF2YS5zcWwuQ29ubmVjdGlvbjsKaW1wb3J0IGphdmEuc3FsLlJlc3VsdFNldDsKaW1wb3J0IGphdmEudGV4dC5TaW1wbGVEYXRlRm9ybWF0OwppbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDsKaW1wb3J0IGphdmEudXRpbC5IYXNoTWFwOwppbXBvcnQgamF2YS51dGlsLkxpc3Q7CmltcG9ydCBqYXZhLnV0aWwuTWFwOwppbXBvcnQgamF2YS51dGlsLlZlY3RvcjsKaW1wb3J0IG9yZy5hcGFjaGUubG9nNGouTG9nZ2VyOwoKaW1wb3J0IHRtc2FwZGYuV2ViVGlja2V0OwppbXBvcnQgdXRpbGl0aWVzLkRCVXRpbGl0aWVzOwppbXBvcnQgdXRpbGl0aWVzLkRhdGVVdGlsczsKaW1wb3J0IHV0aWxpdGllcy5TZXFCb2FyZElETWFuYWdlcjsKaW1wb3J0IHV0aWxpdGllcy5EZXZlbG9wVXRpbHM7CmltcG9ydCB4bWwubWVzc2FnZXMuY29tcGFuaWVzX2NoZWNraW5fYW5zLlRpY2tldDsKCi8qKgogKiBAYXV0aG9yIFVTRVIKICovCnB1YmxpYyBjbGFzcyBCb2FyZGluZ1Bhc3NIYW5kbGVyIGV4dGVuZHMgR2VuZXJhbFdvcmtlciB7CgogIHByaXZhdGUgeG1sLm1lc3NhZ2VzLlNlcnZpY2VNZXNzYWdlLlNlcnZpY2VNZXNzYWdlIHJlcVhNTCA9IG51bGw7CiAgcHJpdmF0ZSBib29sZWFuIGRiRVJST1IgPSBmYWxzZTsKICBwcml2YXRlIFN0cmluZyBkYkVyclN0ciA9IG5ldyBTdHJpbmcoIiIpOwogIHByaXZhdGUgVmVjdG9yPFN0cmluZz4gYm9hcmREYXRhID0gbmV3IFZlY3RvcjxTdHJpbmc+KCk7CiAgcHJpdmF0ZSBJdGluZW5xVndCZWFuIGFsdGVySXRpbiA9IG51bGw7CgogIHByaXZhdGUgYm9vbGVhbiBQREZfTU9ERSA9IGZhbHNlOwogIHByaXZhdGUgU3RyaW5nIHdlYnBkZiA9IG51bGw7CiAgcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBWZWN0b3I8U3RyaW5nPiBWQUxJRF9DT05GSVJNQVRJT05fU1RBVFVTRVMgPSBuZXcgVmVjdG9yPFN0cmluZz4oKTsKCiAgLyoKICAgKiBMb2FkcyB0aGUgcmVxdWVzdCBYTUwgb2JqZWN0LgogICAqIEFkZCBhbnkgbG9naWMgaGVyZS4uLgogICAqLwogIHB1YmxpYyBCb2FyZGluZ1Bhc3NIYW5kbGVyKHhtbC5tZXNzYWdlcy5TZXJ2aWNlTWVzc2FnZS5TZXJ2aWNlTWVzc2FnZSByZXFPYmopIHsKICAgIFZBTElEX0NPTkZJUk1BVElPTl9TVEFUVVNFUy5hZGQoQmFzZVdvcmtlci5Db25maXJtYXRpb25TdGF0dXMuUC50b1N0cmluZygpKTsKICAgIFZBTElEX0NPTkZJUk1BVElPTl9TVEFUVVNFUy5hZGQoQmFzZVdvcmtlci5Db25maXJtYXRpb25TdGF0dXMuVC50b1N0cmluZygpKTsKICAgIHJlcVhNTCA9IHJlcU9iajsKICAgIGJvYXJkRGF0YS5jbGVhcigpOwoKICB9CgogIHByaXZhdGUgU3RyaW5nIG5vbkFzY2lpVG9Bc2NpaShTdHJpbmcgdW5pY29kZSkgewogICAgU3RyaW5nIGJ1cCA9IHVuaWNvZGU7CiAgICB0cnkgewogICAgICBieXRlW10gdXRmOCA9IHVuaWNvZGUuZ2V0Qnl0ZXMoIkNwODUwIik7CiAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgdXRmOC5sZW5ndGg7IGkrKykgewogICAgICAgIHN3aXRjaCAodXRmOFtpXSkgewogICAgICAgICAgY2FzZSAtOTQ6CiAgICAgICAgICAgIHV0ZjhbaV0gPSAoYnl0ZSkgJ28nOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgLTEwNToKICAgICAgICAgICAgdXRmOFtpXSA9IChieXRlKSAndSc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAtMTI3OgogICAgICAgICAgICB1dGY4W2ldID0gKGJ5dGUpICd1JzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIC0xMDY6CiAgICAgICAgICAgIHV0ZjhbaV0gPSAoYnl0ZSkgJ3UnOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgLTEyODoKICAgICAgICAgICAgdXRmOFtpXSA9IChieXRlKSAnQyc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAtMTIxOgogICAgICAgICAgICB1dGY4W2ldID0gKGJ5dGUpICdjJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIC03NToKICAgICAgICAgICAgdXRmOFtpXSA9IChieXRlKSAnQSc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAtNDQ6CiAgICAgICAgICAgIHV0ZjhbaV0gPSAoYnl0ZSkgJ0UnOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgLTQwOgogICAgICAgICAgICB1dGY4W2ldID0gKGJ5dGUpICdJJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIC05MToKICAgICAgICAgICAgdXRmOFtpXSA9IChieXRlKSAnTic7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAtMzI6CiAgICAgICAgICAgIHV0ZjhbaV0gPSAoYnl0ZSkgJ08nOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgLTQyOgogICAgICAgICAgICB1dGY4W2ldID0gKGJ5dGUpICdJJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIC0xMTI6CiAgICAgICAgICAgIHV0ZjhbaV0gPSAoYnl0ZSkgJ0UnOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgLTIzOgogICAgICAgICAgICB1dGY4W2ldID0gKGJ5dGUpICdVJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIC0xMTQ6CiAgICAgICAgICAgIHV0ZjhbaV0gPSAoYnl0ZSkgJ0EnOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgLTMwOgogICAgICAgICAgICB1dGY4W2ldID0gKGJ5dGUpICdPJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIC00NToKICAgICAgICAgICAgdXRmOFtpXSA9IChieXRlKSAnRSc7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICB9CiAgICAgICAgLy8tNzUKICAgICAgICAvLy00NAogICAgICAgIC8vLTQwCiAgICAgICAgLy8tOTEKICAgICAgICAvLz8/Pz8KICAgICAgfQogICAgICByZXR1cm4gbmV3IFN0cmluZyh1dGY4LCAiQ3A4NTAiKTsKICAgIH0gY2F0Y2ggKFVuc3VwcG9ydGVkRW5jb2RpbmdFeGNlcHRpb24gZSkgewogICAgICByZXR1cm4gYnVwOwogICAgfQogIH0KCiAgcHJpdmF0ZSBieXRlW10gQ3JlYXRlRm9ybShqYXZhLnNxbC5DbG9iIEIsIEJvYXJkcGFzc1Z3QmVhbiBidmIpIHRocm93cyBTUUxFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsKICAgIEJ1ZmZlcmVkUmVhZGVyIFIgPSBuZXcgQnVmZmVyZWRSZWFkZXIobmV3IElucHV0U3RyZWFtUmVhZGVyKEIuZ2V0QXNjaWlTdHJlYW0oKSkpOwogICAgU3RyaW5nIGw7CiAgICBTdHJpbmdCdWZmZXIgc2IgPSBuZXcgU3RyaW5nQnVmZmVyKCk7CiAgICBTdHJpbmcgc3VybmFtZSA9IG51bGw7CiAgICBTdHJpbmcgZm5hbWUgPSBudWxsOwogICAgU3RyaW5nIFZlaFBsYXRlID0gbnVsbDsKICAgIFN0cmluZyBWZWhNb2RlbCA9IG51bGw7CiAgICBTdHJpbmcgVmVoQnJhbmQgPSBudWxsOwoKICAgIGJvb2xlYW4gdXNlQWx0ZXIgPSBmYWxzZTsKICAgIGlmIChhbHRlckl0aW4gIT0gbnVsbCkgewogICAgICB1c2VBbHRlciA9IHRydWU7CiAgICB9CiAgICBpZiAoYnZiLmdldEJvb2tUeXBlKCkuZXF1YWxzKCJQIikpIHsKICAgICAgc3VybmFtZSA9IG5vbkFzY2lpVG9Bc2NpaShidmIuZ2V0UGFzc1NuYW1lKCkpOwogICAgICBmbmFtZSA9IG5vbkFzY2lpVG9Bc2NpaShidmIuZ2V0UGFzc0ZuYW1lKCkpOwogICAgfSBlbHNlIGlmIChidmIuZ2V0Qm9va1R5cGUoKS5lcXVhbHMoIlYiKSkgewogICAgICBWZWhQbGF0ZSA9IG5vbkFzY2lpVG9Bc2NpaShidmIuZ2V0VmVoUGxhdGUoKSk7CiAgICAgIFZlaE1vZGVsID0gbm9uQXNjaWlUb0FzY2lpKGJ2Yi5nZXRWZWhNb2RlbCgpKTsKICAgICAgVmVoQnJhbmQgPSBub25Bc2NpaVRvQXNjaWkoYnZiLmdldFZlaEJyYW5kKCkpOwogICAgfQoKICAgIHdoaWxlICgobCA9IFIucmVhZExpbmUoKSkgIT0gbnVsbCkgewogICAgICBsID0gbC5yZXBsYWNlKCJbcHJkYXRlXSIsIERhdGVVdGlscy5ub3dfcHJpbnQoKSk7CiAgICAgIGlmIChidmIuZ2V0Qm9va1R5cGUoKS5lcXVhbHMoIlAiKSkgewogICAgICAgIGwgPSBsLnJlcGxhY2UoIlt0aWNrXSIsIFN0cmluZy5mb3JtYXQoIiUwN2QiLCBidmIuZ2V0Qm9hcmRJZCgpKSk7Ly8gZ2V0VGlja051bWIoKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbCA9IGwucmVwbGFjZSgiW3RpY2tdIiwgYnZiLmdldEJvYXJkSWQoKS50b1N0cmluZygpKTsvLyBnZXRUaWNrTnVtYigpKTsKICAgICAgfQovLyAgICAgICAgICAgIGwgPSBsLnJlcGxhY2UoIlt0aWNrXSIsIGJ2Yi5nZXRUaWNrTnVtYigpKTsKICAgICAgbCA9IGwucmVwbGFjZSgiW3RpY2tub10iLCBidmIuZ2V0VGlja051bWIoKSk7CiAgICAgIGwgPSBsLnJlcGxhY2UoIltyZXNjb2RlXSIsIGJ2Yi5nZXRSZXNlcnZjb2RlKCkpOwogICAgICBsID0gbC5yZXBsYWNlKCJbcG1zaWRdIiwgYnZiLmdldENhbGxOdW0oKS50b1N0cmluZygpKTsKICAgICAgbCA9IGwucmVwbGFjZSgiW2JlcnRoXSIsIGJ2Yi5nZXRQbGF0Zk51bSgpLnRvU3RyaW5nKCkpOwogICAgICBTaW1wbGVEYXRlRm9ybWF0IHNkZiA9IG5ldyBTaW1wbGVEYXRlRm9ybWF0KCJkZC9NTS95eXl5IEhIOm1tIik7CiAgICAgIGlmICh1c2VBbHRlcikgewogICAgICAgIGwgPSBsLnJlcGxhY2UoIltkdG1dIiwgc2RmLmZvcm1hdChhbHRlckl0aW4uZ2V0RGVwRGF0ZSgpKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbCA9IGwucmVwbGFjZSgiW2R0bV0iLCBzZGYuZm9ybWF0KGJ2Yi5nZXREZXBEYXRlKCkpKTsKICAgICAgfQogICAgICBpZiAodXNlQWx0ZXIpIHsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbdmVzc2VsXSIsIGFsdGVySXRpbi5nZXRWZXNzTmFtZSgpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbdmVzc2VsXSIsIGJ2Yi5nZXRWZXNzTmFtZSgpKTsKICAgICAgfQogICAgICBpZiAodXNlQWx0ZXIpIHsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbcm91dGVdIiwgU3RyaW5nLmZvcm1hdCgiJXMgLSAlcyIsIGFsdGVySXRpbi5nZXREZXBQb3J0RGVzY3IoKSwgYWx0ZXJJdGluLmdldEFyclBvcnREZXNjcigpKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbCA9IGwucmVwbGFjZSgiW3JvdXRlXSIsIFN0cmluZy5mb3JtYXQoIiVzIC0gJXMiLCBidmIuZ2V0RGVwTG9jTmFtZSgpLCBidmIuZ2V0QXJyTG9jTmFtZSgpKSk7CiAgICAgIH0KICAgICAgaWYgKHVzZUFsdGVyKSB7CiAgICAgICAgbCA9IGwucmVwbGFjZSgiW2NuXSIsIGFsdGVySXRpbi5nZXRDb21wTmFtZSgpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbY25dIiwgYnZiLmdldENvbXBOYW1lKCkpOwogICAgICB9CiAgICAgIGlmIChidmIuZ2V0Qm9va1R5cGUoKS5lcXVhbHMoIlAiKSkgewovLyAgICAgICAgICAgICAgICBTdHJpbmcgc3VybiA9IGJ2Yi5nZXRQYXNzU25hbWUoKTsKLy8gICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKCJzdXJuYW1lLT4gIitzdXJuKTsKLy8gICAgICAgICAgICAgICAgYnl0ZVtdIHV0ZjggPSBzdXJuLmdldEJ5dGVzKCJVVEYtOCIpOwovLyAgICAgICAgICAgICAgICBzdXJuID0gbmV3IFN0cmluZyh1dGY4LCAiVVMtQVNDSUkiKTsKLy8gICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKCJzdXJuYW1lIGFmdGVyIHV0ZjggLT4gIitzdXJuKTsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbcHNuMV0iLCBzdXJuYW1lLnN1YnN0cmluZygwLCAoc3VybmFtZS5sZW5ndGgoKSA+PSAyMCA/IDIwIDogc3VybmFtZS5sZW5ndGgoKSkpKTsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbcHNuMl0iLCBzdXJuYW1lLnN1YnN0cmluZygwLCAoc3VybmFtZS5sZW5ndGgoKSA+PSAyMCA/IDIwIDogc3VybmFtZS5sZW5ndGgoKSkpKTsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbcHNuM10iLCBzdXJuYW1lLnN1YnN0cmluZygwLCAoc3VybmFtZS5sZW5ndGgoKSA+PSAxNyA/IDE3IDogc3VybmFtZS5sZW5ndGgoKSkpKTsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbcHNuNF0iLCBzdXJuYW1lLnN1YnN0cmluZygwLCAoc3VybmFtZS5sZW5ndGgoKSA+PSAyOCA/IDI4IDogc3VybmFtZS5sZW5ndGgoKSkpKTsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbcG5tMV0iLCBmbmFtZS5zdWJzdHJpbmcoMCwgKGZuYW1lLmxlbmd0aCgpID49IDIwID8gMjAgOiBmbmFtZS5sZW5ndGgoKSkpKTsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbcG5tMl0iLCBmbmFtZS5zdWJzdHJpbmcoMCwgKGZuYW1lLmxlbmd0aCgpID49IDIwID8gMjAgOiBmbmFtZS5sZW5ndGgoKSkpKTsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbcG5tM10iLCBmbmFtZS5zdWJzdHJpbmcoMCwgKGZuYW1lLmxlbmd0aCgpID49IDE1ID8gMTUgOiBmbmFtZS5sZW5ndGgoKSkpKTsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbcG5tNF0iLCBmbmFtZS5zdWJzdHJpbmcoMCwgKGZuYW1lLmxlbmd0aCgpID49IDI4ID8gMjggOiBmbmFtZS5sZW5ndGgoKSkpKTsKCi8vICAgICAgICAgICAgICAgIGwgPSBsLnJlcGxhY2UoIltwbm1dIiwgZm5hbWUpOwogICAgICAgIGwgPSBsLnJlcGxhY2UoIltwYWddIiwgU3RyaW5nLmZvcm1hdCgiJWQiLCBidmIuZ2V0UGFzc0FnZSgpKSk7CiAgICAgICAgbCA9IGwucmVwbGFjZSgiW3Bnbl0iLCBidmIuZ2V0R2VuZGVyKCkpOwovLy8vICAgICAgICAgICAgICAgIGwgPSBsLnJlcGxhY2UoIltwbnRdIiwgYnZiLmdldE5hdGlvbmFsaXR5KCkpOwogICAgICAgIGwgPSBsLnJlcGxhY2UoIltwbm9dIiwgYnZiLmdldFBhc3BydE51bSgpLnN1YnN0cmluZygwLCAoYnZiLmdldFBhc3BydE51bSgpLmxlbmd0aCgpID49IDE2ID8gMTYgOiBidmIuZ2V0UGFzcHJ0TnVtKCkubGVuZ3RoKCkpKSk7Ci8vLy8gICAgICAgICAgICAgICAgbCA9IGwucmVwbGFjZSgiW3BkZF0iLCAiMzEvMTIvMjAxMCIpOyAvLyBUb0RvIGluc2VydCBwYWxwb3J0IGRlbCBkYXRlCiAgICAgICAgbCA9IGwucmVwbGFjZSgiW3BicF0iLCBidmIuZ2V0QmlydGhQbGFjZSgpKTsKICAgICAgICBTaW1wbGVEYXRlRm9ybWF0IHNkcyA9IG5ldyBTaW1wbGVEYXRlRm9ybWF0KCJkZC9NTS95eXl5Iik7CiAgICAgICAgbCA9IGwucmVwbGFjZSgiW3BiZF0iLCBzZHMuZm9ybWF0KGJ2Yi5nZXRCaXJ0aERhdGUoKSkpOwovLy8vICAgICAgICAgICAgICAgIGwgPSBsLnJlcGxhY2UoIltwaWNdIiwgYnZiLmdldFBhc3NDb3VudHJ5KCkpOwogICAgICAgIGwgPSBsLnJlcGxhY2UoIlthY2QxXSIsIGJ2Yi5nZXRDYWJpbkFiYnIoKS5zdWJzdHJpbmcoMCwgKGJ2Yi5nZXRDYWJpbkFiYnIoKS5sZW5ndGgoKSA+PSA5ID8gOSA6IGJ2Yi5nZXRDYWJpbkFiYnIoKS5sZW5ndGgoKSkpKTsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbYWNkMl0iLCBidmIuZ2V0Q2FiaW5BYmJyKCkuc3Vic3RyaW5nKDAsIChidmIuZ2V0Q2FiaW5BYmJyKCkubGVuZ3RoKCkgPj0gOSA/IDkgOiBidmIuZ2V0Q2FiaW5BYmJyKCkubGVuZ3RoKCkpKSk7CiAgICAgICAgbCA9IGwucmVwbGFjZSgiW2FjZDNdIiwgYnZiLmdldENhYmluQWJicigpLnN1YnN0cmluZygwLCAoYnZiLmdldENhYmluQWJicigpLmxlbmd0aCgpID49IDggPyA4IDogYnZiLmdldENhYmluQWJicigpLmxlbmd0aCgpKSkpOwoKICAgICAgICBsID0gbC5yZXBsYWNlKCJbY3NuMV0iLCBidmIuZ2V0Q2FiaW5OdW1iKCkuc3Vic3RyaW5nKDAsIChidmIuZ2V0Q2FiaW5OdW1iKCkubGVuZ3RoKCkgPj0gOSA/IDkgOiBidmIuZ2V0Q2FiaW5OdW1iKCkubGVuZ3RoKCkpKSk7CiAgICAgICAgbCA9IGwucmVwbGFjZSgiW2NzbjJdIiwgYnZiLmdldENhYmluTnVtYigpLnN1YnN0cmluZygwLCAoYnZiLmdldENhYmluTnVtYigpLmxlbmd0aCgpID49IDkgPyA5IDogYnZiLmdldENhYmluTnVtYigpLmxlbmd0aCgpKSkpOwogICAgICAgIGwgPSBsLnJlcGxhY2UoIltjc24zXSIsIGJ2Yi5nZXRDYWJpbk51bWIoKS5zdWJzdHJpbmcoMCwgKGJ2Yi5nZXRDYWJpbk51bWIoKS5sZW5ndGgoKSA+PSA5ID8gOSA6IGJ2Yi5nZXRDYWJpbk51bWIoKS5sZW5ndGgoKSkpKTsKLy8vLyAgICAgICAgICAgICAgICBsID0gbC5yZXBsYWNlKCJbYmVkXSIsIGJ2Yi5nZXRDYWJpbkJlZCgpKTsKLy8vLyAgICAgICAgICAgICAgICBsID0gbC5yZXBsYWNlKCJbZHNiXSIsIGJ2Yi5nZXREaXNhYmxlZCgpLmVxdWFscygiWSIpID8gIkRJU0FCTEVEIiA6ICIiKTsKICAgICAgICBTdHJpbmcgcGFjID0gYnZiLmdldEFnZUNhdGVnKCk7CiAgICAgICAgaWYgKHBhYy5lcXVhbHMoIkFEIikpIHsKICAgICAgICAgIHBhYyA9ICJBRFVMVCI7CiAgICAgICAgfSBlbHNlIGlmIChwYWMuZXF1YWxzKCJDSCIpKSB7CiAgICAgICAgICBwYWMgPSAiQ0hJTEQiOwogICAgICAgIH0gZWxzZSBpZiAocGFjLmVxdWFscygiSU4iKSkgewogICAgICAgICAgcGFjID0gIklORkFOVCI7CiAgICAgICAgfQogICAgICAgIGwgPSBsLnJlcGxhY2UoIltwYWNdIiwgcGFjKTsKLy8gICAgICAgICAgICAgICBsID0gbC5yZXBsYWNlKCJbcGFjXSIsIGJ2Yi5nZXRWZWhDbGFzcygpKTsKICAgICAgfSBlbHNlIGlmIChidmIuZ2V0Qm9va1R5cGUoKS5lcXVhbHMoIlYiKSkgewogICAgICAgIGwgPSBsLnJlcGxhY2UoIltwYWNdIiwgYnZiLmdldFZlaENsYXNzKCkpOwogICAgICAgIGwgPSBsLnJlcGxhY2UoIlt2Y3RdIiwgYnZiLmdldFZlaE1vZGVsKCkpOwogICAgICAgIGwgPSBsLnJlcGxhY2UoIlt2Y3RdIiwgYnZiLmdldFZlaE1vZGVsKCkuc3Vic3RyaW5nKDAsIChidmIuZ2V0VmVoTW9kZWwoKS5sZW5ndGgoKSA+PSAxMCA/IDEwIDogYnZiLmdldFZlaE1vZGVsKCkubGVuZ3RoKCkpKSk7CgovLy8vICAgICAgICAgICAgICAgIGwgPSBsLnJlcGxhY2UoIlt2cm5dIiwgYnZiLmdldFZlaFBsYXRlKCkpOwogICAgICAgIGwgPSBsLnJlcGxhY2UoIlt2bWRdIiwgVmVoQnJhbmQpOwogICAgICAgIFN0cmluZyB2ZWhEcml2ZXIgPSBidmIuZ2V0VmVoRHJpdmVyKCk7CiAgICAgICAgaWYgKHZlaERyaXZlci5sZW5ndGgoKSA+IDMwKSB7CiAgICAgICAgICB2ZWhEcml2ZXIgPSB2ZWhEcml2ZXIuc3Vic3RyaW5nKDAsIDMwKTsKICAgICAgICB9CgovLy8vICAgICAgICAgICAgICAgIGwgPSBsLnJlcGxhY2UoIlt2Y2xdIiwgYnZiLmdldFZlaENsYXNzKCkpOwogICAgICAgIGwgPSBsLnJlcGxhY2UoIltkbm1dIiwgdmVoRHJpdmVyKTsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbdHlwZV0iLCBidmIuZ2V0VmVoQ2xhc3MoKSk7CiAgICAgICAgbCA9IGwucmVwbGFjZSgiW21vZGVsXSIsIFZlaE1vZGVsKTsKICAgICAgICBsID0gbC5yZXBsYWNlKCJbbW9kZWwxXSIsIFZlaE1vZGVsLnN1YnN0cmluZygwLCAoVmVoTW9kZWwubGVuZ3RoKCkgPj0gMTAgPyAxMCA6IFZlaE1vZGVsLmxlbmd0aCgpKSkpOwoKICAgICAgICBsID0gbC5yZXBsYWNlKCJbbGljZW5zZV0iLCBWZWhQbGF0ZSk7CiAgICAgIH0KICAgICAgc2IuYXBwZW5kKGwgKyAiXG4iKTsKICAgIH0KCiAgICByZXR1cm4gc2IudG9TdHJpbmcoKS5nZXRCeXRlcygpOwogIH0KCiAgcHJvdGVjdGVkIHZvaWQgUHJpbnRCb2FyZGluZ1Bhc3MoU2VydmljZU1lc3NhZ2Ugc20pIHsKICAgIFNpbXBsZURhdGVGb3JtYXQgc2RmID0gbmV3IFNpbXBsZURhdGVGb3JtYXQoImRkL01NL3l5eXkgSEg6bW0iKTsKICAgIFNpbXBsZURhdGVGb3JtYXQgc2RzID0gbmV3IFNpbXBsZURhdGVGb3JtYXQoImRkL01NL3l5eXkiKTsKICAgIENhbGVuZGFyIGNhbCA9IENhbGVuZGFyLmdldEluc3RhbmNlKCk7CgogICAgYm9vbGVhbiB1c2VBbHRlciA9IGZhbHNlOwogICAgaWYgKGFsdGVySXRpbiAhPSBudWxsKSB7CiAgICAgIHVzZUFsdGVyID0gdHJ1ZTsKICAgIH0KCiAgICBib29sZWFuIGIgPSBmYWxzZTsKICAgIGlmIChyZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEJsb2JEYXRhKCkuZ2V0QmxvYnMoKS5nZXRCbG9iQ291bnQoKSA+IDApIHsKICAgICAgaWYgKHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0QmxvYkRhdGEoKS5nZXRCbG9icygpLmdldEJsb2IoMCkuaGFzSUQoKSkgewogICAgICAgIGlmIChyZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEJsb2JEYXRhKCkuZ2V0QmxvYnMoKS5nZXRCbG9iKDApLmdldElEKCkgPiAwKSB7CiAgICAgICAgICBiID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIGlmIChiKSB7CiAgICAgIEJsb2JzIGJzID0gbmV3IEJsb2JzKCk7CiAgICAgIHRyeSB7CiAgICAgICAgICBFbWJhcmthdGlvbkRhdGEgZW1iYXJrYXRpb25EYXRhID0gc20uZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEVtYmFya2F0aW9uRGF0YSgpOwogICAgICAgICAgaWYgKGVtYmFya2F0aW9uRGF0YSA9PSBudWxsKSB7CiAgICAgICAgICAgICAgZW1iYXJrYXRpb25EYXRhID0gbmV3IEVtYmFya2F0aW9uRGF0YSgpOwogICAgICAgICAgICAgIHNtLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5zZXRFbWJhcmthdGlvbkRhdGEoZW1iYXJrYXRpb25EYXRhKTsKICAgICAgICAgIH0KICAgICAgICAgIEJvb2tpbmcgYm9va2luZyA9IGVtYmFya2F0aW9uRGF0YS5nZXRCb29raW5nKCk7CiAgICAgICAgICBpZiAoYm9va2luZyA9PSBudWxsKSB7CiAgICAgICAgICAgICAgYm9va2luZyA9IG5ldyBCb29raW5nKCk7CiAgICAgICAgICAgICAgZW1iYXJrYXRpb25EYXRhLnNldEJvb2tpbmcoYm9va2luZyk7CiAgICAgICAgICB9CiAgICAgICAgICBlbWJhcmthdGlvbkRhdGEuc2V0Qm9va2luZyhib29raW5nKTsKICAgICAgICBpZiAocmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0UGFzc2VuZ2VycygpICE9IG51bGwpIHsKICAgICAgICAgIFBhc3NlbmdlcnMgcGFzc2VuZ2VycyA9IG5ldyBQYXNzZW5nZXJzKCk7CiAgICAgICAgICBib29raW5nLnNldFBhc3NlbmdlcnMocGFzc2VuZ2Vycyk7CiAgICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0RW1iYXJrYXRpb25EYXRhKCkuZ2V0Qm9va2luZygpLmdldFBhc3NlbmdlcnMoKS5nZXRQYXNzZW5nZXJDb3VudCgpOyBpKyspIHsKICAgICAgICAgICAgUGFzc2VuZ2VyIHAgPSByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEVtYmFya2F0aW9uRGF0YSgpLmdldEJvb2tpbmcoKS5nZXRQYXNzZW5nZXJzKCkuZ2V0UGFzc2VuZ2VyKGkpOwogICAgICAgICAgICBpZiAoKHAuaGFzQm9va0lEKCkpICYmIChwLmdldEJvb2tJRCgpID4gMCkpIHsKICAgICAgICAgICAgICBkYXRhYmFzZS5vcmFjbGUucG9ydGNvbnRyb2wuQm9hcmRwYXNzVndNYW5hZ2VyIGJ2bSA9IGRhdGFiYXNlLm9yYWNsZS5wb3J0Y29udHJvbC5Cb2FyZHBhc3NWd01hbmFnZXIuZ2V0SW5zdGFuY2UoKTsKICAgICAgICAgICAgICBCb2FyZHBhc3NWd0JlYW5bXSBidmIgPSBidm0ubG9hZEJ5V2hlcmUoU3RyaW5nLmZvcm1hdCgiV0hFUkUgQk9PS19JRCA9ICVkICAgIEFORCBCT0FSRF9TVEFUVVM9J0EnIE9SREVSIEJZIEJPQVJEX0lEIERFU0MgIiwgcC5nZXRCb29rSUQoKSkpOwogICAgICAgICAgICAgIGIgPSBmYWxzZTsKICAgICAgICAgICAgICBpZiAoYnZiLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIGlmICgobWFwcGVkVGlja2V0cyAhPSBudWxsKSAmJiAoIW1hcHBlZFRpY2tldHMuaXNFbXB0eSgpKSkgewogICAgICAgICAgICAgICAgICAgIFRpY2tldCB0aWNrZXQgPSBtYXBwZWRUaWNrZXRzLmdldChidmJbMF0uZ2V0VGlja051bWIoKSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKHRpY2tldCAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIFN0cmluZyBzdGF0dXNDb2RlID0gdGlja2V0LmdldFN0YXR1c0NvZGUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgcC5zZXRTdGF0dXNDb2RlKHN0YXR1c0NvZGUpOwogICAgICAgICAgICAgICAgICAgICAgICBwLnNldFN0YXR1c01lc3NhZ2UodGlja2V0LmdldFN0YXR1c01lc3NhZ2UoKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc3RhdHVzQ29kZS5lcXVhbHMoIjAwMCIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHAuc2V0U3RhdHVzQ29kZSgiMDAwIik7CiAgICAgICAgICAgICAgICAgICAgICAgIHAuc2V0U3RhdHVzTWVzc2FnZSgiT0siKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgcGFzc2VuZ2Vycy5hZGRQYXNzZW5nZXIocCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHAuc2V0U3RhdHVzQ29kZSgiMDAwIik7CiAgICAgICAgICAgICAgICAgICAgcC5zZXRTdGF0dXNNZXNzYWdlKCJPSyIpOwogICAgICAgICAgICAgICAgICAgIHBhc3NlbmdlcnMuYWRkUGFzc2VuZ2VyKHApOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBTdHJpbmcgc3FsID0gU3RyaW5nLmZvcm1hdCgic2VsZWN0IGYuUEZfRk9STSwgcC5QUl9LSU5EIGZyb20gUFJJTlRFUl9GT1JNUyBmICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICJKT0lOIFBSSU5URVJTIHAgb24gKGYuUFJfSUQgPSBwLlBSX0lEKSAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAid2hlcmUgZi5QUl9JRD0gJWQgYW5kIGYuUEZfS0lORD0gMCBhbmQgZi5QRl9UWVBFPSAnJXMnICIsCiAgICAgICAgICAgICAgICAgICAgICAgIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0QmxvYkRhdGEoKS5nZXRCbG9icygpLmdldEJsb2IoMCkuZ2V0SUQoKSwKICAgICAgICAgICAgICAgICAgICAgICAgYnZiWzBdLmdldEJvb2tUeXBlKCkpOwogICAgICAgICAgICAgICAgUmVzdWx0U2V0IHIgPSBNYW5hZ2VyLmdldEluc3RhbmNlKCkuZ2V0Q29ubmVjdGlvbigpLmNyZWF0ZVN0YXRlbWVudCgpLmV4ZWN1dGVRdWVyeShzcWwpOwogICAgICAgICAgICAgICAgd2hpbGUgKHIubmV4dCgpKSB7CiAgICAgICAgICAgICAgICAgIC8vYm9va21hcmsKICAgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKCJJJ20gaW4gdmlldyByb3dzIHJlYWQuIiArIFBERl9NT0RFKTsKICAgICAgICAgICAgICAgICAgaWYgKFBERl9NT0RFKSB7CiAgICAgICAgICAgICAgICAgICAgV2ViVGlja2V0IHdidGNrdCA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgaWYgKGJ2YlswXS5nZXRCb29rVHlwZSgpLmNvbXBhcmVUbygiUCIpID09IDApIHsKICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigiSSdtIGluIHBhc3NlbmdlciBjYXNlLiIgKyBQREZfTU9ERSk7CiAgICAgICAgICAgICAgICAgICAgICB0bXNhcGRmLlZQYXNzZW5nZXJzIFZwYXMgPSBuZXcgdG1zYXBkZi5WUGFzc2VuZ2VycygpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRCb2FyZElEKGJ2YlswXS5nZXRCb2FyZElkKCkudG9TdHJpbmcoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFRpY2tubyhidmJbMF0uZ2V0VGlja051bWIoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFJlc2NvZGUoYnZiWzBdLmdldFJlc2VydmNvZGUoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFBubTEoYnZiWzBdLmdldFBhc3NGbmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0UG5tMihidmJbMF0uZ2V0UGFzc0ZuYW1lKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRQbm0zKGJ2YlswXS5nZXRQYXNzRm5hbWUoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFBzbjEoYnZiWzBdLmdldFBhc3NTbmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0UHNuMihidmJbMF0uZ2V0UGFzc1NuYW1lKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRQc24zKGJ2YlswXS5nZXRQYXNzU25hbWUoKSk7CiAgICAgICAgICAgICAgICAgICAgICBpZiAodXNlQWx0ZXIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXREdG0oc2RmLmZvcm1hdChhbHRlckl0aW4uZ2V0RGVwRGF0ZSgpKSk7CiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldER0bShzZGYuZm9ybWF0KGJ2YlswXS5nZXREZXBEYXRlKCkpKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0QWNkMShidmJbMF0uZ2V0Q2FiaW5BYmJyKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRBY2QyKGJ2YlswXS5nZXRDYWJpbkFiYnIoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldEFjZDMoYnZiWzBdLmdldENhYmluQWJicigpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0Q3NuMShidmJbMF0uZ2V0Q2FiaW5OdW1iKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRDc24yKGJ2YlswXS5nZXRDYWJpbk51bWIoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldENzbjMoYnZiWzBdLmdldENhYmluTnVtYigpKTsKICAgICAgICAgICAgICAgICAgICAgIGlmIChidmJbMF0uZ2V0QWdlQ2F0ZWcoKS5lcXVhbHMoIkFEIikpIHsKICAgICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRQYWMoIkFEVUxUIik7CiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGJ2YlswXS5nZXRBZ2VDYXRlZygpLmVxdWFscygiQ0giKSkgewogICAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFBhYygiQ0hJTEQiKTsKICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoYnZiWzBdLmdldEFnZUNhdGVnKCkuZXF1YWxzKCJJTiIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0UGFjKCJJTkZBTlQiKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0VGljayhidmJbMF0uZ2V0VGlja051bWIoKSk7CiAgICAgICAgICAgICAgICAgICAgICBpZiAodXNlQWx0ZXIpIHsKICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0VmVzc2VsKGJ2YlswXS5nZXRWZXNzTmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0Um91dGUoIlRBTkdFUiBNRUQgLSAiICsgYnZiWzBdLmdldEFyckxvY05hbWUoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldENuKGJ2YlswXS5nZXRDb21wTmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0UGduKGJ2YlswXS5nZXRHZW5kZXIoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFBubyhidmJbMF0uZ2V0UGFzcHJ0TnVtKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRQbXNpZChidmJbMF0uZ2V0Q2FsbE51bSgpLnRvU3RyaW5nKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRQYmQoc2RzLmZvcm1hdChidmJbMF0uZ2V0QmlydGhEYXRlKCkpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0QmVydGgoYnZiWzBdLmdldFBsYXRmTnVtKCkudG9TdHJpbmcoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFByZGF0ZShzZGYuZm9ybWF0KGNhbC5nZXRUaW1lKCkpKTsKCiAgICAgICAgICAgICAgICAgICAgICB3YnRja3QgPSBuZXcgV2ViVGlja2V0KFZwYXMpOwogICAgICAgICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICAgICAgd2VicGRmID0gd2J0Y2t0LmNyZWF0ZVRpY2tldCgpOwogICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoRG9jdW1lbnRFeGNlcHRpb24gZG9jZSkgewogICAgICAgICAgICAgICAgICAgICAgICB3ZWJwZGYgPSAiIjsKICAgICAgICAgICAgICAgICAgICAgICAgZG9jZS5wcmludFN0YWNrVHJhY2UoKTsKICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGlvZSkgewogICAgICAgICAgICAgICAgICAgICAgICB3ZWJwZGYgPSAiIjsKICAgICAgICAgICAgICAgICAgICAgICAgaW9lLnByaW50U3RhY2tUcmFjZSgpOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oIkknbSBpbiB2ZWhpY2xlIGNhc2UuIiArIFBERl9NT0RFKTsKICAgICAgICAgICAgICAgICAgICAgIHRtc2FwZGYuVlZlaGljbGVzIFZWZWggPSBuZXcgdG1zYXBkZi5WVmVoaWNsZXMoKTsKICAgICAgICAgICAgICAgICAgICAgIFZWZWguc2V0Qm9hcmRJRChidmJbMF0uZ2V0Qm9hcmRJZCgpLnRvU3RyaW5nKCkpOwogICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXRUaWNrKGJ2YlswXS5nZXRUaWNrTnVtYigpLnRvU3RyaW5nKCkpOwogICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXRUaWNrbm8oYnZiWzBdLmdldFRpY2tOdW1iKCkpOwogICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXRSZXNjb2RlKGJ2YlswXS5nZXRSZXNlcnZjb2RlKCkpOwogICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXRMaWNlbnNlKGJ2YlswXS5nZXRWZWhQbGF0ZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZWZWguc2V0VHlwZShidmJbMF0uZ2V0VmVoQ2xhc3MoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWVmVoLnNldE1vZGVsKGJ2YlswXS5nZXRWZWhCcmFuZCgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZWZWguc2V0VmVzc2VsKGJ2YlswXS5nZXRWZXNzTmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZWZWguc2V0Um91dGUoIlRBTkdFUiBNRUQgLSAiICsgYnZiWzBdLmdldEFyckxvY05hbWUoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWVmVoLnNldENuKGJ2YlswXS5nZXRDb21wTmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIGlmICh1c2VBbHRlcikgewogICAgICAgICAgICAgICAgICAgICAgICBWVmVoLnNldER0bShzZGYuZm9ybWF0KGFsdGVySXRpbi5nZXREZXBEYXRlKCkpKTsKICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIFZWZWguc2V0RHRtKHNkZi5mb3JtYXQoYnZiWzBdLmdldERlcERhdGUoKSkpOwogICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgIFZWZWguc2V0RG5tKGJ2YlswXS5nZXRWZWhEcml2ZXIoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWVmVoLnNldFBtc2lkKGJ2YlswXS5nZXRDYWxsTnVtKCkudG9TdHJpbmcoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWVmVoLnNldEJlcnRoKGJ2YlswXS5nZXRQbGF0Zk51bSgpLnRvU3RyaW5nKCkpOwogICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXRQcmRhdGUoc2RmLmZvcm1hdChjYWwuZ2V0VGltZSgpKSk7CiAgICAgICAgICAgICAgICAgICAgICB3YnRja3QgPSBuZXcgV2ViVGlja2V0KFZWZWgpOwogICAgICAgICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICAgICAgd2VicGRmID0gd2J0Y2t0LmNyZWF0ZVRpY2tldCgpOwogICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoRG9jdW1lbnRFeGNlcHRpb24gZG9jZSkgewogICAgICAgICAgICAgICAgICAgICAgICB3ZWJwZGYgPSAiIjsKICAgICAgICAgICAgICAgICAgICAgICAgZG9jZS5wcmludFN0YWNrVHJhY2UoKTsKICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGlvZSkgewogICAgICAgICAgICAgICAgICAgICAgICB3ZWJwZGYgPSAiIjsKICAgICAgICAgICAgICAgICAgICAgICAgaW9lLnByaW50U3RhY2tUcmFjZSgpOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB4bWwubWVzc2FnZXMuU2VydmljZU1lc3NhZ2UuQmxvYiBibG9iID0gbmV3IEJsb2IoKTsKICAgICAgICAgICAgICAgICAgICBibG9iLnNldERhdGFCaW5hcnkoZ2V0Qnl0ZXNGcm9tRmlsZSh3ZWJwZGYpKTsKICAgICAgICAgICAgICAgICAgICBicy5hZGRCbG9iKGJsb2IpOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHhtbC5tZXNzYWdlcy5TZXJ2aWNlTWVzc2FnZS5CbG9iIGJsb2IgPSBuZXcgQmxvYigpOwogICAgICAgICAgICAgICAgICAgIGJsb2Iuc2V0RGF0YUJpbmFyeShDcmVhdGVGb3JtKHIuZ2V0Q2xvYigiUEZfRk9STSIpLCBidmJbMF0pKTsKICAgICAgICAgICAgICAgICAgICBicy5hZGRCbG9iKGJsb2IpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIGIgPSB0cnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgci5jbG9zZSgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBpZiAoIWIpIHsKICAgICAgICAgICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig1LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAocmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0VmVoaWNsZXMoKSAhPSBudWxsKSB7CiAgICAgICAgICBWZWhpY2xlcyB2ZWhpY2xlcyA9IG5ldyBWZWhpY2xlcygpOwogICAgICAgICAgYm9va2luZy5zZXRWZWhpY2xlcyh2ZWhpY2xlcyk7CiAgICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0RW1iYXJrYXRpb25EYXRhKCkuZ2V0Qm9va2luZygpLmdldFZlaGljbGVzKCkuZ2V0VmVoaWNsZUNvdW50KCk7IGkrKykgewogICAgICAgICAgICBWZWhpY2xlIHYgPSByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEVtYmFya2F0aW9uRGF0YSgpLmdldEJvb2tpbmcoKS5nZXRWZWhpY2xlcygpLmdldFZlaGljbGUoaSk7CiAgICAgICAgICAgIGlmICgodi5oYXNCb29rSUQoKSkgJiYgKHYuZ2V0Qm9va0lEKCkgPiAwKSkgewogICAgICAgICAgICAgIGRhdGFiYXNlLm9yYWNsZS5wb3J0Y29udHJvbC5Cb2FyZHBhc3NWd01hbmFnZXIgYnZtID0gZGF0YWJhc2Uub3JhY2xlLnBvcnRjb250cm9sLkJvYXJkcGFzc1Z3TWFuYWdlci5nZXRJbnN0YW5jZSgpOwogICAgICAgICAgICAgIEJvYXJkcGFzc1Z3QmVhbltdIGJ2YiA9IGJ2bS5sb2FkQnlXaGVyZShTdHJpbmcuZm9ybWF0KCJXSEVSRSBCT09LX0lEID0gJWQgIEFORCBCT0FSRF9TVEFUVVM9J0EnIE9SREVSIEJZIEJPQVJEX0lEIERFU0MgICIsIHYuZ2V0Qm9va0lEKCkpKTsKICAgICAgICAgICAgICBiID0gZmFsc2U7CiAgICAgICAgICAgICAgaWYgKGJ2Yi5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYgKChtYXBwZWRUaWNrZXRzICE9IG51bGwpICYmICghbWFwcGVkVGlja2V0cy5pc0VtcHR5KCkpKSB7CiAgICAgICAgICAgICAgICAgICAgVGlja2V0IHRpY2tldCA9IG1hcHBlZFRpY2tldHMuZ2V0KGJ2YlswXS5nZXRUaWNrTnVtYigpKTsKICAgICAgICAgICAgICAgICAgICBpZiAodGlja2V0ICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgU3RyaW5nIHN0YXR1c0NvZGUgPSB0aWNrZXQuZ2V0U3RhdHVzQ29kZSgpOwogICAgICAgICAgICAgICAgICAgICAgICB2LnNldFN0YXR1c0NvZGUoc3RhdHVzQ29kZSk7CiAgICAgICAgICAgICAgICAgICAgICAgIHYuc2V0U3RhdHVzTWVzc2FnZSh0aWNrZXQuZ2V0U3RhdHVzTWVzc2FnZSgpKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzdGF0dXNDb2RlLmVxdWFscygiMDAwIikpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgdi5zZXRTdGF0dXNDb2RlKCIwMDAiKTsKICAgICAgICAgICAgICAgICAgICAgICAgdi5zZXRTdGF0dXNNZXNzYWdlKCJPSyIpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB2ZWhpY2xlcy5hZGRWZWhpY2xlKHYpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB2LnNldFN0YXR1c0NvZGUoIjAwMCIpOwogICAgICAgICAgICAgICAgICAgIHYuc2V0U3RhdHVzTWVzc2FnZSgiT0siKTsKICAgICAgICAgICAgICAgICAgICB2ZWhpY2xlcy5hZGRWZWhpY2xlKHYpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIFN0cmluZyBzcWwgPSBTdHJpbmcuZm9ybWF0KCJzZWxlY3QgZi5QRl9GT1JNLCBwLlBSX0tJTkQgZnJvbSBQUklOVEVSX0ZPUk1TIGYgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgIkpPSU4gUFJJTlRFUlMgcCBvbiAoZi5QUl9JRCA9IHAuUFJfSUQpICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICJ3aGVyZSBmLlBSX0lEPSAlZCBhbmQgZi5QRl9LSU5EPSAwIGFuZCBmLlBGX1RZUEU9ICclcycgIiwKICAgICAgICAgICAgICAgICAgICAgICAgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRCbG9iRGF0YSgpLmdldEJsb2JzKCkuZ2V0QmxvYigwKS5nZXRJRCgpLAogICAgICAgICAgICAgICAgICAgICAgICBidmJbMF0uZ2V0Qm9va1R5cGUoKSk7CiAgICAgICAgICAgICAgICBSZXN1bHRTZXQgciA9IE1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5nZXRDb25uZWN0aW9uKCkuY3JlYXRlU3RhdGVtZW50KCkuZXhlY3V0ZVF1ZXJ5KHNxbCk7CiAgICAgICAgICAgICAgICB3aGlsZSAoci5uZXh0KCkpIHsKICAgICAgICAgICAgICAgICAgLy9ib29rbWFyawogICAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oIkknbSBpbiB2aWV3IHJvd3MgcmVhZC4iICsgUERGX01PREUpOwogICAgICAgICAgICAgICAgICBpZiAoUERGX01PREUpIHsKICAgICAgICAgICAgICAgICAgICBXZWJUaWNrZXQgd2J0Y2t0ID0gbnVsbDsKICAgICAgICAgICAgICAgICAgICBpZiAoYnZiWzBdLmdldEJvb2tUeXBlKCkuY29tcGFyZVRvKCJQIikgPT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKCJJJ20gaW4gcGFzc2VuZ2VyIGNhc2UuIiArIFBERl9NT0RFKTsKICAgICAgICAgICAgICAgICAgICAgIHRtc2FwZGYuVlBhc3NlbmdlcnMgVnBhcyA9IG5ldyB0bXNhcGRmLlZQYXNzZW5nZXJzKCk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldEJvYXJkSUQoYnZiWzBdLmdldEJvb2tJZCgpLnRvU3RyaW5nKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRUaWNrbm8oYnZiWzBdLmdldFRpY2tOdW1iKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRSZXNjb2RlKGJ2YlswXS5nZXRSZXNlcnZjb2RlKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRQbm0xKGJ2YlswXS5nZXRQYXNzRm5hbWUoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFBubTIoYnZiWzBdLmdldFBhc3NGbmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0UG5tMyhidmJbMF0uZ2V0UGFzc0ZuYW1lKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRQc24xKGJ2YlswXS5nZXRQYXNzU25hbWUoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFBzbjIoYnZiWzBdLmdldFBhc3NTbmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0UHNuMyhidmJbMF0uZ2V0UGFzc1NuYW1lKCkpOwogICAgICAgICAgICAgICAgICAgICAgaWYgKHVzZUFsdGVyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0RHRtKHNkZi5mb3JtYXQoYWx0ZXJJdGluLmdldERlcERhdGUoKSkpOwogICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXREdG0oc2RmLmZvcm1hdChidmJbMF0uZ2V0RGVwRGF0ZSgpKSk7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldEFjZDEoYnZiWzBdLmdldENhYmluQWJicigpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0QWNkMihidmJbMF0uZ2V0Q2FiaW5BYmJyKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRBY2QzKGJ2YlswXS5nZXRDYWJpbkFiYnIoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldENzbjEoYnZiWzBdLmdldENhYmluTnVtYigpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0Q3NuMihidmJbMF0uZ2V0Q2FiaW5OdW1iKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRDc24zKGJ2YlswXS5nZXRDYWJpbk51bWIoKSk7CiAgICAgICAgICAgICAgICAgICAgICBpZiAoYnZiWzBdLmdldEFnZUNhdGVnKCkuZXF1YWxzKCJBRCIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0UGFjKCJBRFVMVCIpOwogICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChidmJbMF0uZ2V0QWdlQ2F0ZWcoKS5lcXVhbHMoIkNIIikpIHsKICAgICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRQYWMoIkNISUxEIik7CiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGJ2YlswXS5nZXRBZ2VDYXRlZygpLmVxdWFscygiSU4iKSkgewogICAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFBhYygiSU5GQU5UIik7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFRpY2soYnZiWzBdLmdldFRpY2tOdW1iKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRWZXNzZWwoYnZiWzBdLmdldFZlc3NOYW1lKCkpOwogICAgICAgICAgICAgICAgICAgICAgaWYgKHVzZUFsdGVyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0VmVzc2VsKGFsdGVySXRpbi5nZXRWZXNzTmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0VmVzc2VsKGJ2YlswXS5nZXRWZXNzTmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFJvdXRlKCJUQU5HRVIgTUVEIC0gIiArIGJ2YlswXS5nZXRBcnJMb2NOYW1lKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRDbihidmJbMF0uZ2V0Q29tcE5hbWUoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWcGFzLnNldFBnbihidmJbMF0uZ2V0R2VuZGVyKCkpOwogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRQbm8oYnZiWzBdLmdldFBhc3BydE51bSgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0UG1zaWQoYnZiWzBdLmdldENhbGxOdW0oKS50b1N0cmluZygpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0UGJkKHNkcy5mb3JtYXQoYnZiWzBdLmdldEJpcnRoRGF0ZSgpKSk7CgogICAgICAgICAgICAgICAgICAgICAgVnBhcy5zZXRCZXJ0aChidmJbMF0uZ2V0UGxhdGZOdW0oKS50b1N0cmluZygpKTsKICAgICAgICAgICAgICAgICAgICAgIFZwYXMuc2V0UHJkYXRlKHNkZi5mb3JtYXQoY2FsLmdldFRpbWUoKSkpOwogICAgICAgICAgICAgICAgICAgICAgd2J0Y2t0ID0gbmV3IFdlYlRpY2tldChWcGFzKTsKICAgICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHdlYnBkZiA9IHdidGNrdC5jcmVhdGVUaWNrZXQoKTsKICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKERvY3VtZW50RXhjZXB0aW9uIGRvY2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgd2VicGRmID0gIiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGRvY2UucHJpbnRTdGFja1RyYWNlKCk7CiAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBpb2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgd2VicGRmID0gIiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGlvZS5wcmludFN0YWNrVHJhY2UoKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKCJJJ20gaW4gdmVoaWNsZSBjYXNlLiIgKyBQREZfTU9ERSk7CiAgICAgICAgICAgICAgICAgICAgICB0bXNhcGRmLlZWZWhpY2xlcyBWVmVoID0gbmV3IHRtc2FwZGYuVlZlaGljbGVzKCk7CiAgICAgICAgICAgICAgICAgICAgICBWVmVoLnNldEJvYXJkSUQoYnZiWzBdLmdldEJvb2tJZCgpLnRvU3RyaW5nKCkpOwogICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXRUaWNrbm8oYnZiWzBdLmdldFRpY2tOdW1iKCkpOwogICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXRSZXNjb2RlKGJ2YlswXS5nZXRSZXNlcnZjb2RlKCkpOwogICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXRMaWNlbnNlKGJ2YlswXS5nZXRWZWhQbGF0ZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZWZWguc2V0VHlwZShidmJbMF0uZ2V0VmVoQ2xhc3MoKSk7CiAgICAgICAgICAgICAgICAgICAgICBWVmVoLnNldE1vZGVsKGJ2YlswXS5nZXRWZWhCcmFuZCgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZWZWguc2V0VmVzc2VsKGJ2YlswXS5nZXRWZXNzTmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIGlmICh1c2VBbHRlcikgewogICAgICAgICAgICAgICAgICAgICAgICBWVmVoLnNldFZlc3NlbChhbHRlckl0aW4uZ2V0VmVzc05hbWUoKSk7CiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBWVmVoLnNldFZlc3NlbChidmJbMF0uZ2V0VmVzc05hbWUoKSk7CiAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXRSb3V0ZSgiVEFOR0VSIE1FRCAtICIgKyBidmJbMF0uZ2V0QXJyTG9jTmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAgIFZWZWguc2V0Q24oYnZiWzBdLmdldENvbXBOYW1lKCkpOwogICAgICAgICAgICAgICAgICAgICAgaWYgKHVzZUFsdGVyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIFZWZWguc2V0RHRtKHNkZi5mb3JtYXQoYWx0ZXJJdGluLmdldERlcERhdGUoKSkpOwogICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXREdG0oc2RmLmZvcm1hdChidmJbMF0uZ2V0RGVwRGF0ZSgpKSk7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICBWVmVoLnNldERubShidmJbMF0uZ2V0VmVoRHJpdmVyKCkpOwogICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXRQbXNpZChidmJbMF0uZ2V0Q2FsbE51bSgpLnRvU3RyaW5nKCkpOwogICAgICAgICAgICAgICAgICAgICAgVlZlaC5zZXRCZXJ0aChidmJbMF0uZ2V0UGxhdGZOdW0oKS50b1N0cmluZygpKTsKICAgICAgICAgICAgICAgICAgICAgIFZWZWguc2V0UHJkYXRlKHNkZi5mb3JtYXQoY2FsLmdldFRpbWUoKSkpOwogICAgICAgICAgICAgICAgICAgICAgd2J0Y2t0ID0gbmV3IFdlYlRpY2tldChWVmVoKTsKICAgICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHdlYnBkZiA9IHdidGNrdC5jcmVhdGVUaWNrZXQoKTsKICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKERvY3VtZW50RXhjZXB0aW9uIGRvY2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgd2VicGRmID0gIiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGRvY2UucHJpbnRTdGFja1RyYWNlKCk7CiAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBpb2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgd2VicGRmID0gIiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGlvZS5wcmludFN0YWNrVHJhY2UoKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgeG1sLm1lc3NhZ2VzLlNlcnZpY2VNZXNzYWdlLkJsb2IgYmxvYiA9IG5ldyBCbG9iKCk7CiAgICAgICAgICAgICAgICAgICAgYmxvYi5zZXREYXRhQmluYXJ5KGdldEJ5dGVzRnJvbUZpbGUod2VicGRmKSk7CiAgICAgICAgICAgICAgICAgICAgYnMuYWRkQmxvYihibG9iKTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB4bWwubWVzc2FnZXMuU2VydmljZU1lc3NhZ2UuQmxvYiBibG9iID0gbmV3IEJsb2IoKTsKICAgICAgICAgICAgICAgICAgICBibG9iLnNldERhdGFCaW5hcnkoQ3JlYXRlRm9ybShyLmdldENsb2IoIlBGX0ZPUk0iKSwgYnZiWzBdKSk7CiAgICAgICAgICAgICAgICAgICAgYnMuYWRkQmxvYihibG9iKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBiID0gdHJ1ZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHIuY2xvc2UoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgaWYgKCFiKSB7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oNSwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCkpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCi8vICAgICAgICAgICAgICAgIGlmIChQREZfTU9ERSkgewovLyAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwovLyAgICAgICAgICAgICAgICB9CgogICAgICAgIGlmIChicy5nZXRCbG9iQ291bnQoKSA9PSAwKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oNSwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCkpOwogICAgICAgIH0KICAgICAgICBCbG9iRGF0YSBiZCA9IG5ldyBCbG9iRGF0YSgpOwogICAgICAgIGJkLnNldEJsb2JzKGJzKTsKICAgICAgICBzbS5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuc2V0QmxvYkRhdGEoYmQpOwovLyAgICAgICAgICAgICAgICBzbS5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VIZWFkZXIoKS5zZXRTdGF0dXNJbmZvKERCVXRpbGl0aWVzLmdldFN0YXR1c0luZm8oMCwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCkpKTsKICAgICAgfSBjYXRjaCAoREFPRXhjZXB0aW9uIGUpIHsKICAgICAgICBlLnByaW50U3RhY2tUcmFjZSgpOwogICAgICAgIHNtLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZUhlYWRlcigpLnNldFN0YXR1c0luZm8oREJVdGlsaXRpZXMuZ2V0U3RhdHVzSW5mbyg1LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSkpOwogICAgICB9IGNhdGNoIChTUUxFeGNlcHRpb24gZSkgewogICAgICAgIGUucHJpbnRTdGFja1RyYWNlKCk7CiAgICAgICAgc20uZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlSGVhZGVyKCkuc2V0U3RhdHVzSW5mbyhEQlV0aWxpdGllcy5nZXRTdGF0dXNJbmZvKDUsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpKSk7CiAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsKICAgICAgICBlLnByaW50U3RhY2tUcmFjZSgpOwogICAgICAgIHNtLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZUhlYWRlcigpLnNldFN0YXR1c0luZm8oREJVdGlsaXRpZXMuZ2V0U3RhdHVzSW5mbyg1LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSkpOwogICAgICB9IGNhdGNoIChEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbiBlKSB7CiAgICAgICAgZS5wcmludFN0YWNrVHJhY2UoKTsKICAgICAgICBzbS5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VIZWFkZXIoKS5zZXRTdGF0dXNJbmZvKGUuZ2V0U3RhdHVzSW5mbygpKTsKICAgICAgfQogICAgfQogIH0KCiAgcHVibGljIGJ5dGVbXSBnZXRCeXRlc0Zyb21GaWxlKFN0cmluZyBmaWxlbmFtZSkgdGhyb3dzIElPRXhjZXB0aW9uIHsKICAgIGJ5dGUgcmVhZEJ1ZltdID0gbmV3IGJ5dGVbMTAyNCAqIDRdOwogICAgdHJ5IHsKICAgICAgamF2YS5pby5GaWxlSW5wdXRTdHJlYW0gZmluID0gbmV3IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtKGZpbGVuYW1lKTsKICAgICAgamF2YS5pby5CeXRlQXJyYXlPdXRwdXRTdHJlYW0gYm91dCA9IG5ldyBqYXZhLmlvLkJ5dGVBcnJheU91dHB1dFN0cmVhbSgpOwogICAgICBpbnQgcmVhZENudCA9IGZpbi5yZWFkKHJlYWRCdWYpOwogICAgICB3aGlsZSAoMCA8IHJlYWRDbnQpIHsKICAgICAgICBib3V0LndyaXRlKHJlYWRCdWYsIDAsIHJlYWRDbnQpOwogICAgICAgIHJlYWRDbnQgPSBmaW4ucmVhZChyZWFkQnVmKTsKICAgICAgfQogICAgICBmaW4uY2xvc2UoKTsKICAgICAgcmV0dXJuIGJvdXQudG9CeXRlQXJyYXkoKTsKICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CiAgICAgIHJldHVybiBuZXcgYnl0ZVswXTsKICAgIH0KICB9CgogIHB1YmxpYyBTZXJ2aWNlTWVzc2FnZSBjcmVhdGVWYWxpZGF0aW9uU3RydWN0dXJlKEVtYmFya2R0YVZ3QmVhbltdIGVtYmFya1Jvd3MpIHsKCiAgICBTZXJ2aWNlTWVzc2FnZSBtc2cgPSBudWxsOwoKICAgIGlmIChlbWJhcmtSb3dzLmxlbmd0aCA+IDApIHsKICAgICAgbXNnID0gbmV3IFNlcnZpY2VNZXNzYWdlKCk7CiAgICAgIEVtYmFya2F0aW9uRGF0YSBlbWJkdGEgPSBuZXcgRW1iYXJrYXRpb25EYXRhKCk7CiAgICAgIFNlcnZpY2VCb2R5IHNiID0gbmV3IFNlcnZpY2VCb2R5KCk7CiAgICAgIE1lc3NhZ2VEYXRhIG1zZ0RhdGEgPSBuZXcgTWVzc2FnZURhdGEoKTsKICAgICAgc2Iuc2V0TWVzc2FnZURhdGEobXNnRGF0YSk7CiAgICAgIG1zZy5zZXRTZXJ2aWNlQm9keShzYik7CiAgICAgIG1zZ0RhdGEuc2V0RW1iYXJrYXRpb25EYXRhKGVtYmR0YSk7CiAgICAgIC8vCiAgICAgIC8vCiAgICAgIEJvb2tpbmcgYm9vayA9IG5ldyBCb29raW5nKCk7CiAgICAgIGVtYmR0YS5zZXRCb29raW5nKGJvb2spOwogICAgICBQYXNzZW5nZXJzIHBhc3Njb250YWluZXIgPSBuZXcgUGFzc2VuZ2VycygpOwogICAgICBib29rLnNldFBhc3NlbmdlcnMocGFzc2NvbnRhaW5lcik7CiAgICAgIFZlaGljbGVzIHZlaGNvbnRhaW5lciA9IG5ldyBWZWhpY2xlcygpOwogICAgICBib29rLnNldFZlaGljbGVzKHZlaGNvbnRhaW5lcik7CgogICAgICAvLyBLYWxvIGVlZWVlPz8/Pz8/PwogICAgICBmb3IgKGludCBpID0gMDsgaSA8IDE7IGkrKykgewogICAgICAgIFRyaXBEYXRhIHRyaXBkdGEgPSBuZXcgVHJpcERhdGEoKTsKICAgICAgICB0cmlwZHRhLnNldFNhaWxJRChlbWJhcmtSb3dzW2ldLmdldFNhaWxJZCgpLmxvbmdWYWx1ZSgpKTsKICAgICAgICB0cmlwZHRhLnNldENvbXBhbnlDb2RlKGVtYmFya1Jvd3NbaV0uZ2V0Q29tcENvZGUoKSk7CiAgICAgICAgdHJpcGR0YS5zZXRDb21wYW55RGVzY3JpcHRpb24oZW1iYXJrUm93c1tpXS5nZXRDb21wTmFtZSgpKTsKICAgICAgICB0cmlwZHRhLnNldERlcGFydHVyZVBvcnRDb2RlKGVtYmFya1Jvd3NbaV0uZ2V0RGVwQ29kZSgpLnRyaW0oKSk7CiAgICAgICAgdHJpcGR0YS5zZXREZXBhcnR1cmVQb3J0RGVzY3JpcHRpb24oZW1iYXJrUm93c1tpXS5nZXREZXBMb2NOYW1lKCkpOwogICAgICAgIFN0cmluZyBkdCA9IGVtYmFya1Jvd3NbaV0uZ2V0RGVwRGF0ZSgpLnRvU3RyaW5nKCk7CiAgICAgICAgU3RyaW5nIHRtID0gZW1iYXJrUm93c1tpXS5nZXREZXBEYXRlKCkudG9TdHJpbmcoKTsKICAgICAgICB0cmlwZHRhLnNldERlcGFydHVyZURhdGUoZHQuc3Vic3RyaW5nKDAsIDQpICsgZHQuc3Vic3RyaW5nKDUsIDcpICsgZHQuc3Vic3RyaW5nKDgsIDEwKSk7CiAgICAgICAgdHJpcGR0YS5zZXREZXBhcnR1cmVUaW1lKHRtLnN1YnN0cmluZygxMSwgMTMpICsgdG0uc3Vic3RyaW5nKDE0LCAxNikpOwogICAgICAgIHRyaXBkdGEuc2V0SXRpbmVyYXJ5SUQoZW1iYXJrUm93c1tpXS5nZXRJdGluSWQoKS5sb25nVmFsdWUoKSk7CiAgICAgICAgdHJpcGR0YS5zZXRBcnJpdmFsUG9ydENvZGUoZW1iYXJrUm93c1tpXS5nZXRBcnJDb2RlKCkudHJpbSgpKTsKICAgICAgICB0cmlwZHRhLnNldEFycml2YWxQb3J0RGVzY3JpcHRpb24oZW1iYXJrUm93c1tpXS5nZXRBcnJMb2NOYW1lKCkpOwogICAgICAgIGR0ID0gZW1iYXJrUm93c1tpXS5nZXRBcnJEYXRlKCkudG9TdHJpbmcoKTsKICAgICAgICB0bSA9IGVtYmFya1Jvd3NbaV0uZ2V0QXJyRGF0ZSgpLnRvU3RyaW5nKCk7CiAgICAgICAgdHJpcGR0YS5zZXRBcnJpdmFsRGF0ZShkdC5zdWJzdHJpbmcoMCwgNCkgKyBkdC5zdWJzdHJpbmcoNSwgNykgKyBkdC5zdWJzdHJpbmcoOCwgMTApKTsKICAgICAgICB0cmlwZHRhLnNldEFycml2YWxUaW1lKHRtLnN1YnN0cmluZygxMSwgMTMpICsgdG0uc3Vic3RyaW5nKDE0LCAxNikpOwogICAgICAgIHRyaXBkdGEuc2V0VmVzc2VsSU1PKGVtYmFya1Jvd3NbaV0uZ2V0VmVzc0ltbygpKTsKICAgICAgICB0cmlwZHRhLnNldFZlc3NlbE5hbWUoZW1iYXJrUm93c1tpXS5nZXRWZXNzTmFtZSgpKTsKCiAgICAgICAgaWYgKGkgPT0gMCkgewogICAgICAgICAgYm9vay5zZXRCb29raW5nTnVtYmVyKGVtYmFya1Jvd3NbaV0uZ2V0UmVzZXJ2Y29kZSgpKTsKICAgICAgICB9CgogICAgICAgIGlmIChlbWJhcmtSb3dzW2ldLmdldEluaXRUaWNrZXRJc3N1ZXIoKSA9PSBudWxsKSB7CiAgICAgICAgICBlbWJhcmtSb3dzW2ldLnNldEluaXRUaWNrZXRJc3N1ZXIoIiIpOwogICAgICAgIH0KICAgICAgICBpZiAoZW1iYXJrUm93c1tpXS5nZXRCb29rVHlwZSgpLnRyaW0oKS5jb21wYXJlVG8oIlAiKSA9PSAwKSB7CiAgICAgICAgICBQYXNzZW5nZXIgbnJvdyA9IG5ldyBQYXNzZW5nZXIoKTsKICAgICAgICAgIG5yb3cuc2V0U3VybmFtZShlbWJhcmtSb3dzW2ldLmdldFBhc3NTbmFtZSgpKTsKICAgICAgICAgIG5yb3cuc2V0SXRpbmVyYXJ5SUQoZW1iYXJrUm93c1tpXS5nZXRJdGluSWQoKS5sb25nVmFsdWUoKSk7CiAgICAgICAgICBucm93LnNldE5hbWUoZW1iYXJrUm93c1tpXS5nZXRQYXNzRm5hbWUoKSk7CiAgICAgICAgICBucm93LnNldEFnZUNhdGVnb3J5KGVtYmFya1Jvd3NbaV0uZ2V0QWdlQ2F0ZWcoKSk7CiAgICAgICAgICBucm93LnNldEdlbmRlcihlbWJhcmtSb3dzW2ldLmdldEdlbmRlcigpKTsKICAgICAgICAgIG5yb3cuc2V0TmF0aW9uYWxpdHkoZW1iYXJrUm93c1tpXS5nZXROYXRpb25hbGl0eSgpKTsKICAgICAgICAgIG5yb3cuc2V0UGFzc3BvcnROdW1iZXIoZW1iYXJrUm93c1tpXS5nZXRQYXNwcnROdW0oKSk7CiAgICAgICAgICBucm93LnNldFBhc3Nwb3J0RGVsRGF0ZShlbWJhcmtSb3dzW2ldLmdldFBhc3BydElzcygpKTsKICAgICAgICAgIG5yb3cuc2V0RG9jVHlwZShlbWJhcmtSb3dzW2ldLmdldERvY1R5cGUoKSk7CiAgICAgICAgICBucm93LnNldEJpcnRoUGxhY2UoZW1iYXJrUm93c1tpXS5nZXRCaXJ0aFBsYWNlKCkpOwogICAgICAgICAgZHQgPSBlbWJhcmtSb3dzW2ldLmdldEJpcnRoRGF0ZSgpLnRvU3RyaW5nKCk7CiAgICAgICAgICB0bSA9IGVtYmFya1Jvd3NbaV0uZ2V0QmlydGhEYXRlKCkudG9TdHJpbmcoKTsKICAgICAgICAgIG5yb3cuc2V0QmlydGhEYXRlKGR0LnN1YnN0cmluZygwLCA0KSArIGR0LnN1YnN0cmluZyg1LCA3KSArIGR0LnN1YnN0cmluZyg4LCAxMCkpOwogICAgICAgICAgbnJvdy5zZXRBY2NvbW1vZGF0aW9uVHlwZShlbWJhcmtSb3dzW2ldLmdldENhYmluQWJicigpKTsKICAgICAgICAgIG5yb3cuc2V0Q2FiaW5TZWF0TnVtYmVyKGVtYmFya1Jvd3NbaV0uZ2V0Q2FiaW5OdW1iKCkpOwogICAgICAgICAgbnJvdy5zZXRCZXJ0aChlbWJhcmtSb3dzW2ldLmdldENhYmluQmVkKCkpOwogICAgICAgICAgbnJvdy5zZXRUaWNrZXROdW1iZXIoZW1iYXJrUm93c1tpXS5nZXRUaWNrTnVtYigpKTsKICAgICAgICAgIG5yb3cuc2V0VGlja2V0SXNzdWVEYXRlKGVtYmFya1Jvd3NbaV0uZ2V0VGlja0lzcygpKTsKICAgICAgICAgIG5yb3cuc2V0VGlja2V0RXhwaXJhdGlvbkRhdGUoZW1iYXJrUm93c1tpXS5nZXRUaWNrRXhwKCkpOwogICAgICAgICAgbnJvdy5zZXRWaXNhTnVtYmVyKGVtYmFya1Jvd3NbaV0uZ2V0VmlzYU51bWJlcigpLnRyaW0oKSk7CiAgICAgICAgICBucm93LnNldEJvb2tJRChlbWJhcmtSb3dzW2ldLmdldEJvb2tJZCgpKTsKICAgICAgICAgIG5yb3cuc2V0SW5pdGlhbFRpY2tldElzc3VlcihlbWJhcmtSb3dzW2ldLmdldEluaXRUaWNrZXRJc3N1ZXIoKSk7CiAgICAgICAgICBpZiAoZW1iYXJrUm93c1tpXS5nZXREaXNhYmxlZCgpLnRyaW0oKS5jb21wYXJlVG8oIlkiKSA9PSAwKSB7CiAgICAgICAgICAgIG5yb3cuc2V0U3BlY2lhbFNlcnZpY2VzUmVxKCJZRVMiKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5yb3cuc2V0U3BlY2lhbFNlcnZpY2VzUmVxKCIgIik7CiAgICAgICAgICB9CgogICAgICAgICAgbnJvdy5zZXRNYWlkZW5OYW1lKGVtYmFya1Jvd3NbaV0uZ2V0TWFpZGVuTmFtZSgpKTsKICAgICAgICAgIG5yb3cuc2V0Q291bnRyeU9mVXN1YWxSZXNpZGVuY2UoZW1iYXJrUm93c1tpXS5nZXRSZXNpZENvdW50cnkoKSk7CiAgICAgICAgICBucm93LnNldE9jY3VwYXRpb24oZW1iYXJrUm93c1tpXS5nZXRPY2N1cGF0aW9uKCkpOwogICAgICAgICAgbnJvdy5zZXRDb21taW5nRnJvbShlbWJhcmtSb3dzW2ldLmdldENvbW1pbmdGcm9tKCkpOwogICAgICAgICAgbnJvdy5zZXRHb2luZ1RvKGVtYmFya1Jvd3NbaV0uZ2V0R29pbmdUbygpKTsKICAgICAgICAgIG5yb3cuc2V0QWRkcmVzc0luTW9yb2NjbyhlbWJhcmtSb3dzW2ldLmdldExvY2FsQWRkcmVzcygpKTsKICAgICAgICAgIG5yb3cuc2V0UGhvbmVEdXJpbmdTdGF5KGVtYmFya1Jvd3NbaV0uZ2V0UGhvbmVObygpKTsKICAgICAgICAgIG5yb3cuc2V0TWFpblJlYXNvbkZvclZpc2l0KGVtYmFya1Jvd3NbaV0uZ2V0VmlzaXRSZWFzb24oKSk7CgogICAgICAgICAgcGFzc2NvbnRhaW5lci5hZGRQYXNzZW5nZXIobnJvdyk7CiAgICAgICAgICBpZiAoKGVtYmFya1Jvd3NbaV0uZ2V0Qm9hcmRUeXBlKCkgIT0gbnVsbCkgJiYgKGVtYmFya1Jvd3NbaV0uZ2V0Qm9hcmRUeXBlKCkudHJpbSgpLmNvbXBhcmVUbygiIikgIT0gMCkpIHsKICAgICAgICAgICAgbG9uZyBib29raWQgPSBlbWJhcmtSb3dzW2ldLmdldEJvb2tJZCgpOwogICAgICAgICAgICBpbnQgcmMgPSBpOwogICAgICAgICAgICB3aGlsZSAoKHJjIDwgZW1iYXJrUm93cy5sZW5ndGgpICYmIChlbWJhcmtSb3dzW3JjXS5nZXRCb29rSWQoKSA9PSBib29raWQpKSB7CiAgICAgICAgICAgICAgaWYgKChyYyAtIGkpID09IDApIHsKICAgICAgICAgICAgICAgIG5yb3cuc2V0Qm9hcmRJRChlbWJhcmtSb3dzW3JjXS5nZXRCb2FyZElkKCkpOwogICAgICAgICAgICAgICAgbnJvdy5zZXRCb2FyZFN0YXR1cyhlbWJhcmtSb3dzW3JjXS5nZXRCb2FyZFN0YXR1cygpKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgQm9hcmRQYXNzVHJhbnNQYXNzIGJwdHJvdyA9IG5ldyBCb2FyZFBhc3NUcmFuc1Bhc3MoKTsKICAgICAgICAgICAgICBicHRyb3cuc2V0Qm9va0lEKGVtYmFya1Jvd3NbcmNdLmdldEJvb2tJZCgpKTsKICAgICAgICAgICAgICBicHRyb3cuc2V0Qm9hcmRJRChlbWJhcmtSb3dzW3JjXS5nZXRCb2FyZElkKCkpOwogICAgICAgICAgICAgIGJwdHJvdy5zZXRCb2FyZFN0YXR1cyhlbWJhcmtSb3dzW3JjXS5nZXRCb2FyZFN0YXR1cygpLnRyaW0oKSk7CiAgICAgICAgICAgICAgYnB0cm93LnNldERhdGVUaW1lKGVtYmFya1Jvd3NbcmNdLmdldEJvYXJkRGF0ZSgpLnRvU3RyaW5nKCkpOwogICAgICAgICAgICAgIGJwdHJvdy5zZXRUcmFuc1R5cGUoZW1iYXJrUm93c1tyY10uZ2V0Qm9hcmRUeXBlKCkudHJpbSgpKTsKICAgICAgICAgICAgICBicHRyb3cuc2V0VXNlck5hbWUoZW1iYXJrUm93c1tyY10uZ2V0VXNlck5hbWUoKS50cmltKCkpOwogICAgICAgICAgICAgIHJjKys7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaSA9IHJjIC0gMTsKLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZXNzYWdlaWQuY29udGFpbnMoIl9YVEVORCIpKSB7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnJvdy5zZXRCb2FyZElEKGVtYmFya1Jvd3NbaV0uZ2V0Qm9hcmRJZCgpKTsKLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBucm93LnNldEJvYXJkU3RhdHVzKGVtYmFya1Jvd3NbaV0uZ2V0Qm9hcmRTdGF0dXMoKSk7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBucm93LnNldEJvYXJkSUQoMCk7CiAgICAgICAgICAgIG5yb3cuc2V0Qm9hcmRTdGF0dXMoIk4iKTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgVmVoaWNsZSBucm93ID0gbmV3IFZlaGljbGUoKTsKICAgICAgICAgIG5yb3cuc2V0SXRpbmVyYXJ5SUQoZW1iYXJrUm93c1tpXS5nZXRJdGluSWQoKS5sb25nVmFsdWUoKSk7CiAgICAgICAgICBucm93LnNldFZlaGljbGVUeXBlKGVtYmFya1Jvd3NbaV0uZ2V0VmVoQ2xhc3MoKSk7CiAgICAgICAgICBucm93LnNldE1vZGVsKGVtYmFya1Jvd3NbaV0uZ2V0VmVoTW9kZWwoKSk7CiAgICAgICAgICBucm93LnNldEJyYW5kKGVtYmFya1Jvd3NbaV0uZ2V0VmVoQnJhbmQoKSk7CiAgICAgICAgICBucm93LnNldExlbmd0aChlbWJhcmtSb3dzW2ldLmdldFZlaExlbmd0aCgpLmludFZhbHVlKCkpOwogICAgICAgICAgbnJvdy5zZXRIZWlnaHQoZW1iYXJrUm93c1tpXS5nZXRWZWhIZWlnaHQoKS5pbnRWYWx1ZSgpKTsKICAgICAgICAgIG5yb3cuc2V0RHJpdmVyTmFtZShlbWJhcmtSb3dzW2ldLmdldFZlaERyaXZlcigpKTsKICAgICAgICAgIG5yb3cuc2V0UmVnaXN0cmF0aW9uTnVtYmVyKGVtYmFya1Jvd3NbaV0uZ2V0VmVoUGxhdGUoKSk7CiAgICAgICAgICBucm93LnNldFRpY2tldE51bWJlcihlbWJhcmtSb3dzW2ldLmdldFRpY2tOdW1iKCkpOwogICAgICAgICAgbnJvdy5zZXRUaWNrZXROdW1iZXIoZW1iYXJrUm93c1tpXS5nZXRUaWNrTnVtYigpKTsKICAgICAgICAgIG5yb3cuc2V0VGlja2V0SXNzdWVEYXRlKGVtYmFya1Jvd3NbaV0uZ2V0VGlja0lzcygpKTsKICAgICAgICAgIG5yb3cuc2V0VGlja2V0RXhwaXJhdGlvbkRhdGUoZW1iYXJrUm93c1tpXS5nZXRUaWNrRXhwKCkpOwogICAgICAgICAgbnJvdy5zZXRCb29rSUQoZW1iYXJrUm93c1tpXS5nZXRCb29rSWQoKSk7CiAgICAgICAgICBucm93LnNldEluaXRpYWxUaWNrZXRJc3N1ZXIoZW1iYXJrUm93c1tpXS5nZXRJbml0VGlja2V0SXNzdWVyKCkpOwogICAgICAgICAgdmVoY29udGFpbmVyLmFkZFZlaGljbGUobnJvdyk7CiAgICAgICAgICBpZiAoKGVtYmFya1Jvd3NbaV0uZ2V0Qm9hcmRUeXBlKCkgIT0gbnVsbCkgJiYgKGVtYmFya1Jvd3NbaV0uZ2V0Qm9hcmRUeXBlKCkudHJpbSgpLmNvbXBhcmVUbygiIikgIT0gMCkpIHsKICAgICAgICAgICAgbG9uZyBib29raWQgPSBlbWJhcmtSb3dzW2ldLmdldEJvb2tJZCgpOwogICAgICAgICAgICBpbnQgcmMgPSBpOwogICAgICAgICAgICB3aGlsZSAoKHJjIDwgZW1iYXJrUm93cy5sZW5ndGgpICYmIChlbWJhcmtSb3dzW3JjXS5nZXRCb29rSWQoKSA9PSBib29raWQpKSB7CiAgICAgICAgICAgICAgaWYgKChyYyAtIGkpID09IDApIHsKICAgICAgICAgICAgICAgIG5yb3cuc2V0Qm9hcmRJRChlbWJhcmtSb3dzW3JjXS5nZXRCb2FyZElkKCkpOwogICAgICAgICAgICAgICAgbnJvdy5zZXRCb2FyZFN0YXR1cyhlbWJhcmtSb3dzW3JjXS5nZXRCb2FyZFN0YXR1cygpKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgQm9hcmRQYXNzVHJhbnNWZWggYnB0cm93ID0gbmV3IEJvYXJkUGFzc1RyYW5zVmVoKCk7CiAgICAgICAgICAgICAgYnB0cm93LnNldEJvb2tJRChlbWJhcmtSb3dzW3JjXS5nZXRCb29rSWQoKSk7CiAgICAgICAgICAgICAgYnB0cm93LnNldEJvYXJkSUQoZW1iYXJrUm93c1tyY10uZ2V0Qm9hcmRJZCgpKTsKICAgICAgICAgICAgICBicHRyb3cuc2V0Qm9hcmRTdGF0dXMoZW1iYXJrUm93c1tyY10uZ2V0Qm9hcmRTdGF0dXMoKS50cmltKCkpOwogICAgICAgICAgICAgIGJwdHJvdy5zZXREYXRlVGltZShlbWJhcmtSb3dzW3JjXS5nZXRCb2FyZERhdGUoKS50b1N0cmluZygpKTsKICAgICAgICAgICAgICBicHRyb3cuc2V0VHJhbnNUeXBlKGVtYmFya1Jvd3NbcmNdLmdldEJvYXJkVHlwZSgpLnRyaW0oKSk7CiAgICAgICAgICAgICAgYnB0cm93LnNldFVzZXJOYW1lKGVtYmFya1Jvd3NbcmNdLmdldFVzZXJOYW1lKCkudHJpbSgpKTsKICAgICAgICAgICAgICByYysrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGkgPSByYyAtIDE7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobWVzc2FnZWlkLmNvbnRhaW5zKCJfWFRFTkQiKSkgewovLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5yb3cuc2V0Qm9hcmRJRChlbWJhcmtSb3dzW2ldLmdldEJvYXJkSWQoKSk7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnJvdy5zZXRCb2FyZFN0YXR1cyhlbWJhcmtSb3dzW2ldLmdldEJvYXJkU3RhdHVzKCkpOwovLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbnJvdy5zZXRCb2FyZElEKDApOwogICAgICAgICAgICBucm93LnNldEJvYXJkU3RhdHVzKCJOIik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVtYmR0YS5hZGRUcmlwRGF0YSh0cmlwZHRhKTsKICAgICAgfQoKICAgIH0KICAgIHJldHVybiBtc2c7CiAgfQoKICBwcm90ZWN0ZWQgUnVsZXNCeUxvY0JlYW4gZmluZFJ1bGUoSXRpbmVucVZ3QmVhbiBpdGluZXJhcnksIFN0cmluZyBydWxla2luZCkgewogICAgUnVsZXNCeUxvY01hbmFnZXIgcmJsbSA9IFJ1bGVzQnlMb2NNYW5hZ2VyLmdldEluc3RhbmNlKCk7CiAgICBSdWxlc0J5TG9jQmVhbiByb3cgPSBudWxsOwogICAgdHJ5IHsKICAgICAgcm93ID0gcmJsbS5sb2FkQnlQcmltYXJ5S2V5KGl0aW5lcmFyeS5nZXRBcnJDb2RlKCksIHJ1bGVraW5kKTsKICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBkYW9lKSB7CiAgICAgIGRiRVJST1IgPSB0cnVlOwogICAgICBkYkVyclN0ciA9IGRhb2UuZ2V0TG9jYWxpemVkTWVzc2FnZSgpOwogICAgICBkYW9lLnByaW50U3RhY2tUcmFjZSgpOwogICAgfQogICAgcmV0dXJuIHJvdzsKICB9CgogIHB1YmxpYyBib29sZWFuIHZhbGlkYXRlUGFzc2VuZ2VyT25SdWxlcyhJdGluZW5xVndCZWFuIGl0aW5lcmFyeSwgU2VydmljZU1lc3NhZ2UgdmxkQ250bnIpIHRocm93cyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbiB7CgogICAgUnVsZXNCeUxvY0JlYW4gcnVsZSA9IGZpbmRSdWxlKGl0aW5lcmFyeSwgIlAiKTsKCiAgICBQYXNzZW5nZXIgcHNlZyA9IHZsZENudG5yLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0UGFzc2VuZ2VycygpLmdldFBhc3NlbmdlcigwKTsKICAgIGlmIChydWxlID09IG51bGwpIHsKICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDIwLCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgaXRpbmVyYXJ5LmdldEFyclBvcnREZXNjcigpKTsKICAgIH0KICAgIC8vIGhhbmRsZSA6IFRJQ0tfTlVNQgogICAgaWYgKChwc2VnLmdldFRpY2tldE51bWJlcigpID09IG51bGwpIHx8IChwc2VnLmdldFRpY2tldE51bWJlcigpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oNDQsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1RJQ0tfTlVNQl0pOwogICAgfQogICAgLy8gaGFuZGxlIDogUkVTRVJWQ09ERQogICAgU3RyaW5nIGJvb2tpbmdObyA9IHZsZENudG5yLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0Qm9va2luZ051bWJlcigpOwogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfUkVTRVJWQ09ERV0pKSB7CiAgICAgIGlmICgoYm9va2luZ05vID09IG51bGwpIHx8IChib29raW5nTm8udHJpbSgpLmxlbmd0aCgpID09IDApKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDI3LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9SRVNFUlZDT0RFXSk7CiAgICAgIH0KICAgIH0KICAgIC8vIGhhbmRsZSA6IFRJQ0tfRVhQCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9USUNLX0VYUF0pKSB7CiAgICAgIGlmICgocHNlZy5nZXRUaWNrZXRFeHBpcmF0aW9uRGF0ZSgpID09IG51bGwpIHx8IChwc2VnLmdldFRpY2tldEV4cGlyYXRpb25EYXRlKCkudHJpbSgpLmxlbmd0aCgpID09IDApKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDQzLCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9QQVNQUlRfSVNTXSk7CiAgICAgIH0KICAgIH0KCiAgICAvLyBoYW5kbGUgOiBUSUNLX0lTUwogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfVElDS19JU1NdKSkgewogICAgICBpZiAoKHBzZWcuZ2V0VGlja2V0SXNzdWVEYXRlKCkgPT0gbnVsbCkgfHwgKHBzZWcuZ2V0VGlja2V0SXNzdWVEYXRlKCkudHJpbSgpLmxlbmd0aCgpID09IDApKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDQyLCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9QQVNQUlRfSVNTXSk7CiAgICAgIH0KICAgIH0KCiAgICAvLyBoYW5kbGUgOiBQQVNTX1NOQU1FCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9QQVNTX1NOQU1FXSkpIHsKICAgICAgaWYgKChwc2VnLmdldFN1cm5hbWUoKSA9PSBudWxsKSB8fCAocHNlZy5nZXRTdXJuYW1lKCkudHJpbSgpLmxlbmd0aCgpID09IDApKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDI4LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9QQVNTX1NOQU1FXSk7CiAgICAgIH0KICAgIH0KICAgIC8vIGhhbmRsZSA6IFBBU1NfRk5BTUUKICAgIGlmIChydWxlLmdldEZpZWxkc0NhdGFsb2coKS5jb250YWlucyhCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1BBU1NfRk5BTUVdKSkgewogICAgICBpZiAoKHBzZWcuZ2V0TmFtZSgpID09IG51bGwpIHx8IChwc2VnLmdldE5hbWUoKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oMjksIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1BBU1NfRk5BTUVdKTsKICAgICAgfQogICAgfQogICAgLy8gaGFuZGxlIDogR0VOREVSCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9HRU5ERVJdKSkgewogICAgICBpZiAoKHBzZWcuZ2V0R2VuZGVyKCkgPT0gbnVsbCkgfHwgKHBzZWcuZ2V0R2VuZGVyKCkudHJpbSgpLmxlbmd0aCgpID09IDApKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDI0LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9HRU5ERVJdKTsKICAgICAgfQogICAgfQogICAgLy8gaGFuZGxlIDogQUdFQ0FUCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9BR0VfQ0FURUddKSkgewogICAgICBpZiAoKHBzZWcuZ2V0QWdlQ2F0ZWdvcnkoKSA9PSBudWxsKSB8fCAocHNlZy5nZXRBZ2VDYXRlZ29yeSgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbigzMCwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfQUdFX0NBVEVHXSk7CiAgICAgIH0KICAgIH0KICAgIC8vIGhhbmRsZSA6IEJJUlRIX0RBVEUKICAgIGlmIChydWxlLmdldEZpZWxkc0NhdGFsb2coKS5jb250YWlucyhCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX0JJUlRIX0RBVEVdKSkgewogICAgICBpZiAoKHBzZWcuZ2V0QmlydGhEYXRlKCkgPT0gbnVsbCkgfHwgKHBzZWcuZ2V0QmlydGhEYXRlKCkudHJpbSgpLmxlbmd0aCgpID09IDApKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDMxLCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9CSVJUSF9EQVRFXSk7CiAgICAgIH0KICAgIH0KICAgIC8vIGhhbmRsZSA6IEJJUlRIX1BMQUNFCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9CSVJUSF9QTEFDRV0pKSB7CiAgICAgIGlmICgocHNlZy5nZXRCaXJ0aFBsYWNlKCkgPT0gbnVsbCkgfHwgKHBzZWcuZ2V0QmlydGhQbGFjZSgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbigzMiwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfQklSVEhfUExBQ0VdKTsKICAgICAgfQogICAgfQogICAgLy8gaGFuZGxlIDogTkFUSU9OQUxJVFkKICAgIGlmIChydWxlLmdldEZpZWxkc0NhdGFsb2coKS5jb250YWlucyhCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX05BVElPTkFMSVRZXSkpIHsKICAgICAgaWYgKChwc2VnLmdldE5hdGlvbmFsaXR5KCkgPT0gbnVsbCkgfHwgKHBzZWcuZ2V0TmF0aW9uYWxpdHkoKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oMzMsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX05BVElPTkFMSVRZXSk7CiAgICAgIH0KICAgIH0KICAgIC8vIGhhbmRsZSA6IERPQ19UWVBFCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9ET0NfVFlQRV0pKSB7CiAgICAgIGlmICgocHNlZy5nZXREb2NUeXBlKCkgPT0gbnVsbCkgfHwgKHBzZWcuZ2V0RG9jVHlwZSgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbigzNywgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfRE9DX1RZUEVdKTsKICAgICAgfQogICAgfQoKICAgIC8vIGhhbmRsZSA6IFBBU1BSVF9OVU0KICAgIGlmIChydWxlLmdldEZpZWxkc0NhdGFsb2coKS5jb250YWlucyhCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1BBU1BSVF9OVU1dKSkgewogICAgICBpZiAoKHBzZWcuZ2V0UGFzc3BvcnROdW1iZXIoKSA9PSBudWxsKSB8fCAocHNlZy5nZXRQYXNzcG9ydE51bWJlcigpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbigzNCwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfUEFTUFJUX05VTV0pOwogICAgICB9CiAgICB9CiAgICAvLyBoYW5kbGUgOiBQQVNQUlRfSVNTCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9QQVNQUlRfSVNTXSkpIHsKICAgICAgaWYgKChwc2VnLmdldFBhc3Nwb3J0RGVsRGF0ZSgpID09IG51bGwpIHx8IChwc2VnLmdldFBhc3Nwb3J0RGVsRGF0ZSgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbigzNSwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfUEFTUFJUX0lTU10pOwogICAgICB9CiAgICB9CiAgICAvLyBoYW5kbGUgOiBQQVNQUlRfRVhQCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9QQVNQUlRfRVhQXSkpIHsKICAgICAgaWYgKChwc2VnLmdldFBhc3Nwb3J0RGVsRGF0ZSgpID09IG51bGwpIHx8IChwc2VnLmdldFBhc3Nwb3J0RGVsRGF0ZSgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbigzNiwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfUEFTUFJUX0VYUF0pOwogICAgICB9CiAgICB9CiAgICAvLyBoYW5kbGUgOiBWSVNBX05VTUJFUgogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfVklTQV9OVU1CRVJdKSkgewogICAgICBpZiAoKHBzZWcuZ2V0VmlzYU51bWJlcigpID09IG51bGwpIHx8IChwc2VnLmdldFZpc2FOdW1iZXIoKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oMzgsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1ZJU0FfTlVNQkVSXSk7CiAgICAgIH0KICAgIH0KCiAgICAvLyBoYW5kbGUgOiBUSUNLX0lOSVRfSVNTVUVSCi8vICAgICAgICBpZiAoKHBzZWcuZ2V0SW5pdGlhbFRpY2tldElzc3VlcigpID09IG51bGwpIHx8IChwc2VnLmdldEluaXRpYWxUaWNrZXRJc3N1ZXIoKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKLy8gICAgICAgICAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDcsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1RJQ0tfTlVNQl0pOwovLyAgICAgICAgfQogICAgLy8gaGFuZGxlIDogTUFJREVOTkFNRQogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfTUFJREVOTkFNRV0pKSB7CiAgICAgIGlmICgocHNlZy5nZXRNYWlkZW5OYW1lKCkgPT0gbnVsbCkgfHwgKHBzZWcuZ2V0TWFpZGVuTmFtZSgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig0NSwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfTUFJREVOTkFNRV0pOwogICAgICB9CiAgICB9CiAgICAvLyBoYW5kbGUgOiBJRF9SQ09VTlRSWQogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfUkNPVU5UUlldKSkgewogICAgICBpZiAoKHBzZWcuZ2V0Q291bnRyeU9mVXN1YWxSZXNpZGVuY2UoKSA9PSBudWxsKSB8fCAocHNlZy5nZXRDb3VudHJ5T2ZVc3VhbFJlc2lkZW5jZSgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig0NiwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfUkNPVU5UUlldKTsKICAgICAgfQogICAgfQogICAgLy8gaGFuZGxlIDogSURfT0NDVVBBVElPTgogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfT0NDVVBBVElPTl0pKSB7CiAgICAgIGlmICgocHNlZy5nZXRPY2N1cGF0aW9uKCkgPT0gbnVsbCkgfHwgKHBzZWcuZ2V0T2NjdXBhdGlvbigpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig0NywgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfT0NDVVBBVElPTl0pOwogICAgICB9CiAgICB9CiAgICAvLyBoYW5kbGUgOiBJRF9DRlJPTQogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfQ0ZST01dKSkgewogICAgICBpZiAoKHBzZWcuZ2V0Q29tbWluZ0Zyb20oKSA9PSBudWxsKSB8fCAocHNlZy5nZXRDb21taW5nRnJvbSgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig0OCwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfQ0ZST01dKTsKICAgICAgfQogICAgfQogICAgLy8gaGFuZGxlIDogSURfR1RPCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9HVE9dKSkgewogICAgICBpZiAoKHBzZWcuZ2V0R29pbmdUbygpID09IG51bGwpIHx8IChwc2VnLmdldEdvaW5nVG8oKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oNDksIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX0dUT10pOwogICAgICB9CiAgICB9CiAgICAvLyBoYW5kbGUgOiBJRF9NQUREUkVTUwogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfTUFERFJFU1NdKSkgewogICAgICBpZiAoKHBzZWcuZ2V0QWRkcmVzc0luTW9yb2NjbygpID09IG51bGwpIHx8IChwc2VnLmdldEFkZHJlc3NJbk1vcm9jY28oKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oNTAsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX01BRERSRVNTXSk7CiAgICAgIH0KICAgIH0KCiAgICAvLyBoYW5kbGUgOiBJRF9QSE9ORQoKICAgIGlmIChwc2VnLmdldFBob25lRHVyaW5nU3RheSgpICE9IG51bGwpIHsKICAgICAgaWYgKCFEZXZlbG9wVXRpbHMuQ2hlY2tJc051bWVyaWMocHNlZy5nZXRQaG9uZUR1cmluZ1N0YXkoKS50cmltKCkpKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDYxLCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9QSE9ORV0pOwogICAgICB9CiAgICB9CgogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfUEhPTkVdKSkgewogICAgICBpZiAoKHBzZWcuZ2V0UGhvbmVEdXJpbmdTdGF5KCkgPT0gbnVsbCkgfHwgKHBzZWcuZ2V0UGhvbmVEdXJpbmdTdGF5KCkudHJpbSgpLmxlbmd0aCgpID09IDApKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDUxLCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9QSE9ORV0pOwogICAgICB9CiAgICB9CiAgICAvLyBoYW5kbGUgOiBJRF9WUkVBU09OCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9WUkVBU09OXSkpIHsKICAgICAgaWYgKChwc2VnLmdldE1haW5SZWFzb25Gb3JWaXNpdCgpID09IG51bGwpIHx8IChwc2VnLmdldE1haW5SZWFzb25Gb3JWaXNpdCgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig1MiwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfVlJFQVNPTl0pOwogICAgICB9CiAgICB9CiAgICAvLyBoYW5kbGUgOiBDQUJJTl9BQkJSCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9DQUJJTl9BQkJSXSkpIHsKICAgICAgaWYgKChwc2VnLmdldEFjY29tbW9kYXRpb25UeXBlKCkgPT0gbnVsbCkgfHwgKHBzZWcuZ2V0QWNjb21tb2RhdGlvblR5cGUoKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oMzksIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX0NBQklOX0FCQlJdKTsKICAgICAgfQogICAgfQogICAgLy8gaGFuZGxlIDogQ0FCSU5fQUJCUgovLyAgICAgICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfQ0FCSU5fQUJCUl0pKSB7Ci8vICAgICAgICAgICAgaWYgKChwc2VnLmdldEFjY29tbW9kYXRpb25UeXBlKCkgPT0gbnVsbCkgfHwgKHBzZWcuZ2V0QWNjb21tb2RhdGlvblR5cGUoKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKLy8gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig3LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9DQUJJTl9BQkJSXSk7Ci8vICAgICAgICAgICAgfQovLyAgICAgICAgfQogICAgLy8gaGFuZGxlIDogQ0FCSU5fTlVNQgogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfQ0FCSU5fTlVNQl0pKSB7CiAgICAgIGlmICgocHNlZy5nZXRDYWJpblNlYXROdW1iZXIoKSA9PSBudWxsKSB8fCAocHNlZy5nZXRDYWJpblNlYXROdW1iZXIoKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oNDAsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX0NBQklOX05VTUJdKTsKICAgICAgfQogICAgfQogICAgLy8gaGFuZGxlIDogQ0FCSU5fQkVECiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9DQUJJTl9CRURdKSkgewogICAgICBpZiAoKHBzZWcuZ2V0QmVydGgoKSA9PSBudWxsKSB8fCAocHNlZy5nZXRCZXJ0aCgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig0MSwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfQ0FCSU5fQkVEXSk7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIHB1YmxpYyBib29sZWFuIHZhbGlkYXRlVmVoaWNsZXNPblJ1bGVzKEl0aW5lbnFWd0JlYW4gaXRpbmVyYXJ5LCBTZXJ2aWNlTWVzc2FnZSB2bGRDbnRucikgdGhyb3dzIERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uIHsKCiAgICBSdWxlc0J5TG9jQmVhbiBydWxlID0gZmluZFJ1bGUoaXRpbmVyYXJ5LCAiViIpOwoKICAgIFZlaGljbGUgdnNlZyA9IHZsZENudG5yLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0VmVoaWNsZXMoKS5nZXRWZWhpY2xlKDApOwogICAgaWYgKHJ1bGUgPT0gbnVsbCkgewogICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oMjAsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBpdGluZXJhcnkuZ2V0QXJyUG9ydERlc2NyKCkpOwogICAgfQogICAgLy8gaGFuZGxlIDogVElDS19OVU1CCiAgICBpZiAoKHZzZWcuZ2V0VGlja2V0TnVtYmVyKCkgPT0gbnVsbCkgfHwgKHZzZWcuZ2V0VGlja2V0TnVtYmVyKCkudHJpbSgpLmxlbmd0aCgpID09IDApKSB7CiAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig0NCwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfVElDS19OVU1CXSk7CiAgICB9CiAgICAvLyBoYW5kbGUgOiBUSUNLX0lOSVRfSVNTVUVSCi8vICAgICAgICBpZiAoKHZzZWcuZ2V0SW5pdGlhbFRpY2tldElzc3VlcigpID09IG51bGwpIHx8ICh2c2VnLmdldEluaXRpYWxUaWNrZXRJc3N1ZXIoKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKLy8gICAgICAgICAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDcsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1RJQ0tfTlVNQl0pOwovLyAgICAgICAgfQogICAgLy8gaGFuZGxlIDogUkVTRVJWQ09ERQogICAgU3RyaW5nIGJvb2tpbmdObyA9IHZsZENudG5yLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0Qm9va2luZ051bWJlcigpOwogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfUkVTRVJWQ09ERV0pKSB7CiAgICAgIGlmICgoYm9va2luZ05vID09IG51bGwpIHx8IChib29raW5nTm8udHJpbSgpLmxlbmd0aCgpID09IDApKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDI3LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9SRVNFUlZDT0RFXSk7CiAgICAgIH0KICAgIH0KICAgIC8vIGhhbmRsZSA6IFRJQ0tfSVNTCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9USUNLX0lTU10pKSB7CiAgICAgIGlmICgodnNlZy5nZXRUaWNrZXRJc3N1ZURhdGUoKSA9PSBudWxsKSB8fCAodnNlZy5nZXRUaWNrZXRJc3N1ZURhdGUoKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oNDIsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1BBU1BSVF9JU1NdKTsKICAgICAgfQogICAgfQogICAgLy8gaGFuZGxlIDogVElDS19FWFAKICAgIGlmIChydWxlLmdldEZpZWxkc0NhdGFsb2coKS5jb250YWlucyhCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1RJQ0tfRVhQXSkpIHsKICAgICAgaWYgKCh2c2VnLmdldFRpY2tldEV4cGlyYXRpb25EYXRlKCkgPT0gbnVsbCkgfHwgKHZzZWcuZ2V0VGlja2V0RXhwaXJhdGlvbkRhdGUoKS50cmltKCkubGVuZ3RoKCkgPT0gMCkpIHsKICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oNDMsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1BBU1BSVF9JU1NdKTsKICAgICAgfQogICAgfQogICAgLy8gaGFuZGxlIDogVkVIX0NMQVNTCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9WRUhfQ0xBU1NdKSkgewogICAgICBpZiAoKHZzZWcuZ2V0VmVoaWNsZVR5cGUoKSA9PSBudWxsKSB8fCAodnNlZy5nZXRWZWhpY2xlVHlwZSgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig1NSwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfVkVIX0NMQVNTXSk7CiAgICAgIH0KICAgIH0KICAgIC8vIGhhbmRsZSA6IFZFSF9QTEFURQogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfVkVIX1BMQVRFXSkpIHsKICAgICAgaWYgKCh2c2VnLmdldFJlZ2lzdHJhdGlvbk51bWJlcigpID09IG51bGwpIHx8ICh2c2VnLmdldFJlZ2lzdHJhdGlvbk51bWJlcigpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig1NywgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfVkVIX1BMQVRFXSk7CiAgICAgIH0KICAgIH0KCiAgICAvLyBoYW5kbGUgOiBWRUhfRFJJVkVSCiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9WRUhfRFJJVkVSXSkpIHsKICAgICAgaWYgKCh2c2VnLmdldERyaXZlck5hbWUoKSA9PSBudWxsKSB8fCAodnNlZy5nZXREcml2ZXJOYW1lKCkudHJpbSgpLmxlbmd0aCgpID09IDApKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDU2LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9WRUhfRFJJVkVSXSk7CiAgICAgIH0KICAgIH0KCiAgICAvL0xFTkdUSAogICAgaWYgKHJ1bGUuZ2V0RmllbGRzQ2F0YWxvZygpLmNvbnRhaW5zKEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfVkVIX0xFTkdUSF0pKSB7CiAgICAgIGlmICh2c2VnLmdldExlbmd0aCgpID09IDApIHsKICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oNTgsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpLCBCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1ZFSF9MRU5HVEhdKTsKICAgICAgfQogICAgfQogICAgLy9IRUlHVEgKICAgIGlmIChydWxlLmdldEZpZWxkc0NhdGFsb2coKS5jb250YWlucyhCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1ZFSF9IRUlHSFRdKSkgewogICAgICBpZiAodnNlZy5nZXRMZW5ndGgoKSA9PSAwKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDU5LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9WRUhfSEVJR0hUXSk7CiAgICAgIH0KICAgIH0KCiAgICAvLyBoYW5kbGUgOiBWRUhfTU9ERUwKICAgIGlmIChydWxlLmdldEZpZWxkc0NhdGFsb2coKS5jb250YWlucyhCb29rbGluZU1hbmFnZXIuRklFTERfTkFNRVNbQm9va2xpbmVNYW5hZ2VyLklEX1ZFSF9NT0RFTF0pKSB7CiAgICAgIGlmICgodnNlZy5nZXRNb2RlbCgpID09IG51bGwpIHx8ICh2c2VnLmdldE1vZGVsKCkudHJpbSgpLmxlbmd0aCgpID09IDApKSB7CiAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDU0LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSwgQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9WRUhfTU9ERUxdKTsKICAgICAgfQogICAgfQogICAgLy8gaGFuZGxlIDogVkVIX0JSQU5ECiAgICBpZiAocnVsZS5nZXRGaWVsZHNDYXRhbG9nKCkuY29udGFpbnMoQm9va2xpbmVNYW5hZ2VyLkZJRUxEX05BTUVTW0Jvb2tsaW5lTWFuYWdlci5JRF9WRUhfQlJBTkRdKSkgewogICAgICBpZiAoKHZzZWcuZ2V0QnJhbmQoKSA9PSBudWxsKSB8fCAodnNlZy5nZXRCcmFuZCgpLnRyaW0oKS5sZW5ndGgoKSA9PSAwKSkgewogICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig1MywgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCksIEJvb2tsaW5lTWFuYWdlci5GSUVMRF9OQU1FU1tCb29rbGluZU1hbmFnZXIuSURfVkVIX0JSQU5EXSk7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIHB1YmxpYyBzdGF0aWMgUHJpb2NoZWNrQmVhbiBmZXRjaFByaW9yaXR5Q2hlY2soTG9uZyBib29rSWQpIHRocm93cyBEQU9FeGNlcHRpb24gewogICAgU3RyaW5nIHNxbCA9ICIgV0hFUkUgQk9PS19JRD0nIiArIGJvb2tJZCArICInIjsKICAgIFN5c3RlbS5vdXQucHJpbnRsbigiRmV0Y2hpbmcgUHJpb2NoZWNrIGJ5IGJvb2tJRDogICAgIiArIHNxbCk7CiAgICBQcmlvY2hlY2tCZWFuW10gcm93cyA9IG51bGw7CiAgICBQcmlvY2hlY2tNYW5hZ2VyIG1hbmFnZXIgPSBQcmlvY2hlY2tNYW5hZ2VyLmdldEluc3RhbmNlKCk7CiAgICBQcmlvY2hlY2tCZWFuW10gcGMgPSBtYW5hZ2VyLmdldEluc3RhbmNlKCkubG9hZEJ5V2hlcmUoc3FsKTsKICAgIFByaW9jaGVja0JlYW4gUmVzdWx0ID0gbnVsbDsKICAgIGlmIChwYy5sZW5ndGggPiAwKSB7CiAgICAgIFJlc3VsdCA9IHBjWzBdOwogICAgfQogICAgcmV0dXJuIFJlc3VsdDsKICB9CgogIHByaXZhdGUgdm9pZCB2YWxpZGF0ZUNvbmZpcm1hdGlvblN0YXR1cygpIHRocm93cyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbiwgREFPRXhjZXB0aW9uIHsKCiAgICBpZiAocmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0UGFzc2VuZ2VycygpICE9IG51bGwpIHsKICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEVtYmFya2F0aW9uRGF0YSgpLmdldEJvb2tpbmcoKS5nZXRQYXNzZW5nZXJzKCkuZ2V0UGFzc2VuZ2VyQ291bnQoKTsgaSsrKSB7CiAgICAgICAgUGFzc2VuZ2VyIHAgPSByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEVtYmFya2F0aW9uRGF0YSgpLmdldEJvb2tpbmcoKS5nZXRQYXNzZW5nZXJzKCkuZ2V0UGFzc2VuZ2VyKGkpOwogICAgICAgIGlmICgocC5oYXNCb29rSUQoKSkgJiYgKHAuZ2V0Qm9va0lEKCkgPiAwKSkgewogICAgICAgICAgUHJpb2NoZWNrQmVhbiBwcmlvY2hlY2tCZWFuID0gbnVsbDsKICAgICAgICAgIHByaW9jaGVja0JlYW4gPSBmZXRjaFByaW9yaXR5Q2hlY2socC5nZXRCb29rSUQoKSk7CiAgICAgICAgICBpZiAocHJpb2NoZWNrQmVhbiA9PSBudWxsIHx8ICFWQUxJRF9DT05GSVJNQVRJT05fU1RBVFVTRVMuY29udGFpbnMocHJpb2NoZWNrQmVhbi5nZXRQcmlTdGF0dXMoKS50b1N0cmluZygpKSkgewogICAgICAgICAgICBTdHJpbmcgY29uZmlybWF0aW9uU3RhdHVzID0gKHByaW9jaGVja0JlYW4gID09IG51bGwpID8gQmFzZVdvcmtlci5Db25maXJtYXRpb25TdGF0dXMuQS50b1N0cmluZygpIDogcHJpb2NoZWNrQmVhbi5nZXRQcmlTdGF0dXMoKTsKICAgICAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKCJDYW5ub3QgYm9hcmQgcGFzc2VuZ2VyIHdpdGggYm9va0lEICIgKyBwLmdldEJvb2tJRCgpICsgIi4gQ29uZmlybWF0aW9uIFN0YXR1cyBpcyBpbnZhbGlkOiAiICsgY29uZmlybWF0aW9uU3RhdHVzKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBpZiAocmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0VmVoaWNsZXMoKSAhPSBudWxsKSB7CiAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0VmVoaWNsZXMoKS5nZXRWZWhpY2xlQ291bnQoKTsgaSsrKSB7CiAgICAgICAgVmVoaWNsZSB2ID0gcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0VmVoaWNsZXMoKS5nZXRWZWhpY2xlKGkpOwogICAgICAgIGlmICgodi5oYXNCb29rSUQoKSkgJiYgKHYuZ2V0Qm9va0lEKCkgPiAwKSkgewogICAgICAgICAgUHJpb2NoZWNrQmVhbiBwcmlvY2hlY2tCZWFuID0gbnVsbDsKICAgICAgICAgIHByaW9jaGVja0JlYW4gPSBmZXRjaFByaW9yaXR5Q2hlY2sodi5nZXRCb29rSUQoKSk7CiAgICAgICAgICBpZiAocHJpb2NoZWNrQmVhbiA9PSBudWxsIHx8ICFWQUxJRF9DT05GSVJNQVRJT05fU1RBVFVTRVMuY29udGFpbnMocHJpb2NoZWNrQmVhbi5nZXRQcmlTdGF0dXMoKS50b1N0cmluZygpKSkgewogICAgICAgICAgICBTdHJpbmcgY29uZmlybWF0aW9uU3RhdHVzID0gKHByaW9jaGVja0JlYW4gID09IG51bGwpID8gQmFzZVdvcmtlci5Db25maXJtYXRpb25TdGF0dXMuQS50b1N0cmluZygpIDogcHJpb2NoZWNrQmVhbi5nZXRQcmlTdGF0dXMoKTsKICAgICAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKCJDYW5ub3QgYm9hcmQgdmVoaWNsZSB3aXRoIGJvb2tJRCAiICsgdi5nZXRCb29rSUQoKSArICIuIENvbmZpcm1hdGlvbiBTdGF0dXMgaXMgaW52YWxpZDogIiArIGNvbmZpcm1hdGlvblN0YXR1cyk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQoKICBwdWJsaWMgU3RyaW5nIHByb2Nlc3MoKSB7CiAgICAvKgogICAgICogQ3JlYXRlIGFsbCBtZXNzYWdlIG9iamVjdHMuCiAgICAgKi8KICAgIFNlcnZpY2VNZXNzYWdlIHhtbEFuc3dlciA9IG5ldyBTZXJ2aWNlTWVzc2FnZSgpOwogICAgTWVzc2FnZUhlYWRlciBtc2dIZWFkZXIgPSBuZXcgTWVzc2FnZUhlYWRlcigpOwogICAgU2VydmljZUJvZHkgc2IgPSBuZXcgU2VydmljZUJvZHkoKTsKICAgIE1lc3NhZ2VEYXRhIG1zZ0RhdGEgPSBuZXcgTWVzc2FnZURhdGEoKTsKCiAgICAvKgogICAgICogQW5kIHNldHVwIGFsbCBjb3JlbGF0ZWQgbm9kZXMuCiAgICAgKi8KICAgIHhtbEFuc3dlci5zZXRTZXJ2aWNlQm9keShzYik7CiAgICBzYi5zZXRNZXNzYWdlRGF0YShtc2dEYXRhKTsKICAgIHNiLnNldE1lc3NhZ2VIZWFkZXIobXNnSGVhZGVyKTsKICAgIC8qCiAgICAgKiBHZXQgZGF0YSBmcm9tIHRoZSByZXF1ZXN0CiAgICAgKiBhbmQgcHV0IHRoZW0gYXQgdGhlIGFuc3dlci4KICAgICAqLwogICAgbXNnSGVhZGVyLnNldEdlbmVyYWxJbmZvKHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VIZWFkZXIoKS5nZXRHZW5lcmFsSW5mbygpKTsKICAgIG1zZ0hlYWRlci5zZXRTZXJ2aWNlSW5mbyhyZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlSGVhZGVyKCkuZ2V0U2VydmljZUluZm8oKSk7CgogICAgU3RhdHVzSW5mbyBzaW5mbyA9IG5ldyBTdGF0dXNJbmZvKCk7CiAgICBzaW5mby5zZXRTZXZlcmUoZmFsc2UpOwogICAgc2luZm8uc2V0U3RhdHVzQ29kZSgiMDAwIik7CiAgICBzaW5mby5zZXRTdGF0dXNNZXNzYWdlKCJPSyIpOwoKICAgIHRyeSB7CiAgICAgIHZhbGlkYXRlQ29uZmlybWF0aW9uU3RhdHVzKCk7CiAgICB9IGNhdGNoIChEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbiBlKSB7CiAgICAgIG1zZ0hlYWRlci5zZXRTdGF0dXNJbmZvKHNpbmZvKTsKICAgICAgc2luZm8uc2V0U2V2ZXJlKHRydWUpOwogICAgICBzaW5mby5zZXRTdGF0dXNDb2RlKCIwMDEiKTsKICAgICAgc2luZm8uc2V0U3RhdHVzTWVzc2FnZShlLmdldE1lc3NhZ2UoKSk7CiAgICAgIEdlbmVyYWxJbmZvIGdpID0gbmV3IEdlbmVyYWxJbmZvKCk7CiAgICAgIG1zZ0hlYWRlci5zZXRHZW5lcmFsSW5mbyhnaSk7CiAgICAgIHV0aWxpdGllcy5IZWFkZXJJbmZvR2VuZXJhdG9yLnNldEhlYWRlckluZm8oZ2kpOwogICAgICBTdHJpbmcgdGhlQW5zd2VyID0gVXRpbGl0aWVzLmdldEluc3RhbmNlKCkubWFyc2hhbE9iamVjdCh4bWxBbnN3ZXIpOwogICAgICByZXR1cm4gdGhlQW5zd2VyOwogICAgfSBjYXRjaCAoREFPRXhjZXB0aW9uIGUpIHsKICAgICAgbXNnSGVhZGVyLnNldFN0YXR1c0luZm8oc2luZm8pOwogICAgICBzaW5mby5zZXRTZXZlcmUodHJ1ZSk7CiAgICAgIHNpbmZvLnNldFN0YXR1c0NvZGUoIjAwMSIpOwogICAgICBzaW5mby5zZXRTdGF0dXNNZXNzYWdlKGUuZ2V0TWVzc2FnZSgpKTsKICAgICAgR2VuZXJhbEluZm8gZ2kgPSBuZXcgR2VuZXJhbEluZm8oKTsKICAgICAgbXNnSGVhZGVyLnNldEdlbmVyYWxJbmZvKGdpKTsKICAgICAgdXRpbGl0aWVzLkhlYWRlckluZm9HZW5lcmF0b3Iuc2V0SGVhZGVySW5mbyhnaSk7CiAgICAgIFN0cmluZyB0aGVBbnN3ZXIgPSBVdGlsaXRpZXMuZ2V0SW5zdGFuY2UoKS5tYXJzaGFsT2JqZWN0KHhtbEFuc3dlcik7CiAgICAgIHJldHVybiB0aGVBbnN3ZXI7CiAgICB9CgogICAgU3RyaW5nIHJlcyA9IHRpY2tldElzVmFsaWQoKTsKICAgIGlmIChyZXMuc3RhcnRzV2l0aCgiOTk4IikgfHwgcmVzLnN0YXJ0c1dpdGgoIjAwNyIpIHx8IHJlcy5zdGFydHNXaXRoKCIwMTQiKSB8fCByZXMuc3RhcnRzV2l0aCgiMTAxIikpIHsKICAgICAgU3RyaW5nIG1jW10gPSByZXMuc3BsaXQoIls6XSIpOwogICAgICBtc2dIZWFkZXIuc2V0U3RhdHVzSW5mbyhzaW5mbyk7Ly8uc2V0U2V2ZXJlKGZhbHNlKTsKICAgICAgc2luZm8uc2V0U2V2ZXJlKHRydWUpOwogICAgICBzaW5mby5zZXRTdGF0dXNDb2RlKG1jWzBdKTsKICAgICAgc2luZm8uc2V0U3RhdHVzTWVzc2FnZShtY1sxXSk7CiAgICAgIEdlbmVyYWxJbmZvIGdpID0gbmV3IEdlbmVyYWxJbmZvKCk7CiAgICAgIG1zZ0hlYWRlci5zZXRHZW5lcmFsSW5mbyhnaSk7CiAgICAgIHV0aWxpdGllcy5IZWFkZXJJbmZvR2VuZXJhdG9yLnNldEhlYWRlckluZm8oZ2kpOwogICAgICBTdHJpbmcgdGhlQW5zd2VyID0gVXRpbGl0aWVzLmdldEluc3RhbmNlKCkubWFyc2hhbE9iamVjdCh4bWxBbnN3ZXIpOwogICAgICByZXR1cm4gdGhlQW5zd2VyOwogICAgfSBlbHNlIGlmICghcmVzLnN0YXJ0c1dpdGgoIjAwMCIpKSB7CiAgICAgIFN0cmluZyBtY1tdID0gcmVzLnNwbGl0KCJbOl0iKTsKICAgICAgbXNnSGVhZGVyLnNldFN0YXR1c0luZm8oc2luZm8pOy8vLnNldFNldmVyZShmYWxzZSk7CiAgICAgIHNpbmZvLnNldFNldmVyZShmYWxzZSk7CiAgICAgIHNpbmZvLnNldFN0YXR1c0NvZGUobWNbMF0pOwogICAgICBzaW5mby5zZXRTdGF0dXNNZXNzYWdlKG1jWzFdKTsKICAgIH0KCiAgICAvLyByZXF1ZXN0IGZyb20gaW5pdGlhbGUgaXNzdWVyIHRvIHZlcmlmeSB0aGUgdmFsaWRpdHkgb2YgdGhlIHRpY2tldC4KICAgIENvbm5lY3Rpb24gYyA9IG51bGw7CiAgICBib29sZWFuIGNoZWNrUGFzc0F2YWlsID0gZmFsc2U7CiAgICBib29sZWFuIGNoZWNrVmVoQXZhaWwgPSBmYWxzZTsKICAgIGJvb2xlYW4gVFJBTlNBQ1RJT05fU0VSSUFMSVpFRCA9IHRydWU7CiAgICBib29sZWFuIGIgPSB0cnVlOwoKICAgIGlmIChyZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlSGVhZGVyKCkuZ2V0U2VydmljZUluZm8oKS5nZXRNZXNzYWdlVHlwZSgpLnRyaW0oKS5jb250YWlucygiQk9BUkRQQVNTX0lTU1VFIikpIHsKICAgICAgZG8gewogICAgICAgIGRiRXJyU3RyID0gIiI7CiAgICAgICAgVFJBTlNBQ1RJT05fU0VSSUFMSVpFRCA9IHRydWU7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGMgPSBNYW5hZ2VyLmdldEluc3RhbmNlKCkuYmVnaW5UcmFuc2FjdGlvbigpOwogICAgICAgICAgYy5zZXRUcmFuc2FjdGlvbklzb2xhdGlvbihjLlRSQU5TQUNUSU9OX1NFUklBTElaQUJMRSk7CiAgICAgICAgICBib29sZWFuIGNvbW1pdCA9IGZhbHNlOwogICAgICAgICAgdHJ5IHsKCiAgICAgICAgICAgIFN0cmluZyBjaGsgPSBudWxsOwogICAgICAgICAgICBJdGluZW5xVndCZWFuIHNhaWxpbmcgPSBmZXRjaFNhaWxpbmcocmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRUcmlwRGF0YSgwKSk7CiAgICAgICAgICAgIC8vQ29tcGFuaWVzQmVhbiBjYiA9IGZldGNoQ29tcGFueShzYWlsaW5nLmdldENvbXBDb2RlKCkpOwogICAgICAgICAgICAvL2NoayA9IGNiLmdldENvbXBBdHRyKCk7CiAgICAgICAgICAgIGNoayA9IHNhaWxpbmcuZ2V0SXRpbkF0dHIoKTsKICAgICAgICAgICAgLyogdGhpcyBjaGVja3MgaWYgd2UgaGF2ZSB0byBjaGVjayBhdmFpbGFiaWxpdHkgZm9yIHBhc3NlbmdlcnMvdmVoaWNsZXMgKi8KICAgICAgICAgICAgaWYgKChjaGsgIT0gbnVsbCkgJiYgKGNoay5zdWJzdHJpbmcoMywgNCkuY29tcGFyZVRvKCIwIikgPT0gMCkpIHsKICAgICAgICAgICAgICBjaGVja1Bhc3NBdmFpbCA9IHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKChjaGsgIT0gbnVsbCkgJiYgKGNoay5zdWJzdHJpbmcoMywgNCkuY29tcGFyZVRvKCIxIikgPT0gMCkpIHsKICAgICAgICAgICAgICBjaGVja1Bhc3NBdmFpbCA9IHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKChjaGsgIT0gbnVsbCkgJiYgKGNoay5zdWJzdHJpbmcoMywgNCkuY29tcGFyZVRvKCIwIikgPT0gMCkpIHsKICAgICAgICAgICAgICBjaGVja1ZlaEF2YWlsID0gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoKGNoayAhPSBudWxsKSAmJiAoY2hrLnN1YnN0cmluZygzLCA0KS5jb21wYXJlVG8oIjIiKSA9PSAwKSkgewogICAgICAgICAgICAgIGNoZWNrVmVoQXZhaWwgPSB0cnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvKgogICAgICAgICAgICAgKiBGZXRjaCBtYXRjaGluZyByb3dzLAogICAgICAgICAgICAgKiBJZiBhbnkgYWRkIHRoZW0gdG8gdGhlIGFuc3dlciBhbmQgc2V0IHN0YXR1cyB0byA6IDAtT0sKICAgICAgICAgICAgICogZWxzZSBzZXQgc3RhdHVzIHRvIEVSUk9SLgogICAgICAgICAgICAgKi8KICAgICAgICAgICAgVXNlcnNCZWFuIHViID0gZ2V0VXNlcihyZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkpOwogICAgICAgICAgICBpZiAodWIgPT0gbnVsbCkgewogICAgICAgICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbigyLCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHV0aWxpdGllcy5FdmFsVXNyUmlnaHRzIHJpZ2h0c0V2YWwgPSBuZXcgdXRpbGl0aWVzLkV2YWxVc3JSaWdodHModWIsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VIZWFkZXIoKS5nZXRHZW5lcmFsSW5mbygpLmdldFNlbmRlckluZm8oKS5nZXRTZW5kZXJJZGVudGlmaWNhdGlvbigpLnRyaW0oKSk7CiAgICAgICAgICAgIHJpZ2h0c0V2YWwuZXZhbHVhdGUoKTsKICAgICAgICAgICAgaWYgKCFyaWdodHNFdmFsLmNhblVzZUFwcGxpY2F0aW9uKCkpIHsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oMTYsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoIXJpZ2h0c0V2YWwuY2FuSXNzdWVCUCgpKSB7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDE3LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChyZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEVtYmFya2F0aW9uRGF0YSgpLmdldEJvb2tpbmcoKS5nZXRQYXNzZW5nZXJzKCkgIT0gbnVsbCkgewogICAgICAgICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0UGFzc2VuZ2VycygpLmdldFBhc3NlbmdlckNvdW50KCk7IGkrKykgewogICAgICAgICAgICAgICAgUGFzc2VuZ2VyIHAgPSByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEVtYmFya2F0aW9uRGF0YSgpLmdldEJvb2tpbmcoKS5nZXRQYXNzZW5nZXJzKCkuZ2V0UGFzc2VuZ2VyKGkpOwogICAgICAgICAgICAgICAgaWYgKChwLmhhc0Jvb2tJRCgpKSAmJiAocC5nZXRCb29rSUQoKSA+IDApKSB7CiAgICAgICAgICAgICAgICAgIEVtYmFya2R0YVZ3TWFuYWdlciBtID0gRW1iYXJrZHRhVndNYW5hZ2VyLmdldEluc3RhbmNlKCk7CiAgICAgICAgICAgICAgICAgIEVtYmFya2R0YVZ3QmVhbltdIHZiID0gbS5sb2FkQnlXaGVyZShTdHJpbmcuZm9ybWF0KCJXSEVSRSBCT09LX0lEID0gJWQiLCBwLmdldEJvb2tJRCgpKSk7CiAgICAgICAgICAgICAgICAgIEl0aW5lbnFWd0JlYW4gcmVnSW5TYWlsID0gZmV0Y2hTYWlsaW5nKHZiWzBdLmdldEl0aW5JZCgpKTsKICAgICAgICAgICAgICAgICAgaWYgKHNhaWxpbmcuZ2V0SXRpbklkKCkubG9uZ1ZhbHVlKCkgIT0gcmVnSW5TYWlsLmdldEl0aW5JZCgpLmxvbmdWYWx1ZSgpKSB7CiAgICAgICAgICAgICAgICAgICAgYWx0ZXJJdGluID0gc2FpbGluZzsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBpZiAoIWNhbkludGVyY2hhbmdlKHNhaWxpbmcsIHJlZ0luU2FpbCkpIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oOCwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCkpOwogICAgICAgICAgICAgICAgICB9Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZiWzBdLmdldFRpY2tFeHAoKS50cmltKCkubGVuZ3RoKCk9PTgpIHsKLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2FsZW5kYXIgY2FsID0gQ2FsZW5kYXIuZ2V0SW5zdGFuY2UoKTsKLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNhbC5nZXRUaW1lKCkuY29tcGFyZVRvKERhdGVVdGlscy5zdHJpbmcyRGF0ZV9hZHZIb3VyKHZiWzBdLmdldFRpY2tFeHAoKSkpPjApIHsKLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vU3lzdGVtLm91dC5wcmludGxuKGNhbC5nZXRUaW1lKCkrIiAtICIrRGF0ZVV0aWxzLnN0cmluZzJEYXRlKHZiWzBdLmdldFRpY2tFeHAoKSkpOwovLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDE5LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSk7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICBTZXJ2aWNlTWVzc2FnZSB2bGRDbnRuciA9IGNyZWF0ZVZhbGlkYXRpb25TdHJ1Y3R1cmUodmIpOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIGlmICgobWFwcGVkVGlja2V0cyAhPSBudWxsKSAmJiAoIW1hcHBlZFRpY2tldHMuaXNFbXB0eSgpKSkgewogICAgICAgICAgICAgICAgICAgICAgICBUaWNrZXQgdGlja2V0ID0gbWFwcGVkVGlja2V0cy5nZXQodmJbMF0uZ2V0VGlja051bWIoKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aWNrZXQgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0aWNrZXQuZ2V0U3RhdHVzQ29kZSgpLmVxdWFscygiMDAwIikpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICBpZiAodmxkQ250bnIuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEVtYmFya2F0aW9uRGF0YSgpLmdldEJvb2tpbmcoKS5nZXRQYXNzZW5nZXJzKCkuZ2V0UGFzc2VuZ2VyQ291bnQoKSA+IDApIHsKICAgICAgICAgICAgICAgICAgICB2YWxpZGF0ZVBhc3Nlbmdlck9uUnVsZXMoc2FpbGluZywgdmxkQ250bnIpOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlVmVoaWNsZXNPblJ1bGVzKHNhaWxpbmcsIHZsZENudG5yKTsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgaW5zZXJ0Qm9hcmRQYXNzRGF0YSh2YlswXSwgdWIsIHAuZ2V0Qm9va0lEKCksIG1zZ0RhdGEpOwovLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRjbnQgPSB1cGRhdGVBdmFpbGFiaWxpdHkodmJbMF0uZ2V0Qm9va1R5cGUoKSwgMSwgdmJbMF0uZ2V0U2FpbElkKCkpOwogICAgICAgICAgICAgICAgICBCaWdEZWNpbWFsIHRjbnQgPSB1cGRhdGVBdmFpbGFiaWxpdHkodmJbMF0sIDEpOwogICAgICAgICAgICAgICAgICBpZiAoY2hlY2tQYXNzQXZhaWwgJiYgKHRjbnQuZmxvYXRWYWx1ZSgpIDwgMCkpIHsKICAgICAgICAgICAgICAgICAgICBpZiAodmJbMF0uZ2V0Qm9va1R5cGUoKS5jb21wYXJlVG8oIlAiKSA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oMTIsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDEzLCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9Ci8vICAgICAgICAgICAgICAgICAgSXRpbmVucVZ3QmVhbiBpdmIgPSBmaW5kSXRpbmVyYXJ5KHZiWzBdLmdldFNhaWxJZCgpLCB2YlswXS5nZXRJdGluSWQoKSk7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNpICE9IG51bGwpIHsKLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNpLmdldFNlbmRlcklkZW50aWZpY2F0aW9uKCkuZXF1YWxzKCJQREEiKSkgewovLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JpdGVyaWFTUUwuYXBwZW5kKCIgQU5EIHN1YnN0cihpdGluX2F0dHIsIDIsIDEpPSAnMScgQU5EIElUSU5fU1RBVFVTPSAnMicgIik7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc2kuZ2V0U2VuZGVySWRlbnRpZmljYXRpb24oKS5lcXVhbHMoIlBDIikpIHsKLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyaXRlcmlhU1FMLmFwcGVuZCgiIEFORCBzdWJzdHIoaXRpbl9hdHRyLCAxLCAxKT0gJzEnIEFORCBJVElOX1NUQVRVUz0gJzInIik7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICBpZiAoKHNhaWxpbmcuZ2V0SXRpbkF0dHIoKS5zdWJzdHJpbmcoMCwgMSkuY29tcGFyZVRvKCIxIikgIT0gMCkgfHwgKHNhaWxpbmcuZ2V0SXRpblN0YXR1cygpLmNvbXBhcmVUbygiMiIpICE9IDApKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDE0LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgbXNnRGF0YS5zZXRJdGluZXJhcnlMaXN0KGFkZFNhaWxBdmFpbGFiaWxpdHlEYXRhKHZiWzBdLmdldFNhaWxJZCgpLCB2YlswXS5nZXRJdGluSWQoKSkpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAocmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0VmVoaWNsZXMoKSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEVtYmFya2F0aW9uRGF0YSgpLmdldEJvb2tpbmcoKS5nZXRWZWhpY2xlcygpLmdldFZlaGljbGVDb3VudCgpOyBpKyspIHsKICAgICAgICAgICAgICAgIFZlaGljbGUgdiA9IHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0RW1iYXJrYXRpb25EYXRhKCkuZ2V0Qm9va2luZygpLmdldFZlaGljbGVzKCkuZ2V0VmVoaWNsZShpKTsKICAgICAgICAgICAgICAgIGlmICgodi5oYXNCb29rSUQoKSkgJiYgKHYuZ2V0Qm9va0lEKCkgPiAwKSkgewogICAgICAgICAgICAgICAgICBFbWJhcmtkdGFWd01hbmFnZXIgbSA9IEVtYmFya2R0YVZ3TWFuYWdlci5nZXRJbnN0YW5jZSgpOwogICAgICAgICAgICAgICAgICBFbWJhcmtkdGFWd0JlYW5bXSB2YiA9IG0ubG9hZEJ5V2hlcmUoU3RyaW5nLmZvcm1hdCgiV0hFUkUgQk9PS19JRCA9ICVkIiwgdi5nZXRCb29rSUQoKSkpOwogICAgICAgICAgICAgICAgICBJdGluZW5xVndCZWFuIHJlZ0luU2FpbCA9IGZldGNoU2FpbGluZyh2YlswXS5nZXRJdGluSWQoKSk7CiAgICAgICAgICAgICAgICAgIGlmIChzYWlsaW5nLmdldEl0aW5JZCgpLmxvbmdWYWx1ZSgpICE9IHJlZ0luU2FpbC5nZXRJdGluSWQoKS5sb25nVmFsdWUoKSkgewogICAgICAgICAgICAgICAgICAgIGFsdGVySXRpbiA9IHNhaWxpbmc7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIGlmICghY2FuSW50ZXJjaGFuZ2Uoc2FpbGluZywgcmVnSW5TYWlsKSkgewogICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbig4LCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgaWYgKChtYXBwZWRUaWNrZXRzICE9IG51bGwpICYmICghbWFwcGVkVGlja2V0cy5pc0VtcHR5KCkpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIFRpY2tldCB0aWNrZXQgPSBtYXBwZWRUaWNrZXRzLmdldCh2YlswXS5nZXRUaWNrTnVtYigpKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRpY2tldCAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRpY2tldC5nZXRTdGF0dXNDb2RlKCkuZXF1YWxzKCIwMDAiKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgCgovLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YlswXS5nZXRUaWNrRXhwKCkudHJpbSgpLmxlbmd0aCgpPT04KSB7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhbGVuZGFyIGNhbCA9IENhbGVuZGFyLmdldEluc3RhbmNlKCk7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYWwuZ2V0VGltZSgpLmNvbXBhcmVUbyhEYXRlVXRpbHMuc3RyaW5nMkRhdGVfYWR2SG91cih2YlswXS5nZXRUaWNrRXhwKCkpKT4wKSB7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oMTksIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpKTsKLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQovLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KLy8KICAgICAgICAgICAgICAgICAgU2VydmljZU1lc3NhZ2UgdmxkQ250bnIgPSBjcmVhdGVWYWxpZGF0aW9uU3RydWN0dXJlKHZiKTsKICAgICAgICAgICAgICAgICAgaWYgKHZsZENudG5yLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0UGFzc2VuZ2VycygpLmdldFBhc3NlbmdlckNvdW50KCkgPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVQYXNzZW5nZXJPblJ1bGVzKHNhaWxpbmcsIHZsZENudG5yKTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB2YWxpZGF0ZVZlaGljbGVzT25SdWxlcyhzYWlsaW5nLCB2bGRDbnRucik7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIGluc2VydEJvYXJkUGFzc0RhdGEodmJbMF0sIHViLCB2LmdldEJvb2tJRCgpLCBtc2dEYXRhKTsKLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0Y250ID0gdXBkYXRlQXZhaWxhYmlsaXR5KHZiWzBdLmdldEJvb2tUeXBlKCksIDEsIHZiWzBdLmdldFNhaWxJZCgpKTsKICAgICAgICAgICAgICAgICAgQmlnRGVjaW1hbCB0Y250ID0gdXBkYXRlQXZhaWxhYmlsaXR5KHZiWzBdLCAxKTsKICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrVmVoQXZhaWwgJiYgKHRjbnQuZmxvYXRWYWx1ZSgpIDwgMCkpIHsKICAgICAgICAgICAgICAgICAgICBpZiAodmJbMF0uZ2V0Qm9va1R5cGUoKS5jb21wYXJlVG8oIlYiKSA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oMTIsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uKDEzLCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIG1zZ0RhdGEuc2V0SXRpbmVyYXJ5TGlzdChhZGRTYWlsQXZhaWxhYmlsaXR5RGF0YSh2YlswXS5nZXRTYWlsSWQoKSwgdmJbMF0uZ2V0SXRpbklkKCkpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgbXNnSGVhZGVyLnNldFN0YXR1c0luZm8oc2luZm8pOy8vLnNldFNldmVyZShmYWxzZSk7CiAgICAgICAgICAgIGNvbW1pdCA9IHRydWU7CiAgICAgICAgICB9IGNhdGNoIChEQU9FeGNlcHRpb24gZGFvZSkgewovLy8vICAgICAgICAgICAgICAgICAgICAgICAgZGFvZS5wcmludFN0YWNrVHJhY2UoKTsKICAgICAgICAgICAgU3lzdGVtLmVyci5wcmludGxuKGRhb2UuZ2V0TWVzc2FnZSgpKTsKICAgICAgICAgICAgZGJFcnJTdHIgPSBkYW9lLmdldE1lc3NhZ2UoKTsKICAgICAgICAgICAgZGJFUlJPUiA9IHRydWU7CiAgICAgICAgICAgIG1zZ0hlYWRlci5zZXRTdGF0dXNJbmZvKERCVXRpbGl0aWVzLmdldFN0YXR1c0luZm8oMywgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCkpKTsKICAgICAgICAgIH0gY2F0Y2ggKERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uIGR2ZSkgewovLy8vICAgICAgICAgICAgICAgICAgICAgICAgZHZlLnByaW50U3RhY2tUcmFjZSgpOwogICAgICAgICAgICBkYkVyclN0ciA9IGR2ZS5nZXRNZXNzYWdlKCk7CiAgICAgICAgICAgIGRiRVJST1IgPSB0cnVlOwogICAgICAgICAgICBtc2dIZWFkZXIuc2V0U3RhdHVzSW5mbyhkdmUuZ2V0U3RhdHVzSW5mbygpKTsKICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgIGIgPSBjb21taXQ7CiAgICAgICAgICAgIE1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5lbmRUcmFuc2FjdGlvbihjb21taXQpOyAgLy8gPC0tLSBFTkQgT0YgVFJBTlNBQ1RJT046IENPTU1JVCBPUiBST0xMQkFDSyBJUyBET05FCiAgICAgICAgICAgIGlmIChjb21taXQpIHsKICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oVGhyZWFkLmN1cnJlbnRUaHJlYWQoKS50b1N0cmluZygpICsgIiBUcmFuc2FjdGlvbiBzdWNjZWVkZWQ6IGNvbW1pdCBPSyIpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihUaHJlYWQuY3VycmVudFRocmVhZCgpLnRvU3RyaW5nKCkgKyAiIFRyYW5zYWN0aW9uIGZhaWxlZDogcm9sbGJhY2sgT0siKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKFNRTEV4Y2VwdGlvbiBzZSkgewogICAgICAgICAgc2UucHJpbnRTdGFja1RyYWNlKCk7CiAgICAgICAgfQogICAgICAgIGlmIChkYkVyclN0ci5jb250YWlucygiT1JBLTA4MTc3IikpIHsKICAgICAgICAgIFRSQU5TQUNUSU9OX1NFUklBTElaRUQgPSBmYWxzZTsKICAgICAgICAgIFN5c3RlbS5lcnIucHJpbnRsbihUUkFOU0FDVElPTl9TRVJJQUxJWkVEICsgIiB3aWxsIHJldHJ5PiIgKyBkYkVyclN0cik7CiAgICAgICAgfQogICAgICB9IHdoaWxlICghVFJBTlNBQ1RJT05fU0VSSUFMSVpFRCk7CiAgICB9CgogICAgaWYgKGIpIHsKICAgICAgaWYgKHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VIZWFkZXIoKS5nZXRTZXJ2aWNlSW5mbygpLmdldE1lc3NhZ2VUeXBlKCkudHJpbSgpLmNvbnRhaW5zKCJfUFJJTlQiKSkgewogICAgICAgIHRyeSB7CiAgICAgICAgICB0cnkgewogICAgICAgICAgICBjID0gTWFuYWdlci5nZXRJbnN0YW5jZSgpLmJlZ2luVHJhbnNhY3Rpb24oKTsKICAgICAgICAgICAgaWYgKHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VIZWFkZXIoKS5nZXRTZXJ2aWNlSW5mbygpLmdldE1lc3NhZ2VUeXBlKCkuY29udGFpbnMoIl9QREYiKSkgewogICAgICAgICAgICAgIFBERl9NT0RFID0gdHJ1ZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvL3JldmVydCB0byBmYWxzZSAtIGp1c3QgMiBkZWJ1ZwogICAgICAgICAgICAgIFBERl9NT0RFID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgUHJpbnRCb2FyZGluZ1Bhc3MoeG1sQW5zd2VyKTsKICAgICAgICAgICAgaWYgKHdlYnBkZiAhPSBudWxsKSB7CiAgICAgICAgICAgICAgc2luZm8uc2V0U3RhdHVzTWVzc2FnZSh3ZWJwZGYpOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGNhdGNoIChEQU9FeGNlcHRpb24gZGFvZSkgewogICAgICAgICAgICBkYkVyclN0ciA9IGRhb2UuZ2V0TWVzc2FnZSgpOwogICAgICAgICAgICBkYkVSUk9SID0gdHJ1ZTsKICAgICAgICAgICAgbXNnSGVhZGVyLnNldFN0YXR1c0luZm8oREJVdGlsaXRpZXMuZ2V0U3RhdHVzSW5mbygzLCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkuZ2V0TGFuZ3VhZ2UoKSkpOwogICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgTWFuYWdlci5nZXRJbnN0YW5jZSgpLmVuZFRyYW5zYWN0aW9uKHRydWUpOyAgLy8gPC0tLSBFTkQgT0YgVFJBTlNBQ1RJT046IENPTU1JVCBPUiBST0xMQkFDSyBJUyBET05FCiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoU1FMRXhjZXB0aW9uIHNlKSB7CiAgICAgICAgICBzZS5wcmludFN0YWNrVHJhY2UoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBHZW5lcmFsSW5mbyBnaSA9IG5ldyBHZW5lcmFsSW5mbygpOwogICAgbXNnSGVhZGVyLnNldEdlbmVyYWxJbmZvKGdpKTsKICAgIHV0aWxpdGllcy5IZWFkZXJJbmZvR2VuZXJhdG9yLnNldEhlYWRlckluZm8oZ2kpOwoKICAgIC8qCiAgICAgKiBHZXQgQ0FTVE9SIG1hcnNoYWxsZXIgc2luZ2xldG9uIGFuZCBjcmVhdGUKICAgICAqIFhNTCBzdHJpbmcuIFRoZW4gbG9nIHRoaXMgdG8gYSBmaWxlLgogICAgICovCiAgICBTdHJpbmcgdGhlQW5zd2VyID0gVXRpbGl0aWVzLmdldEluc3RhbmNlKCkubWFyc2hhbE9iamVjdCh4bWxBbnN3ZXIpOwogICAgcmV0dXJuIHRoZUFuc3dlcjsKICB9CiAgCiAgcHJpdmF0ZSBib29sZWFuIGZpbGxNYXBwZWRUaWNrZXRzKExpc3Q8U3RyaW5nPiB0Y2t0TnVtYmVycyApIHsKICAgICAgYm9vbGVhbiByZXN1bHQgPSBmYWxzZTsKICAgICAgaWYgKChtYXBwZWRUaWNrZXRzID09IG51bGwpIHx8IChtYXBwZWRUaWNrZXRzLmlzRW1wdHkoKSkpIHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgRW1iYXJrZHRhVndNYW5hZ2VyIG0gPSBFbWJhcmtkdGFWd01hbmFnZXIuZ2V0SW5zdGFuY2UoKTsKICAgICAgICAgICAgICBTdHJpbmdCdWlsZGVyIHNiID0gbmV3IFN0cmluZ0J1aWxkZXIoIiAoIik7CiAgICAgICAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCB0Y2t0TnVtYmVycy5zaXplKCk7IGkrKykgewogICAgICAgICAgICAgICAgICBzYi5hcHBlbmQoU3RyaW5nLmZvcm1hdCgiIChUSUNLX05VTUIgPSAnJXMnKSAiLCB0Y2t0TnVtYmVycy5nZXQoaSkudHJpbSgpKSk7CiAgICAgICAgICAgICAgICAgIGlmIChpIDwgdGNrdE51bWJlcnMuc2l6ZSgpIC0gMSkgewogICAgICAgICAgICAgICAgICAgICAgc2IuYXBwZW5kKCIgb3IgIik7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgc2IuYXBwZW5kKCIpIik7CgogICAgICAgICAgICAgIG1hcHBlZFRpY2tldHMgPSBuZXcgSGFzaE1hcDxTdHJpbmcsIFRpY2tldD4oKTsKCiAgICAgICAgICAgICAgRW1iYXJrZHRhVndCZWFuW10gdmIgPSBtLmxvYWRCeVdoZXJlKFN0cmluZy5mb3JtYXQoIiB3aGVyZSAlcyAiLCBzYi50b1N0cmluZygpKSk7CiAgICAgICAgICAgICAgaWYgKHZiLmxlbmd0aCA+IDApIHsKCiAgICAgICAgICAgICAgICAgIGZvciAoaW50IHJuID0gMDsgcm4gPCB2Yi5sZW5ndGg7IHJuKyspIHsKICAgICAgICAgICAgICAgICAgICAgIGlmICh2Yltybl0uZ2V0Qm9hcmRTdGF0dXMoKSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgU3RyaW5nIHRpY2tOdW1iID0gdmJbcm5dLmdldFRpY2tOdW1iKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgVGlja2V0IHRpY2tldCA9IG5ldyBUaWNrZXQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBtYXBwZWRUaWNrZXRzLnB1dCh0aWNrTnVtYiwgdGlja2V0KTsKICAgICAgICAgICAgICAgICAgICAgICAgICB0aWNrZXQuc2V0VGlja2V0TnVtYmVyKHRpY2tOdW1iKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodmJbcm5dLmdldEJvYXJkU3RhdHVzKCkudHJpbSgpLmNvbXBhcmVUbygiQSIpID09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGlja2V0LnNldFN0YXR1c0NvZGUoIjAwMCIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWNrZXQuc2V0U3RhdHVzTWVzc2FnZSgiT0siKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIHJldHVybiAiMDAwOk9LIjsKICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWNrZXQuc2V0U3RhdHVzQ29kZSgiOTk4Iik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tldC5zZXRTdGF0dXNNZXNzYWdlKCJOb3QgVmFsaWQiKTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgfQogICAgICAgICAgfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKICAgICAgICAgICAgICBMb2dnZXIuZ2V0TG9nZ2VyKHRoaXMuZ2V0Q2xhc3MoKSkud2FybihTdHJpbmcuZm9ybWF0KCJmaWxsTWFwcGVkVGlja2V0cygpIGZhaWxlZCB3aXRoICVzIiwgZS5nZXRNZXNzYWdlKCkpKTsKICAgICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gcmVzdWx0OwogIH0KCiAgcHJpdmF0ZSBTdHJpbmcgdGlja2V0SXNWYWxpZCgpIHsKCiAgICBib29sZWFuIGNhblZhbGlkYXRlT25saW5lID0gZmFsc2U7CiAgICBsb25nIGJvb2tpZCA9IDA7CiAgICBsb25nIHNhaWxpZCA9IDA7CiAgICBsb25nIGl0aW5pZCA9IDA7CgogICAgU3RyaW5nIGluaXRUaWNrZXRJc3N1ZXIgPSAiIjsKICAgIFVzZXJzQmVhbiB1YiA9IG51bGw7CiAgICAvL1N0cmluZyB0Y2t0TnVtYmVyID0gIiI7CiAgICBMaXN0PFN0cmluZz4gdGNrdE51bWJlcnMgPSBuZXcgQXJyYXlMaXN0PFN0cmluZz4oKTsgCiAgICBTdHJpbmcgYm9va2luZ05vID0gIiI7CgogICAgSXRpbmVucVZ3QmVhbiBzYWlsaW5nID0gbnVsbDsKCiAgICB0cnkgewogICAgICBNYW5hZ2VyLmdldEluc3RhbmNlKCkuYmVnaW5UcmFuc2FjdGlvbigpOwogICAgICB0cnkgewoKICAgICAgICBTdHJpbmcgY2hrID0gbnVsbDsKICAgICAgICBzYWlsaW5nID0gZmV0Y2hTYWlsaW5nKHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0RW1iYXJrYXRpb25EYXRhKCkuZ2V0VHJpcERhdGEoMCkpOwogICAgICAgIENvbXBhbmllc0JlYW4gY2IgPSBmZXRjaENvbXBhbnkoc2FpbGluZy5nZXRDb21wQ29kZSgpKTsKICAgICAgICBjaGsgPSBjYi5nZXRDb21wQXR0cigpOwogICAgICAgIC8qIHRoaXMgY2hlY2tzIGlmIHdlIGhhdmUgYXV0aG9yaXphdGlvbiB0byBwcm9iZSB0aGUgRkMgb24tbGluZS9yZWFsLXRpbWUgKi8KICAgICAgICBpZiAoKGNoayAhPSBudWxsKSAmJiAoY2hrLnN1YnN0cmluZygwLCAxKS5jb21wYXJlVG8oIjEiKSA9PSAwKSkgewogICAgICAgICAgaWYgKChjaGsgIT0gbnVsbCkgJiYgKGNoay5zdWJzdHJpbmcoMSwgMikuY29tcGFyZVRvKCIxIikgPT0gMCkpIHsKICAgICAgICAgICAgY2FuVmFsaWRhdGVPbmxpbmUgPSB0cnVlOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuICIwMDAiOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gIjAwMCI7CiAgICAgICAgfQoKICAgICAgICBpZiAoKHNhaWxpbmcuZ2V0SXRpbkF0dHIoKS5zdWJzdHJpbmcoMCwgMSkuY29tcGFyZVRvKCIxIikgIT0gMCkgfHwgKHNhaWxpbmcuZ2V0SXRpblN0YXR1cygpLmNvbXBhcmVUbygiMiIpICE9IDApKSB7CiAgICAgICAgICByZXR1cm4gIjAxNDpJVElORVJBUlkgQ0xPU0VEIjsKICAgICAgICB9CgogICAgICAgIHViID0gZ2V0VXNlcihyZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldFVzZXJJbmZvKCkpOwogICAgICAgIGlmICh1YiA9PSBudWxsKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oMiwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRVc2VySW5mbygpLmdldExhbmd1YWdlKCkpOwogICAgICAgIH0KICAgICAgICBpZiAocmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0UGFzc2VuZ2VycygpICE9IG51bGwpIHsKICAgICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0UGFzc2VuZ2VycygpLmdldFBhc3NlbmdlckNvdW50KCk7IGkrKykgewogICAgICAgICAgICBQYXNzZW5nZXIgcCA9IHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0RW1iYXJrYXRpb25EYXRhKCkuZ2V0Qm9va2luZygpLmdldFBhc3NlbmdlcnMoKS5nZXRQYXNzZW5nZXIoaSk7CiAgICAgICAgICAgIGlmICgocC5oYXNCb29rSUQoKSkgJiYgKHAuZ2V0Qm9va0lEKCkgPiAwKSkgewogICAgICAgICAgICAgIEVtYmFya2R0YVZ3TWFuYWdlciBtID0gRW1iYXJrZHRhVndNYW5hZ2VyLmdldEluc3RhbmNlKCk7CiAgICAgICAgICAgICAgRW1iYXJrZHRhVndCZWFuW10gdmIgPSBtLmxvYWRCeVdoZXJlKFN0cmluZy5mb3JtYXQoIldIRVJFIEJPT0tfSUQgPSAlZCIsIHAuZ2V0Qm9va0lEKCkpKTsKICAgICAgICAgICAgICBJdGluZW5xVndCZWFuIGl2YiA9IGZpbmRJdGluZXJhcnkodmJbMF0uZ2V0U2FpbElkKCksIHZiWzBdLmdldEl0aW5JZCgpKTsKICAgICAgICAgICAgICAvL3Rja3ROdW1iZXIgPSB2YlswXS5nZXRUaWNrTnVtYigpOwogICAgICAgICAgICAgIHRja3ROdW1iZXJzLmFkZCh2YlswXS5nZXRUaWNrTnVtYigpKTsKICAgICAgICAgICAgICBpbml0VGlja2V0SXNzdWVyID0gdmJbMF0uZ2V0SW5pdFRpY2tldElzc3VlcigpOwogICAgICAgICAgICAgIGl0aW5pZCA9IGl2Yi5nZXRJdGluSWQoKTsKICAgICAgICAgICAgICBzYWlsaWQgPSBpdmIuZ2V0U2FpbElkKCk7CgogICAgICAgICAgICAgIGlmICh2YlswXS5nZXRUaWNrRXhwKCkudHJpbSgpLmxlbmd0aCgpID09IDgpIHsKICAgICAgICAgICAgICAgIENhbGVuZGFyIGNhbCA9IENhbGVuZGFyLmdldEluc3RhbmNlKCk7CiAgICAgICAgICAgICAgICBpZiAoY2FsLmdldFRpbWUoKS5jb21wYXJlVG8oRGF0ZVV0aWxzLnN0cmluZzJEYXRlX2FkdkhvdXIodmJbMF0uZ2V0VGlja0V4cCgpKSkgPiAwKSB7CiAgICAgICAgICAgICAgICAgIC8vU3lzdGVtLm91dC5wcmludGxuKGNhbC5nZXRUaW1lKCkrIiAtICIrRGF0ZVV0aWxzLnN0cmluZzJEYXRlKHZiWzBdLmdldFRpY2tFeHAoKSkpOwogICAgICAgICAgICAgICAgICByZXR1cm4gIjk5ODpUSUNLRVQgRVhQSVJFRCI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBTZXJ2aWNlTWVzc2FnZSB2bGRDbnRuciA9IGNyZWF0ZVZhbGlkYXRpb25TdHJ1Y3R1cmUodmIpOwogICAgICAgICAgICAgIGlmICh2YlswXS5nZXRCb29rVHlwZSgpLmNvbXBhcmVUbygiUCIpID09IDApIHsKICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgIHZhbGlkYXRlUGFzc2VuZ2VyT25SdWxlcyhzYWlsaW5nLCB2bGRDbnRucik7CiAgICAgICAgICAgICAgICB9IGNhdGNoIChEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbiBkdmUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuICIwMDc6IiArIGR2ZS5nZXRTdGF0dXNJbmZvKCkuZ2V0U3RhdHVzTWVzc2FnZSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICB2YWxpZGF0ZVZlaGljbGVzT25SdWxlcyhzYWlsaW5nLCB2bGRDbnRucik7CiAgICAgICAgICAgICAgICB9IGNhdGNoIChEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbiBkdmUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuICIwMDc6IiArIGR2ZS5nZXRTdGF0dXNJbmZvKCkuZ2V0U3RhdHVzTWVzc2FnZSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0RW1iYXJrYXRpb25EYXRhKCkuZ2V0Qm9va2luZygpLmdldFZlaGljbGVzKCkgIT0gbnVsbCkgewogICAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEVtYmFya2F0aW9uRGF0YSgpLmdldEJvb2tpbmcoKS5nZXRWZWhpY2xlcygpLmdldFZlaGljbGVDb3VudCgpOyBpKyspIHsKICAgICAgICAgICAgVmVoaWNsZSB2ID0gcmVxWE1MLmdldFNlcnZpY2VCb2R5KCkuZ2V0TWVzc2FnZURhdGEoKS5nZXRFbWJhcmthdGlvbkRhdGEoKS5nZXRCb29raW5nKCkuZ2V0VmVoaWNsZXMoKS5nZXRWZWhpY2xlKGkpOwogICAgICAgICAgICBpZiAoKHYuaGFzQm9va0lEKCkpICYmICh2LmdldEJvb2tJRCgpID4gMCkpIHsKICAgICAgICAgICAgICBFbWJhcmtkdGFWd01hbmFnZXIgbSA9IEVtYmFya2R0YVZ3TWFuYWdlci5nZXRJbnN0YW5jZSgpOwogICAgICAgICAgICAgIEVtYmFya2R0YVZ3QmVhbltdIHZiID0gbS5sb2FkQnlXaGVyZShTdHJpbmcuZm9ybWF0KCJXSEVSRSBCT09LX0lEID0gJWQiLCB2LmdldEJvb2tJRCgpKSk7CiAgICAgICAgICAgICAgSXRpbmVucVZ3QmVhbiBpdmIgPSBmaW5kSXRpbmVyYXJ5KHZiWzBdLmdldFNhaWxJZCgpLCB2YlswXS5nZXRJdGluSWQoKSk7Ci8vICAgICAgICAgICAgICB0Y2t0TnVtYmVyID0gdmJbMF0uZ2V0VGlja051bWIoKTsKICAgICAgICAgICAgICB0Y2t0TnVtYmVycy5hZGQodmJbMF0uZ2V0VGlja051bWIoKSk7CiAgICAgICAgICAgICAgaW5pdFRpY2tldElzc3VlciA9IHZiWzBdLmdldEluaXRUaWNrZXRJc3N1ZXIoKTsKICAgICAgICAgICAgICBpdGluaWQgPSBpdmIuZ2V0SXRpbklkKCk7CiAgICAgICAgICAgICAgc2FpbGlkID0gaXZiLmdldFNhaWxJZCgpOwoKICAgICAgICAgICAgICBTZXJ2aWNlTWVzc2FnZSB2bGRDbnRuciA9IGNyZWF0ZVZhbGlkYXRpb25TdHJ1Y3R1cmUodmIpOwogICAgICAgICAgICAgIGlmICh2YlswXS5nZXRCb29rVHlwZSgpLmNvbXBhcmVUbygiUCIpID09IDApIHsKICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgIHZhbGlkYXRlUGFzc2VuZ2VyT25SdWxlcyhzYWlsaW5nLCB2bGRDbnRucik7CiAgICAgICAgICAgICAgICB9IGNhdGNoIChEYXRhVmFsaWRhdGlvbkV4Y2VwdGlvbiBkdmUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuICIwMDc6SU5WQUxJRCBUSUNLRVQgREFUQSI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgIHZhbGlkYXRlVmVoaWNsZXNPblJ1bGVzKHNhaWxpbmcsIHZsZENudG5yKTsKICAgICAgICAgICAgICAgIH0gY2F0Y2ggKERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uIGR2ZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gIjAwNzpJTlZBTElEIFRJQ0tFVCBEQVRBIjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBDb21wYW5pZXNCZWFuIGdyb3VwID0gZmV0Y2hDb21wYW55KGluaXRUaWNrZXRJc3N1ZXIpOwogICAgICAgIENvbXBhbmllc0JlYW5bXSBncm91cE9mQ29tcGFuaWVzID0gZmV0Y2hHcm91cChncm91cC5nZXRDb21wQmVsb25ncygpKTsKICAgICAgICBTdHJpbmdCdWZmZXIgY2hlY2tHcm91cCA9IG5ldyBTdHJpbmdCdWZmZXIoKTsKICAgICAgICBmb3IgKGludCBzeCA9IDA7IHN4IDwgZ3JvdXBPZkNvbXBhbmllcy5sZW5ndGg7IHN4KyspIHsKICAgICAgICAgIGNoZWNrR3JvdXAuYXBwZW5kKGdyb3VwT2ZDb21wYW5pZXNbc3hdLmdldENvbXBDb2RlKCkudHJpbSgpKTsKICAgICAgICAgIGNoZWNrR3JvdXAuYXBwZW5kKCIsIik7CiAgICAgICAgfQogICAgICAgIFN0cmluZyBjaGtwID0gY2hlY2tHcm91cC50b1N0cmluZygpOwogICAgICAgIGlmICgoaW5pdFRpY2tldElzc3Vlci50cmltKCkuY29tcGFyZVRvKHNhaWxpbmcuZ2V0Q29tcENvZGUoKS50cmltKCkpICE9IDApICYmICghY2hrcC5jb250YWlucyhpbml0VGlja2V0SXNzdWVyLnRyaW0oKSkpKSB7CiAgICAgICAgICByZXR1cm4gIjAwMDpPSyI7CiAgICAgICAgfQoKICAgICAgICAvLyBPbi1saW5lIGZvciB0aWNrdCB2ZXJpZnkKICAgICAgICBpZiAoY2IuZ2V0Q29tcEF0dHIoKS5zdWJzdHJpbmcoNSwgNikuY29tcGFyZVRvKCIxIikgPT0gMCkgewogICAgICAgICAgICBib29sZWFuIGIgPSBmaWxsTWFwcGVkVGlja2V0cyh0Y2t0TnVtYmVycyk7CiAgICAgICAgICAgIGlmIChiKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIjAwMDpPSyI7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICB9IGNhdGNoIChEQU9FeGNlcHRpb24gZGFvZSkgewoKICAgICAgfSBjYXRjaCAoRGF0YVZhbGlkYXRpb25FeGNlcHRpb24gZHZlKSB7CgogICAgICB9IGZpbmFsbHkgewogICAgICAgIE1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5lbmRUcmFuc2FjdGlvbih0cnVlKTsgIC8vIDwtLS0gRU5EIE9GIFRSQU5TQUNUSU9OOiBDT01NSVQgT1IgUk9MTEJBQ0sgSVMgRE9ORQogICAgICB9CiAgICB9IGNhdGNoIChTUUxFeGNlcHRpb24gc2UpIHsKICAgICAgc2UucHJpbnRTdGFja1RyYWNlKCk7CiAgICB9CgogICAgaWYgKGluaXRUaWNrZXRJc3N1ZXIgPT0gbnVsbCkgewogICAgICBpbml0VGlja2V0SXNzdWVyID0gIiI7CiAgICB9CgogICAgRmV0Y2hCb29raW5nRGF0YU9ubGluZSByZXRyaWV2ZXIgPSBuZXcgRmV0Y2hCb29raW5nRGF0YU9ubGluZShpbml0VGlja2V0SXNzdWVyLCBzYWlsaW5nLmdldFNhaWxJZCgpLCBzYWlsaW5nLmdldEl0aW5JZCgpLCB0Y2t0TnVtYmVycywgYm9va2luZ05vKTsKLy8gICAgamF2YS51dGlsLlZlY3RvcjxMb25nPiBib29raWRzID0gcmV0cmlldmVyLnByb2Nlc3ModWIsICJUaWNrZXRWZXJpZnlDUFJRIik7CiAgICByZXRyaWV2ZXIucHJvY2Vzcyh1YiwgIlRpY2tldFZlcmlmeUNQUlEiKTsKICAgIG1hcHBlZFRpY2tldHMgPSByZXRyaWV2ZXIuZ2V0TWFwcGVkVGlja2V0cygpOwogICAgZmlsbE1hcHBlZFRpY2tldHModGNrdE51bWJlcnMpOwogICAgCiAgICBTdHJpbmcgcmVzID0gcmV0cmlldmVyLmdldFZlbmRvclN0YXR1c0NvZGUoKSArICI6IiArIHJldHJpZXZlci5nZXRWZW5kb3JTdGF0dXNNZXNzYWdlKCk7CgogICAgcmV0dXJuIHJlczsKICB9CiAgCiAgcHJpdmF0ZSBNYXA8U3RyaW5nLCBUaWNrZXQ+IG1hcHBlZFRpY2tldHMgPSBudWxsOwogIAoKICBwcml2YXRlIEl0aW5lcmFyeUxpc3QgYWRkU2FpbEF2YWlsYWJpbGl0eURhdGEobG9uZyBzYWlsaWQsIGxvbmcgaXRpbmlkKSB7CiAgICAvLyBBZGQgYXZhaWxhYmlsaXR5IC8gb2NjdXBhbmN5IC8gY2hlY2tpbi1jaGVja291dCByZWxhdGVkIGRhdGEuCiAgICBJdGluZW5xVndCZWFuIGl0aW5lcmFyeSA9IGZpbmRJdGluZXJhcnkoc2FpbGlkLCBpdGluaWQpOwogICAgSXRpbmVyYXJ5TGlzdCBpdGluZXJhcmllc2xzdCA9IG5ldyBJdGluZXJhcnlMaXN0KCk7CiAgICBJdGluZXJhcnlEYXRhIG5yb3cgPSBuZXcgSXRpbmVyYXJ5RGF0YSgpOwogICAgbnJvdy5zZXRBdmFpbGFibGVQYXNzZW5nZXJzKGl0aW5lcmFyeS5nZXRQYXNhdmFpbCgpLmludFZhbHVlKCkpOwogICAgbnJvdy5zZXRBdmFpbGFibGVWZWhpY2xlcyhpdGluZXJhcnkuZ2V0VmVoYXZhaWwoKS5pbnRWYWx1ZSgpKTsKICAgIG5yb3cuc2V0T2NjdXBpZWRQYXNzZW5nZXJzKGl0aW5lcmFyeS5nZXRQYXNhdmFpbCgpLmludFZhbHVlKCkgLSBpdGluZXJhcnkuZ2V0UGFzcmVzdCgpLmludFZhbHVlKCkpOwovLyAgICAgICAgbnJvdy5zZXRPY2N1cGllZFZlaGljbGVzKGl0aW5lcmFyeS5nZXRWZWhhdmFpbCgpLmludFZhbHVlKCkgLSBpdGluZXJhcnkuZ2V0VmVocmVzdCgpLmludFZhbHVlKCkpOwogICAgbnJvdy5zZXRPY2N1cGllZFZlaGljbGVzKGl0aW5lcmFyeS5nZXRWZWhyZWdpc3RlcmVkKCkuaW50VmFsdWUoKSk7CiAgICBucm93LnNldFJlbWFpbmRlclBhc3NlbmdlcnMoaXRpbmVyYXJ5LmdldFBhc3Jlc3QoKS5pbnRWYWx1ZSgpKTsKICAgIG5yb3cuc2V0UmVtYWluZGVyVmVoaWNsZXMoaXRpbmVyYXJ5LmdldFZlaHJlc3QoKS5pbnRWYWx1ZSgpKTsKICAgIGxvbmcgZWxpYXNDb3VudGVyID0gaXRpbmVyYXJ5LmdldFZlaHJlZ2lzdGVyZWQoKTsKICAgIG5yb3cuc2V0Q2hlY2tlZEluUGFzc2VuZ2VycyhpdGluZXJhcnkuZ2V0UGFzY2hraW4oKS5pbnRWYWx1ZSgpKTsKICAgIG5yb3cuc2V0Q2hlY2tlZEluVmVoaWNsZXMoaXRpbmVyYXJ5LmdldFZlaGNoa2luKCkuaW50VmFsdWUoKSk7CiAgICBpdGluZXJhcmllc2xzdC5hZGRJdGluZXJhcnlEYXRhKG5yb3cpOwoKICAgIHJldHVybiBpdGluZXJhcmllc2xzdDsKICB9CgogIHByb3RlY3RlZCB2b2lkIGluc2VydEJvYXJkUGFzc0RhdGEoRW1iYXJrZHRhVndCZWFuIGVtYkR0YUJlYW4sIFVzZXJzQmVhbiB1YiwgbG9uZyBCb29rSWQsIE1lc3NhZ2VEYXRhIG1zZ0RhdGEpIHRocm93cyBEQU9FeGNlcHRpb24sIERhdGFWYWxpZGF0aW9uRXhjZXB0aW9uIHsKICAgIEVtYmFya2F0aW9uRGF0YSBlbWJEdGEgPSByZXFYTUwuZ2V0U2VydmljZUJvZHkoKS5nZXRNZXNzYWdlRGF0YSgpLmdldEVtYmFya2F0aW9uRGF0YSgpOwogICAgLy9ib29rSUQ9IHBzbi5nZXRCb29rSUQoKTsKICAgIEJvb2tsaW5lQmVhbiBibHJvdyA9IGZpbmRCb29rbGluZShCb29rSWQpOwogICAgbG9uZyBib2FyZElEID0gU2VxQm9hcmRJRE1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5uZXh0VmFsKCk7CgogICAgQm9hcmRpbmdUcmFuc0JlYW5bXSBidGIgPSBCb2FyZGluZ1RyYW5zTWFuYWdlci5nZXRJbnN0YW5jZSgpLmxvYWRCeVdoZXJlKFN0cmluZy5mb3JtYXQoIldIRVJFIEJPT0tfSUQ9ICVkIE9SREVSIEJZIEJPQVJEX0lEIERFU0MgIiwgQm9va0lkKSk7CiAgICBpZiAoYnRiLmxlbmd0aCA+IDApIHsKICAgICAgaWYgKGJ0YlswXS5nZXRCb2FyZFN0YXR1cygpLmNvbXBhcmVUbygiQyIpICE9IDApIHsKICAgICAgICB0aHJvdyBuZXcgRGF0YVZhbGlkYXRpb25FeGNlcHRpb24oMTEsIHJlcVhNTC5nZXRTZXJ2aWNlQm9keSgpLmdldE1lc3NhZ2VEYXRhKCkuZ2V0VXNlckluZm8oKS5nZXRMYW5ndWFnZSgpKTsKICAgICAgfQogICAgfQoKICAgIGluc2VydEJvYXJkaW5nVHJhbnNSb3coYmxyb3csIGJvYXJkSUQpOwoKICAgIGlmIChhbHRlckl0aW4gPT0gbnVsbCkgewogICAgICBpbnNlcnRCb2FyZGluZ1RyYW5zSGlzdFJvdyhlbWJEdGFCZWFuLCB1YiwgYmxyb3csIGJvYXJkSUQsIDApOwogICAgfSBlbHNlIHsKICAgICAgaW5zZXJ0Qm9hcmRpbmdUcmFuc0hpc3RSb3coZW1iRHRhQmVhbiwgdWIsIGJscm93LCBib2FyZElELCBhbHRlckl0aW4uZ2V0SXRpbklkKCkpOwogICAgfQoKICAgIHVwZGF0ZUJvb2tsaW5lUm93KGJscm93LCBib2FyZElEKTsKCiAgICBFbWJhcmthdGlvbkRhdGEgZWQgPSBtc2dEYXRhLmdldEVtYmFya2F0aW9uRGF0YSgpOwogICAgaWYgKGVkID09IG51bGwpIHsKICAgICAgICBlZCA9IG5ldyBFbWJhcmthdGlvbkRhdGEoKTsKICAgICAgICBtc2dEYXRhLnNldEVtYmFya2F0aW9uRGF0YShlZCk7CiAgICAgICAgZWQuc2V0Qm9va2luZyhuZXcgQm9va2luZygpKTsKICAgICAgICBlZC5hZGRUcmlwRGF0YShuZXcgVHJpcERhdGEoKSk7CiAgICB9CgoKICAgIEJvYXJkUGFzc0RhdGEgYnBkdGEgPSBlZC5nZXRCb2FyZFBhc3NEYXRhKCk7CiAgICBpZiAoYnBkdGEgPT0gbnVsbCkgewogICAgICAgIGJwZHRhID0gbmV3IEJvYXJkUGFzc0RhdGEoKTsKICAgICAgICBlZC5zZXRCb2FyZFBhc3NEYXRhKGJwZHRhKTsKICAgIH0KCiAgICBCb2FyZFBhc3MgYnAgPSBuZXcgQm9hcmRQYXNzKCk7CiAgICBicC5zZXRCb2FyZElEKGJvYXJkSUQpOwogICAgYnAuc2V0Qm9hcmRTdGF0dXMoIkEiKTsKICAgIGJwLnNldEJvb2tJRChCb29rSWQpOwogICAgYnAuc2V0Qm9va1R5cGUoYmxyb3cuZ2V0Qm9va1R5cGUoKSk7CiAgICBicC5zZXRFbWJhcmtTZXEoYmxyb3cuZ2V0RW1iU2VybCgpKTsKICAgIGJwZHRhLmFkZEJvYXJkUGFzcyhicCk7CiAgfQoKICBwcm90ZWN0ZWQgdm9pZCB1cGRhdGVCb29rbGluZVJvdyhCb29rbGluZUJlYW4gYmxyb3csIGxvbmcgYm9hcmRJRCkgdGhyb3dzIERBT0V4Y2VwdGlvbiB7CiAgICBCb29rbGluZU1hbmFnZXIgYmxtID0gQm9va2xpbmVNYW5hZ2VyLmdldEluc3RhbmNlKCk7CgogICAgYmxyb3cuc2V0Qm9hcmRJZChib2FyZElEKTsKICAgIGJsbS5zYXZlKGJscm93KTsKICB9CgogIHByb3RlY3RlZCB2b2lkIGluc2VydEJvYXJkaW5nVHJhbnNSb3coQm9va2xpbmVCZWFuIGJscm93LCBsb25nIGJvYXJkSUQpIHRocm93cyBEQU9FeGNlcHRpb24gewogICAgQm9hcmRpbmdUcmFuc01hbmFnZXIgYnRybnNtID0gQm9hcmRpbmdUcmFuc01hbmFnZXIuZ2V0SW5zdGFuY2UoKTsKICAgIEJvYXJkaW5nVHJhbnNCZWFuIGJ0cm5zcm93ID0gYnRybnNtLmNyZWF0ZUJvYXJkaW5nVHJhbnNCZWFuKCk7CgogICAgYnRybnNyb3cuc2V0Qm9hcmRJZChib2FyZElEKTsKICAgIGJ0cm5zcm93LnNldEJvYXJkU3RhdHVzKCJBIik7CiAgICBidHJuc3Jvdy5zZXRCb29rSWQoYmxyb3cuZ2V0Qm9va0lkKCkpOwogICAgYnRybnNyb3cuc2V0Qm9va1R5cGUoYmxyb3cuZ2V0Qm9va1R5cGUoKSk7CiAgICBidHJuc3Jvdy5zZXRJc2FjdGl2ZSgiWSIpOwoKICAgIGJ0cm5zbS5zYXZlKGJ0cm5zcm93KTsKCiAgfQoKICBwcm90ZWN0ZWQgdm9pZCBpbnNlcnRCb2FyZGluZ1RyYW5zSGlzdFJvdyhFbWJhcmtkdGFWd0JlYW4gZW1iRHRhQmVhbiwgVXNlcnNCZWFuIHViLCBCb29rbGluZUJlYW4gYmxyb3csIGxvbmcgYm9hcmRJRCwgbG9uZyBOZXdJdGluKSB0aHJvd3MgREFPRXhjZXB0aW9uIHsKCiAgICBCb2FyZGluZ1RyYW5zSGlzdE1hbmFnZXIgYnRybnNobSA9IEJvYXJkaW5nVHJhbnNIaXN0TWFuYWdlci5nZXRJbnN0YW5jZSgpOwogICAgQm9hcmRpbmdUcmFuc0hpc3RCZWFuIGJ0cm5zaHJvdyA9IGJ0cm5zaG0uY3JlYXRlQm9hcmRpbmdUcmFuc0hpc3RCZWFuKCk7CgogICAgYnRybnNocm93LnNldEJvYXJkSWQoYm9hcmRJRCk7CiAgICBidHJuc2hyb3cuc2V0Qm9hcmRJdGluSWQoZW1iRHRhQmVhbi5nZXRJdGluSWQoKSk7CiAgICAvL0hMSUFTIDI2LzAzIFBST1NUSEVTQSBUTyBOZXdJdGluIG9zdGUgb3RhbiBnaW5laSAiUCIgIGthaSBlaW5haSBhbGxvIHRvIG5lbyBpdGluIG5hIGdpbmVpIGkgc29zdGkgZWdncmFmaQogICAgaWYgKE5ld0l0aW4gIT0gMEwpIHsKICAgICAgYnRybnNocm93LnNldEJvYXJkSXRpbklkKE5ld0l0aW4pOwogICAgfQogICAgYnRybnNocm93LnNldEJvYXJkVHlwZShibHJvdy5nZXRCb29rVHlwZSgpKTsKICAgIGJ0cm5zaHJvdy5zZXRCb2FyZFR5cGUoIlAiKTsKICAgIGJ0cm5zaHJvdy5zZXRCb2FyZFVzZXJJZCh1Yi5nZXRVc2VySWQoKSk7CiAgICBidHJuc2hyb3cuc2V0Qm9hcmRDaGVja1JlbWFya3MoIiAiKTsKICAgIGJ0cm5zaHJvdy5zZXRCb2FyZERhdGUoQ2FsZW5kYXIuZ2V0SW5zdGFuY2UoKS5nZXRUaW1lKCkpOwogICAgYnRybnNobS5zYXZlKGJ0cm5zaHJvdyk7CiAgfQoKICAvKioKICAgKiBMb2FkcyBhIEF2YWlsYWJpbGl0eUJlYW4gZnJvbSB0aGUgQVZBSUxBQklMSVRZIHVzaW5nIGl0cyBrZXkgZmllbGRzLgogICAqCiAgICogQHBhcmFtIHNhaWxJZCBMb25nIC0gUEsjIDEKICAgKiBAcGFyYW0gcGFzdmVoIFN0cmluZyAtIFBLIyAyCiAgICogQHJldHVybiBhIHVuaXF1ZSBBdmFpbGFiaWxpdHlCZWFuCiAgICogQHRocm93cyBEQU9FeGNlcHRpb24KICAgKi8KICAvLzFFbWJhcmtkdGFWd0JlYW5bXSB2YgovLyAgICBwdWJsaWMgbG9uZyB1cGRhdGVBdmFpbGFiaWxpdHkoU3RyaW5nIHBhc3ZlaCwgaW50IG5vLCBsb25nIHNhaWxJZCkgdGhyb3dzIERBT0V4Y2VwdGlvbiB7CiAgcHVibGljIEJpZ0RlY2ltYWwgdXBkYXRlQXZhaWxhYmlsaXR5KEVtYmFya2R0YVZ3QmVhbiB2YiwgaW50IG5vKSB0aHJvd3MgREFPRXhjZXB0aW9uIHsKCiAgICBTdHJpbmcgcGFzdmVoID0gdmIuZ2V0Qm9va1R5cGUoKTsKICAgIGxvbmcgc2FpbElkID0gdmIuZ2V0U2FpbElkKCk7CgogICAgQXZhaWxhYmlsaXR5TWFuYWdlciBhdmFpbGFibSA9IEF2YWlsYWJpbGl0eU1hbmFnZXIuZ2V0SW5zdGFuY2UoKTsKICAgIEF2YWlsYWJpbGl0eUJlYW4gYXZhaWxhYnJvdyA9IG51bGw7CgogICAgQm9va2hlYWRlck1hbmFnZXIgYmhtID0gQm9va2hlYWRlck1hbmFnZXIuZ2V0SW5zdGFuY2UoKTsKICAgIEJvb2tsaW5lTWFuYWdlciBibG0gPSBCb29rbGluZU1hbmFnZXIuZ2V0SW5zdGFuY2UoKTsKICAgIGlmIChhbHRlckl0aW4gPT0gbnVsbCkgewogICAgICBhdmFpbGFicm93ID0gYXZhaWxhYm0ubG9hZEJ5UHJpbWFyeUtleShuZXcgamF2YS5sYW5nLkxvbmcoc2FpbElkKSwgcGFzdmVoKTsKICAgIH0gZWxzZSB7CiAgICAgIGF2YWlsYWJyb3cgPSBhdmFpbGFibS5sb2FkQnlQcmltYXJ5S2V5KGFsdGVySXRpbi5nZXRTYWlsSWQoKSwgcGFzdmVoKTsKICAgICAgQm9va2xpbmVCZWFuIGJsYiA9IGJsbS5sb2FkQnlQcmltYXJ5S2V5KHZiLmdldEJvb2tJZCgpKTsKICAgICAgQm9va2hlYWRlckJlYW4gYmhiID0gYmhtLmxvYWRCeVByaW1hcnlLZXkoYmxiLmdldEhlYWRJZCgpKTsKICAgICAgYmhiLnNldEl0aW5JZChhbHRlckl0aW4uZ2V0SXRpbklkKCkpOwogICAgICBiaG0uc2F2ZShiaGIpOwogICAgfQoKICAgIGlmIChhdmFpbGFicm93ID09IG51bGwpIHsKICAgICAgYXZhaWxhYnJvdyA9IGF2YWlsYWJtLmNyZWF0ZUF2YWlsYWJpbGl0eUJlYW4oKTsKICAgICAgYXZhaWxhYnJvdy5zZXRTYWlsSWQobmV3IGphdmEubGFuZy5Mb25nKHNhaWxJZCkpOwogICAgICBhdmFpbGFicm93LnNldFBhc3ZlaChwYXN2ZWgpOwogICAgICBhdmFpbGFicm93LnNldEF2YWlsKG5ldyBqYXZhLm1hdGguQmlnRGVjaW1hbCgxMDAwKSk7CiAgICAgIGF2YWlsYWJyb3cuc2V0VW5pdHNpbygwKTsKICAgIH0KICAgIGphdmEudXRpbC5EYXRlIGxkdCA9IG5ldyBqYXZhLnV0aWwuRGF0ZSgpOwogICAgU3lzdGVtLm91dC5wcmludGxuKCJBVlRCTFRSQ0UgKCIgKyBsZHQuZ2V0SG91cnMoKSArICI6IiArIGxkdC5nZXRNaW51dGVzKCkgKwogICAgICAgICAgICAiOiIgKyBsZHQuZ2V0U2Vjb25kcygpICsgIiA+IEFWIEJFQU4gRFVNUCAxIDogIiArIGF2YWlsYWJyb3cudG9TdHJpbmcoKSk7CgogICAgQmlnRGVjaW1hbCBwbHVzbWludXMgPSBudWxsOwogICAgaWYgKHBhc3ZlaC5jb21wYXJlVG8oIlYiKSA9PSAwKSB7CiAgICAgIGRvdWJsZSBtZXRlcnMgPSAoZG91YmxlKSAodmIuZ2V0VmVoTGVuZ3RoKCkubG9uZ1ZhbHVlKCkpOwogICAgICBtZXRlcnMgPSBtZXRlcnMgLyAxMDA7CiAgICAgIHBsdXNtaW51cyA9IG5ldyBCaWdEZWNpbWFsKG1ldGVycyk7CiAgICAgIGF2YWlsYWJyb3cuc2V0VW5pdHNpbyhhdmFpbGFicm93LmdldFVuaXRzaW8oKS5sb25nVmFsdWUoKSArIDEpOwogICAgfSBlbHNlIHsKICAgICAgcGx1c21pbnVzID0gbmV3IEJpZ0RlY2ltYWwobm8pOwogICAgfQogICAgQmlnRGVjaW1hbCB0b3RhbCA9IGF2YWlsYWJyb3cuZ2V0QXZhaWwoKTsKCiAgICB0b3RhbCA9IHRvdGFsLnN1YnRyYWN0KHBsdXNtaW51cyk7CiAgICBhdmFpbGFicm93LnNldEF2YWlsKHRvdGFsKTsKICAgIGF2YWlsYWJtLnNhdmUoYXZhaWxhYnJvdyk7Ci8vICAgICAgICBqYXZhLnV0aWwuRGF0ZSBsZHQ9bmV3IGphdmEudXRpbC5EYXRlKCk7CiAgICBTeXN0ZW0ub3V0LnByaW50bG4oIkFWVEJMVFJDRSAoIiArIGxkdC5nZXRIb3VycygpICsgIjoiICsgbGR0LmdldE1pbnV0ZXMoKSArCiAgICAgICAgICAgICI6IiArIGxkdC5nZXRTZWNvbmRzKCkgKyAiID4gQVYgQkVBTiBEVU1QIDEgOiAiICsgYXZhaWxhYnJvdy50b1N0cmluZygpKTsKCiAgICByZXR1cm4gdG90YWw7CiAgfQoKICBwcm90ZWN0ZWQgQm9va2xpbmVCZWFuIGZpbmRCb29rbGluZShsb25nIGJvb2tpZCkgewogICAgQm9va2xpbmVNYW5hZ2VyIGJsbSA9IEJvb2tsaW5lTWFuYWdlci5nZXRJbnN0YW5jZSgpOwogICAgdHJ5IHsKICAgICAgQm9va2xpbmVCZWFuIGJscm93ID0gYmxtLmxvYWRCeVByaW1hcnlLZXkoYm9va2lkKTsKICAgICAgcmV0dXJuIGJscm93OwogICAgfSBjYXRjaCAoRXhjZXB0aW9uIGRhb2UpIHsKICAgICAgZGJFUlJPUiA9IHRydWU7CiAgICAgIGRiRXJyU3RyID0gZGFvZS5nZXRMb2NhbGl6ZWRNZXNzYWdlKCk7CiAgICAgIGRhb2UucHJpbnRTdGFja1RyYWNlKCk7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH0KCiAgcHJvdGVjdGVkIEl0aW5lbnFWd0JlYW4gZmluZEl0aW5lcmFyeShMb25nIHNhaWxpZCwgTG9uZyBpdGluaWQpIHsKICAgIEl0aW5lbnFWd01hbmFnZXIgdmlld20gPSBJdGluZW5xVndNYW5hZ2VyLmdldEluc3RhbmNlKCk7CiAgICBTdHJpbmdCdWZmZXIgY3JpdGVyaWFTUUwgPSBuZXcgU3RyaW5nQnVmZmVyKCk7CiAgICBjcml0ZXJpYVNRTC5hcHBlbmQoIiBXSEVSRSBTQUlMX0lEPSIgKyBzYWlsaWQudG9TdHJpbmcoKSArICIgQU5EIElUSU5fSUQ9IiArIGl0aW5pZC50b1N0cmluZygpKTsKLy8gICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigiU1FMPiIgKyBjcml0ZXJpYVNRTC50b1N0cmluZygpKTsKICAgIHRyeSB7CiAgICAgIEl0aW5lbnFWd0JlYW5bXSBpdGlucm93cyA9IG51bGw7CiAgICAgIFN0cmluZyBzcWwgPSBudWxsOwogICAgICBpdGlucm93cyA9IHZpZXdtLmxvYWRCeVdoZXJlKGNyaXRlcmlhU1FMLnRvU3RyaW5nKCkpOwogICAgICBpZiAoaXRpbnJvd3MubGVuZ3RoID4gMCkgewogICAgICAgIHJldHVybiBpdGlucm93c1swXTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgfSBjYXRjaCAoRXhjZXB0aW9uIGRhb2UpIHsKICAgICAgZGJFUlJPUiA9IHRydWU7CiAgICAgIGRiRXJyU3RyID0gZGFvZS5nZXRMb2NhbGl6ZWRNZXNzYWdlKCk7CiAgICAgIGRhb2UucHJpbnRTdGFja1RyYWNlKCk7CiAgICAgIHJldHVybiBudWxsOwogICAgfQoKICB9CgogIHByb3RlY3RlZCBDb21wYW5pZXNCZWFuW10gZmV0Y2hHcm91cChTdHJpbmcgY29tcENvZGUpIHRocm93cyBEQU9FeGNlcHRpb24gewoKICAgIFN0cmluZyBzcWwgPSAiIFdIRVJFIENPTVBfQkVMT05HUz0nIiArIGNvbXBDb2RlICsgIicgIjsKCiAgICBDb21wYW5pZXNCZWFuW10gY2IgPSBDb21wYW5pZXNNYW5hZ2VyLmdldEluc3RhbmNlKCkubG9hZEJ5V2hlcmUoc3FsKTsKICAgIHJldHVybiBjYjsKICB9CgogIHByb3RlY3RlZCBDb21wYW5pZXNCZWFuIGZldGNoQ29tcGFueShTdHJpbmcgY29tcENvZGUpIHRocm93cyBEQU9FeGNlcHRpb24gewoKICAgIFN0cmluZyBzcWwgPSAiIFdIRVJFIENPTVBfQ09ERT0nIiArIGNvbXBDb2RlICsgIicgIjsKCiAgICBDb21wYW5pZXNCZWFuW10gY2IgPSBDb21wYW5pZXNNYW5hZ2VyLmdldEluc3RhbmNlKCkubG9hZEJ5V2hlcmUoc3FsKTsKICAgIENvbXBhbmllc0JlYW4gUmVzdWx0ID0gbnVsbDsKICAgIGlmIChjYi5sZW5ndGggPiAwKSB7CiAgICAgIFJlc3VsdCA9IGNiWzBdOwogICAgfQogICAgcmV0dXJuIFJlc3VsdDsKICB9CgogIHByb3RlY3RlZCBJdGluZW5xVndCZWFuIGZldGNoU2FpbGluZyh4bWwubWVzc2FnZXMuU2VydmljZU1lc3NhZ2UuVHJpcERhdGEgY3JGaWVsZHMpIHRocm93cyBEQU9FeGNlcHRpb24gewoKICAgIEl0aW5lbnFWd01hbmFnZXIgbSA9IEl0aW5lbnFWd01hbmFnZXIuZ2V0SW5zdGFuY2UoKTsKICAgIFN0cmluZyBzcWwgPSBudWxsOwogICAgaWYgKGNyRmllbGRzLmhhc0l0aW5lcmFyeUlEKCkpIHsKICAgICAgc3FsID0gU3RyaW5nLmZvcm1hdCgiIHdoZXJlIGl0aW5faWQ9JWQgICIsIGNyRmllbGRzLmdldEl0aW5lcmFyeUlEKCkpOwogICAgfSBlbHNlIHsKICAgICAgc3FsID0gU3RyaW5nLmZvcm1hdCgiIHdoZXJlIGl0aW5faWQ9JWQgICIsIDApOwogICAgfQoKICAgIFN5c3RlbS5vdXQucHJpbnRsbihzcWwpOwoKICAgIEl0aW5lbnFWd0JlYW5bXSByb3dzID0gbnVsbDsKICAgIHJvd3MgPSBtLmxvYWRCeVdoZXJlKHNxbCk7CgogICAgaWYgKHJvd3MubGVuZ3RoID09IDEpIHsKICAgICAgcmV0dXJuIHJvd3NbMF07CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0KCiAgfQoKICBwcm90ZWN0ZWQgSXRpbmVucVZ3QmVhbiBmZXRjaFNhaWxpbmcobG9uZyBpdGluaWQpIHRocm93cyBEQU9FeGNlcHRpb24gewoKICAgIEl0aW5lbnFWd01hbmFnZXIgbSA9IEl0aW5lbnFWd01hbmFnZXIuZ2V0SW5zdGFuY2UoKTsKICAgIFN0cmluZyBzcWwgPSBTdHJpbmcuZm9ybWF0KCIgd2hlcmUgaXRpbl9pZD0lZCAgIiwgaXRpbmlkKTsKICAgIFN5c3RlbS5vdXQucHJpbnRsbihzcWwpOwogICAgSXRpbmVucVZ3QmVhbltdIHJvd3MgPSBudWxsOwogICAgcm93cyA9IG0ubG9hZEJ5V2hlcmUoc3FsKTsKICAgIGlmIChyb3dzLmxlbmd0aCA9PSAxKSB7CiAgICAgIHJldHVybiByb3dzWzBdOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgfQoKICBwcm90ZWN0ZWQgYm9vbGVhbiBjYW5JbnRlcmNoYW5nZShJdGluZW5xVndCZWFuIGZyb21JdGluLCBJdGluZW5xVndCZWFuIHRvSXRpbikgewoKICAgIGlmICh0b0l0aW4uZ2V0U2FpbElkKCkubG9uZ1ZhbHVlKCkgPT0gZnJvbUl0aW4uZ2V0U2FpbElkKCkubG9uZ1ZhbHVlKCkpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICBpZiAodG9JdGluLmdldEl0aW5BdHRyKCkuc3Vic3RyaW5nKDIsIDMpLmVxdWFscygiMSIpKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIEludGVyY2hhbmdlTWFuYWdlciBtID0gSW50ZXJjaGFuZ2VNYW5hZ2VyLmdldEluc3RhbmNlKCk7CiAgICBTdHJpbmdCdWZmZXIgY3JpdGVyaWFTUUwgPSBuZXcgU3RyaW5nQnVmZmVyKCk7CgogICAgU3RyaW5nIGRlcERhdGUgPSB0b0l0aW4uZ2V0RGVwRGF0ZSgpLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDAsIDQpICsgdG9JdGluLmdldERlcERhdGUoKS50b1N0cmluZygpLnN1YnN0cmluZyg1LCA3KSArIHRvSXRpbi5nZXREZXBEYXRlKCkudG9TdHJpbmcoKS5zdWJzdHJpbmcoOCwgMTApOwogICAgY3JpdGVyaWFTUUwuYXBwZW5kKCIgV0hFUkUgRlJEQVRFPD0nIiArIGRlcERhdGUgKyAiJyBBTkQgVE9EQVRFPj0nIiArIGRlcERhdGUgKyAiJyIpOwogICAgY3JpdGVyaWFTUUwuYXBwZW5kKCIgQU5EIExPQ19DT0RFPSciICsgdG9JdGluLmdldEFyckNvZGUoKS50cmltKCkgKyAiJyBBTkQgQUNUSVZFPSdZJyAiKTsKICAgIFN5c3RlbS5vdXQucHJpbnRsbigiU1FMID4gIiArIGNyaXRlcmlhU1FMLnRvU3RyaW5nKCkpOwoKICAgIHRyeSB7CiAgICAgIEludGVyY2hhbmdlQmVhbltdIGludGVycm93cyA9IG51bGw7CiAgICAgIFN0cmluZyBzcWwgPSBudWxsOwogICAgICBpbnRlcnJvd3MgPSBtLmxvYWRCeVdoZXJlKGNyaXRlcmlhU1FMLnRvU3RyaW5nKCkpOwogICAgICBpZiAoaW50ZXJyb3dzLmxlbmd0aCA+IDApIHsKICAgICAgICBmb3IgKEludGVyY2hhbmdlQmVhbiByb3cgOiBpbnRlcnJvd3MpIHsKCiAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4ocm93LmdldEZyY29tcGFueSgpICsgIjoiICsgcm93LmdldFRvY29tcGFueSgpICsgIjoiICsgcm93LmdldEZyaW1vKCkgKyAiOiIgKyByb3cuZ2V0VG9pbW8oKSk7CgogICAgICAgICAgaWYgKHJvdy5nZXRGcmNvbXBhbnkoKS50cmltKCkuZXF1YWxzSWdub3JlQ2FzZSgiOTk5OSIpICYmIHJvdy5nZXRUb2NvbXBhbnkoKS50cmltKCkuZXF1YWxzSWdub3JlQ2FzZSgiOTk5OSIpKSB7CiAgICAgICAgICAgIGlmIChyb3cuZ2V0RnJpbW8oKS50cmltKCkuZXF1YWxzSWdub3JlQ2FzZSgiOTk5OSIpICYmIHJvdy5nZXRUb2ltbygpLnRyaW0oKS5lcXVhbHNJZ25vcmVDYXNlKCI5OTk5IikpIHsKICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgICAgaWYgKCghcm93LmdldEZyY29tcGFueSgpLnRyaW0oKS5lcXVhbHMoIjk5OTkiKSkgJiYgKCFyb3cuZ2V0RnJjb21wYW55KCkudHJpbSgpLmVxdWFscyhmcm9tSXRpbi5nZXRDb21wQ29kZSgpLnRyaW0oKSkpKSB7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfQogICAgICAgICAgaWYgKCghcm93LmdldFRvY29tcGFueSgpLnRyaW0oKS5lcXVhbHMoIjk5OTkiKSkgJiYgKCFyb3cuZ2V0VG9jb21wYW55KCkudHJpbSgpLmVxdWFscyh0b0l0aW4uZ2V0Q29tcENvZGUoKS50cmltKCkpKSkgewogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgIH0KICAgICAgICAgIGlmICgoIXJvdy5nZXRGcmltbygpLnRyaW0oKS5lcXVhbHMoIjk5OTkiKSkgJiYgKCFyb3cuZ2V0RnJpbW8oKS50cmltKCkuZXF1YWxzKGZyb21JdGluLmdldFZlc3NJbW8oKS50cmltKCkpKSkgewogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgIH0KICAgICAgICAgIGlmICgoIXJvdy5nZXRUb2ltbygpLnRyaW0oKS5lcXVhbHMoIjk5OTkiKSkgJiYgKCFyb3cuZ2V0VG9pbW8oKS50cmltKCkuZXF1YWxzKHRvSXRpbi5nZXRWZXNzSW1vKCkudHJpbSgpKSkpIHsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9IGNhdGNoIChFeGNlcHRpb24gZGFvZSkgewogICAgICBkYkVSUk9SID0gdHJ1ZTsKICAgICAgZGJFcnJTdHIgPSBkYW9lLmdldExvY2FsaXplZE1lc3NhZ2UoKTsKICAgICAgZGFvZS5wcmludFN0YWNrVHJhY2UoKTsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogICAgcmV0dXJuIGZhbHNlOwogIH0KCn0=</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICBib29raW5nLmdldFRpCg==</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgYm9va2xpbmVyb3cuc2V0VGlja0lzcyhvcGVuVGlja2V0LmdldFRpY2tJc3MoKSk7Cg==</text>
      </register>
      <register name="3" type="4">
        <text encoding="base64">ICAgICAgaWYgKGJhY2t1cERhdGVJc3N1ZSA9PSBudWxsKSB7CiAgICAgIENhbGVuZGFyIGNhbCA9IENhbGVuZGFyLmdldEluc3RhbmNlKCk7CiAgICAgIFNpbXBsZURhdGVGb3JtYXQgc2RmID0gbmV3IFNpbXBsZURhdGVGb3JtYXQoInl5eXlNTWRkIik7CiAgICAgIGJhY2t1cERhdGVJc3N1ZSA9IHNkZi5mb3JtYXQoY2FsLmdldFRpbWUoKSk7CiAgICB9CiAgICBib29rbGluZXJvdy5zZXRUaWNrSXNzKGJhY2t1cERhdGVJc3N1ZSk7</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="7" type="4">
        <text>pseg.getTicketIssueDate()</text>
      </register>
      <register name="x" type="4">
        <text>pseg.getTicketIssueDate()</text>
      </register>
      <register name="8" type="4">
        <text>getTicketIssueDate</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name=":" type="4">
        <text>action Find</text>
      </register>
    </registers>
    <search>
      <last-search>getLeade</last-search>
      <last-offset />
      <last-pattern>getLeade</last-pattern>
      <last-replace>~</last-replace>
      <last-substitute>getLeade</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>getLeade</entry>
      </history-search>
      <history-cmd>
        <entry>action TabShiftActions.StretchUp</entry>
        <entry>action SplitVertically</entry>
        <entry>action NextTab</entry>
        <entry>action ToggleBookmark</entry>
        <entry>1530</entry>
        <entry>action RenameElement</entry>
        <entry>action AceAction</entry>
        <entry>1833</entry>
        <entry>action ReformatCode</entry>
        <entry>action $SelectAll</entry>
        <entry>action MoveEditorToOppositeTabGroup</entry>
        <entry>action SaveAll</entry>
        <entry>action FileStructurePopup</entry>
        <entry>action PreviousTab</entry>
        <entry>action ShowBookmarks</entry>
        <entry encoding="base64">JzwsJz5hY3Rpb24gRmluZA==</entry>
        <entry>action GotoDeclaration</entry>
        <entry>action GotoFile</entry>
        <entry>action FindUsages</entry>
        <entry>action Find</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed L</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>shift pressed ENTER</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>